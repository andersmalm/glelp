// GLELP, This file is generated
#include "glelp_glcorearb.h"
#include "../glelp.h"


//
#ifdef define_core_1_0
#ifdef using_glCullFace
PFNGLCULLFACEPROC glCullFace;
#endif
#ifdef using_glFrontFace
PFNGLFRONTFACEPROC glFrontFace;
#endif
#ifdef using_glHint
PFNGLHINTPROC glHint;
#endif
#ifdef using_glLineWidth
PFNGLLINEWIDTHPROC glLineWidth;
#endif
#ifdef using_glPointSize
PFNGLPOINTSIZEPROC glPointSize;
#endif
#ifdef using_glPolygonMode
PFNGLPOLYGONMODEPROC glPolygonMode;
#endif
#ifdef using_glScissor
PFNGLSCISSORPROC glScissor;
#endif
#ifdef using_glTexParameterf
PFNGLTEXPARAMETERFPROC glTexParameterf;
#endif
#ifdef using_glTexParameterfv
PFNGLTEXPARAMETERFVPROC glTexParameterfv;
#endif
#ifdef using_glTexParameteri
PFNGLTEXPARAMETERIPROC glTexParameteri;
#endif
#ifdef using_glTexParameteriv
PFNGLTEXPARAMETERIVPROC glTexParameteriv;
#endif
#ifdef using_glTexImage1D
PFNGLTEXIMAGE1DPROC glTexImage1D;
#endif
#ifdef using_glTexImage2D
PFNGLTEXIMAGE2DPROC glTexImage2D;
#endif
#ifdef using_glDrawBuffer
PFNGLDRAWBUFFERPROC glDrawBuffer;
#endif
#ifdef using_glClear
PFNGLCLEARPROC glClear;
#endif
#ifdef using_glClearColor
PFNGLCLEARCOLORPROC glClearColor;
#endif
#ifdef using_glClearStencil
PFNGLCLEARSTENCILPROC glClearStencil;
#endif
#ifdef using_glClearDepth
PFNGLCLEARDEPTHPROC glClearDepth;
#endif
#ifdef using_glStencilMask
PFNGLSTENCILMASKPROC glStencilMask;
#endif
#ifdef using_glColorMask
PFNGLCOLORMASKPROC glColorMask;
#endif
#ifdef using_glDepthMask
PFNGLDEPTHMASKPROC glDepthMask;
#endif
#ifdef using_glDisable
PFNGLDISABLEPROC glDisable;
#endif
#ifdef using_glEnable
PFNGLENABLEPROC glEnable;
#endif
#ifdef using_glFinish
PFNGLFINISHPROC glFinish;
#endif
#ifdef using_glFlush
PFNGLFLUSHPROC glFlush;
#endif
#ifdef using_glBlendFunc
PFNGLBLENDFUNCPROC glBlendFunc;
#endif
#ifdef using_glLogicOp
PFNGLLOGICOPPROC glLogicOp;
#endif
#ifdef using_glStencilFunc
PFNGLSTENCILFUNCPROC glStencilFunc;
#endif
#ifdef using_glStencilOp
PFNGLSTENCILOPPROC glStencilOp;
#endif
#ifdef using_glDepthFunc
PFNGLDEPTHFUNCPROC glDepthFunc;
#endif
#ifdef using_glPixelStoref
PFNGLPIXELSTOREFPROC glPixelStoref;
#endif
#ifdef using_glPixelStorei
PFNGLPIXELSTOREIPROC glPixelStorei;
#endif
#ifdef using_glReadBuffer
PFNGLREADBUFFERPROC glReadBuffer;
#endif
#ifdef using_glReadPixels
PFNGLREADPIXELSPROC glReadPixels;
#endif
#ifdef using_glGetBooleanv
PFNGLGETBOOLEANVPROC glGetBooleanv;
#endif
#ifdef using_glGetDoublev
PFNGLGETDOUBLEVPROC glGetDoublev;
#endif
#ifdef using_glGetError
PFNGLGETERRORPROC glGetError;
#endif
#ifdef using_glGetFloatv
PFNGLGETFLOATVPROC glGetFloatv;
#endif
#ifdef using_glGetIntegerv
PFNGLGETINTEGERVPROC glGetIntegerv;
#endif
#ifdef using_glGetString
PFNGLGETSTRINGPROC glGetString;
#endif
#ifdef using_glGetTexImage
PFNGLGETTEXIMAGEPROC glGetTexImage;
#endif
#ifdef using_glGetTexParameterfv
PFNGLGETTEXPARAMETERFVPROC glGetTexParameterfv;
#endif
#ifdef using_glGetTexParameteriv
PFNGLGETTEXPARAMETERIVPROC glGetTexParameteriv;
#endif
#ifdef using_glGetTexLevelParameterfv
PFNGLGETTEXLEVELPARAMETERFVPROC glGetTexLevelParameterfv;
#endif
#ifdef using_glGetTexLevelParameteriv
PFNGLGETTEXLEVELPARAMETERIVPROC glGetTexLevelParameteriv;
#endif
#ifdef using_glIsEnabled
PFNGLISENABLEDPROC glIsEnabled;
#endif
#ifdef using_glDepthRange
PFNGLDEPTHRANGEPROC glDepthRange;
#endif
#ifdef using_glViewport
PFNGLVIEWPORTPROC glViewport;
#endif

#endif


//
#ifdef define_core_1_1
#ifdef using_glDrawArrays
PFNGLDRAWARRAYSPROC glDrawArrays;
#endif
#ifdef using_glDrawElements
PFNGLDRAWELEMENTSPROC glDrawElements;
#endif
#ifdef using_glGetPointerv
PFNGLGETPOINTERVPROC glGetPointerv;
#endif
#ifdef using_glPolygonOffset
PFNGLPOLYGONOFFSETPROC glPolygonOffset;
#endif
#ifdef using_glCopyTexImage1D
PFNGLCOPYTEXIMAGE1DPROC glCopyTexImage1D;
#endif
#ifdef using_glCopyTexImage2D
PFNGLCOPYTEXIMAGE2DPROC glCopyTexImage2D;
#endif
#ifdef using_glCopyTexSubImage1D
PFNGLCOPYTEXSUBIMAGE1DPROC glCopyTexSubImage1D;
#endif
#ifdef using_glCopyTexSubImage2D
PFNGLCOPYTEXSUBIMAGE2DPROC glCopyTexSubImage2D;
#endif
#ifdef using_glTexSubImage1D
PFNGLTEXSUBIMAGE1DPROC glTexSubImage1D;
#endif
#ifdef using_glTexSubImage2D
PFNGLTEXSUBIMAGE2DPROC glTexSubImage2D;
#endif
#ifdef using_glBindTexture
PFNGLBINDTEXTUREPROC glBindTexture;
#endif
#ifdef using_glDeleteTextures
PFNGLDELETETEXTURESPROC glDeleteTextures;
#endif
#ifdef using_glGenTextures
PFNGLGENTEXTURESPROC glGenTextures;
#endif
#ifdef using_glIsTexture
PFNGLISTEXTUREPROC glIsTexture;
#endif

#endif


//
#ifdef define_core_1_2
#ifdef using_glDrawRangeElements
PFNGLDRAWRANGEELEMENTSPROC glDrawRangeElements;
#endif
#ifdef using_glTexImage3D
PFNGLTEXIMAGE3DPROC glTexImage3D;
#endif
#ifdef using_glTexSubImage3D
PFNGLTEXSUBIMAGE3DPROC glTexSubImage3D;
#endif
#ifdef using_glCopyTexSubImage3D
PFNGLCOPYTEXSUBIMAGE3DPROC glCopyTexSubImage3D;
#endif

#endif


//
#ifdef define_core_1_3
#ifdef using_glActiveTexture
PFNGLACTIVETEXTUREPROC glActiveTexture;
#endif
#ifdef using_glSampleCoverage
PFNGLSAMPLECOVERAGEPROC glSampleCoverage;
#endif
#ifdef using_glCompressedTexImage3D
PFNGLCOMPRESSEDTEXIMAGE3DPROC glCompressedTexImage3D;
#endif
#ifdef using_glCompressedTexImage2D
PFNGLCOMPRESSEDTEXIMAGE2DPROC glCompressedTexImage2D;
#endif
#ifdef using_glCompressedTexImage1D
PFNGLCOMPRESSEDTEXIMAGE1DPROC glCompressedTexImage1D;
#endif
#ifdef using_glCompressedTexSubImage3D
PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC glCompressedTexSubImage3D;
#endif
#ifdef using_glCompressedTexSubImage2D
PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC glCompressedTexSubImage2D;
#endif
#ifdef using_glCompressedTexSubImage1D
PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC glCompressedTexSubImage1D;
#endif
#ifdef using_glGetCompressedTexImage
PFNGLGETCOMPRESSEDTEXIMAGEPROC glGetCompressedTexImage;
#endif

#endif


//
#ifdef define_core_1_4
#ifdef using_glBlendFuncSeparate
PFNGLBLENDFUNCSEPARATEPROC glBlendFuncSeparate;
#endif
#ifdef using_glMultiDrawArrays
PFNGLMULTIDRAWARRAYSPROC glMultiDrawArrays;
#endif
#ifdef using_glMultiDrawElements
PFNGLMULTIDRAWELEMENTSPROC glMultiDrawElements;
#endif
#ifdef using_glPointParameterf
PFNGLPOINTPARAMETERFPROC glPointParameterf;
#endif
#ifdef using_glPointParameterfv
PFNGLPOINTPARAMETERFVPROC glPointParameterfv;
#endif
#ifdef using_glPointParameteri
PFNGLPOINTPARAMETERIPROC glPointParameteri;
#endif
#ifdef using_glPointParameteriv
PFNGLPOINTPARAMETERIVPROC glPointParameteriv;
#endif
#ifdef using_glBlendColor
PFNGLBLENDCOLORPROC glBlendColor;
#endif
#ifdef using_glBlendEquation
PFNGLBLENDEQUATIONPROC glBlendEquation;
#endif

#endif


//
#ifdef define_core_1_5
#ifdef using_glGenQueries
PFNGLGENQUERIESPROC glGenQueries;
#endif
#ifdef using_glDeleteQueries
PFNGLDELETEQUERIESPROC glDeleteQueries;
#endif
#ifdef using_glIsQuery
PFNGLISQUERYPROC glIsQuery;
#endif
#ifdef using_glBeginQuery
PFNGLBEGINQUERYPROC glBeginQuery;
#endif
#ifdef using_glEndQuery
PFNGLENDQUERYPROC glEndQuery;
#endif
#ifdef using_glGetQueryiv
PFNGLGETQUERYIVPROC glGetQueryiv;
#endif
#ifdef using_glGetQueryObjectiv
PFNGLGETQUERYOBJECTIVPROC glGetQueryObjectiv;
#endif
#ifdef using_glGetQueryObjectuiv
PFNGLGETQUERYOBJECTUIVPROC glGetQueryObjectuiv;
#endif
#ifdef using_glBindBuffer
PFNGLBINDBUFFERPROC glBindBuffer;
#endif
#ifdef using_glDeleteBuffers
PFNGLDELETEBUFFERSPROC glDeleteBuffers;
#endif
#ifdef using_glGenBuffers
PFNGLGENBUFFERSPROC glGenBuffers;
#endif
#ifdef using_glIsBuffer
PFNGLISBUFFERPROC glIsBuffer;
#endif
#ifdef using_glBufferData
PFNGLBUFFERDATAPROC glBufferData;
#endif
#ifdef using_glBufferSubData
PFNGLBUFFERSUBDATAPROC glBufferSubData;
#endif
#ifdef using_glGetBufferSubData
PFNGLGETBUFFERSUBDATAPROC glGetBufferSubData;
#endif
#ifdef using_glMapBuffer
PFNGLMAPBUFFERPROC glMapBuffer;
#endif
#ifdef using_glUnmapBuffer
PFNGLUNMAPBUFFERPROC glUnmapBuffer;
#endif
#ifdef using_glGetBufferParameteriv
PFNGLGETBUFFERPARAMETERIVPROC glGetBufferParameteriv;
#endif
#ifdef using_glGetBufferPointerv
PFNGLGETBUFFERPOINTERVPROC glGetBufferPointerv;
#endif

#endif


//
#ifdef define_core_2_0
#ifdef using_glBlendEquationSeparate
PFNGLBLENDEQUATIONSEPARATEPROC glBlendEquationSeparate;
#endif
#ifdef using_glDrawBuffers
PFNGLDRAWBUFFERSPROC glDrawBuffers;
#endif
#ifdef using_glStencilOpSeparate
PFNGLSTENCILOPSEPARATEPROC glStencilOpSeparate;
#endif
#ifdef using_glStencilFuncSeparate
PFNGLSTENCILFUNCSEPARATEPROC glStencilFuncSeparate;
#endif
#ifdef using_glStencilMaskSeparate
PFNGLSTENCILMASKSEPARATEPROC glStencilMaskSeparate;
#endif
#ifdef using_glAttachShader
PFNGLATTACHSHADERPROC glAttachShader;
#endif
#ifdef using_glBindAttribLocation
PFNGLBINDATTRIBLOCATIONPROC glBindAttribLocation;
#endif
#ifdef using_glCompileShader
PFNGLCOMPILESHADERPROC glCompileShader;
#endif
#ifdef using_glCreateProgram
PFNGLCREATEPROGRAMPROC glCreateProgram;
#endif
#ifdef using_glCreateShader
PFNGLCREATESHADERPROC glCreateShader;
#endif
#ifdef using_glDeleteProgram
PFNGLDELETEPROGRAMPROC glDeleteProgram;
#endif
#ifdef using_glDeleteShader
PFNGLDELETESHADERPROC glDeleteShader;
#endif
#ifdef using_glDetachShader
PFNGLDETACHSHADERPROC glDetachShader;
#endif
#ifdef using_glDisableVertexAttribArray
PFNGLDISABLEVERTEXATTRIBARRAYPROC glDisableVertexAttribArray;
#endif
#ifdef using_glEnableVertexAttribArray
PFNGLENABLEVERTEXATTRIBARRAYPROC glEnableVertexAttribArray;
#endif
#ifdef using_glGetActiveAttrib
PFNGLGETACTIVEATTRIBPROC glGetActiveAttrib;
#endif
#ifdef using_glGetActiveUniform
PFNGLGETACTIVEUNIFORMPROC glGetActiveUniform;
#endif
#ifdef using_glGetAttachedShaders
PFNGLGETATTACHEDSHADERSPROC glGetAttachedShaders;
#endif
#ifdef using_glGetAttribLocation
PFNGLGETATTRIBLOCATIONPROC glGetAttribLocation;
#endif
#ifdef using_glGetProgramiv
PFNGLGETPROGRAMIVPROC glGetProgramiv;
#endif
#ifdef using_glGetProgramInfoLog
PFNGLGETPROGRAMINFOLOGPROC glGetProgramInfoLog;
#endif
#ifdef using_glGetShaderiv
PFNGLGETSHADERIVPROC glGetShaderiv;
#endif
#ifdef using_glGetShaderInfoLog
PFNGLGETSHADERINFOLOGPROC glGetShaderInfoLog;
#endif
#ifdef using_glGetShaderSource
PFNGLGETSHADERSOURCEPROC glGetShaderSource;
#endif
#ifdef using_glGetUniformLocation
PFNGLGETUNIFORMLOCATIONPROC glGetUniformLocation;
#endif
#ifdef using_glGetUniformfv
PFNGLGETUNIFORMFVPROC glGetUniformfv;
#endif
#ifdef using_glGetUniformiv
PFNGLGETUNIFORMIVPROC glGetUniformiv;
#endif
#ifdef using_glGetVertexAttribdv
PFNGLGETVERTEXATTRIBDVPROC glGetVertexAttribdv;
#endif
#ifdef using_glGetVertexAttribfv
PFNGLGETVERTEXATTRIBFVPROC glGetVertexAttribfv;
#endif
#ifdef using_glGetVertexAttribiv
PFNGLGETVERTEXATTRIBIVPROC glGetVertexAttribiv;
#endif
#ifdef using_glGetVertexAttribPointerv
PFNGLGETVERTEXATTRIBPOINTERVPROC glGetVertexAttribPointerv;
#endif
#ifdef using_glIsProgram
PFNGLISPROGRAMPROC glIsProgram;
#endif
#ifdef using_glIsShader
PFNGLISSHADERPROC glIsShader;
#endif
#ifdef using_glLinkProgram
PFNGLLINKPROGRAMPROC glLinkProgram;
#endif
#ifdef using_glShaderSource
PFNGLSHADERSOURCEPROC glShaderSource;
#endif
#ifdef using_glUseProgram
PFNGLUSEPROGRAMPROC glUseProgram;
#endif
#ifdef using_glUniform1f
PFNGLUNIFORM1FPROC glUniform1f;
#endif
#ifdef using_glUniform2f
PFNGLUNIFORM2FPROC glUniform2f;
#endif
#ifdef using_glUniform3f
PFNGLUNIFORM3FPROC glUniform3f;
#endif
#ifdef using_glUniform4f
PFNGLUNIFORM4FPROC glUniform4f;
#endif
#ifdef using_glUniform1i
PFNGLUNIFORM1IPROC glUniform1i;
#endif
#ifdef using_glUniform2i
PFNGLUNIFORM2IPROC glUniform2i;
#endif
#ifdef using_glUniform3i
PFNGLUNIFORM3IPROC glUniform3i;
#endif
#ifdef using_glUniform4i
PFNGLUNIFORM4IPROC glUniform4i;
#endif
#ifdef using_glUniform1fv
PFNGLUNIFORM1FVPROC glUniform1fv;
#endif
#ifdef using_glUniform2fv
PFNGLUNIFORM2FVPROC glUniform2fv;
#endif
#ifdef using_glUniform3fv
PFNGLUNIFORM3FVPROC glUniform3fv;
#endif
#ifdef using_glUniform4fv
PFNGLUNIFORM4FVPROC glUniform4fv;
#endif
#ifdef using_glUniform1iv
PFNGLUNIFORM1IVPROC glUniform1iv;
#endif
#ifdef using_glUniform2iv
PFNGLUNIFORM2IVPROC glUniform2iv;
#endif
#ifdef using_glUniform3iv
PFNGLUNIFORM3IVPROC glUniform3iv;
#endif
#ifdef using_glUniform4iv
PFNGLUNIFORM4IVPROC glUniform4iv;
#endif
#ifdef using_glUniformMatrix2fv
PFNGLUNIFORMMATRIX2FVPROC glUniformMatrix2fv;
#endif
#ifdef using_glUniformMatrix3fv
PFNGLUNIFORMMATRIX3FVPROC glUniformMatrix3fv;
#endif
#ifdef using_glUniformMatrix4fv
PFNGLUNIFORMMATRIX4FVPROC glUniformMatrix4fv;
#endif
#ifdef using_glValidateProgram
PFNGLVALIDATEPROGRAMPROC glValidateProgram;
#endif
#ifdef using_glVertexAttrib1d
PFNGLVERTEXATTRIB1DPROC glVertexAttrib1d;
#endif
#ifdef using_glVertexAttrib1dv
PFNGLVERTEXATTRIB1DVPROC glVertexAttrib1dv;
#endif
#ifdef using_glVertexAttrib1f
PFNGLVERTEXATTRIB1FPROC glVertexAttrib1f;
#endif
#ifdef using_glVertexAttrib1fv
PFNGLVERTEXATTRIB1FVPROC glVertexAttrib1fv;
#endif
#ifdef using_glVertexAttrib1s
PFNGLVERTEXATTRIB1SPROC glVertexAttrib1s;
#endif
#ifdef using_glVertexAttrib1sv
PFNGLVERTEXATTRIB1SVPROC glVertexAttrib1sv;
#endif
#ifdef using_glVertexAttrib2d
PFNGLVERTEXATTRIB2DPROC glVertexAttrib2d;
#endif
#ifdef using_glVertexAttrib2dv
PFNGLVERTEXATTRIB2DVPROC glVertexAttrib2dv;
#endif
#ifdef using_glVertexAttrib2f
PFNGLVERTEXATTRIB2FPROC glVertexAttrib2f;
#endif
#ifdef using_glVertexAttrib2fv
PFNGLVERTEXATTRIB2FVPROC glVertexAttrib2fv;
#endif
#ifdef using_glVertexAttrib2s
PFNGLVERTEXATTRIB2SPROC glVertexAttrib2s;
#endif
#ifdef using_glVertexAttrib2sv
PFNGLVERTEXATTRIB2SVPROC glVertexAttrib2sv;
#endif
#ifdef using_glVertexAttrib3d
PFNGLVERTEXATTRIB3DPROC glVertexAttrib3d;
#endif
#ifdef using_glVertexAttrib3dv
PFNGLVERTEXATTRIB3DVPROC glVertexAttrib3dv;
#endif
#ifdef using_glVertexAttrib3f
PFNGLVERTEXATTRIB3FPROC glVertexAttrib3f;
#endif
#ifdef using_glVertexAttrib3fv
PFNGLVERTEXATTRIB3FVPROC glVertexAttrib3fv;
#endif
#ifdef using_glVertexAttrib3s
PFNGLVERTEXATTRIB3SPROC glVertexAttrib3s;
#endif
#ifdef using_glVertexAttrib3sv
PFNGLVERTEXATTRIB3SVPROC glVertexAttrib3sv;
#endif
#ifdef using_glVertexAttrib4Nbv
PFNGLVERTEXATTRIB4NBVPROC glVertexAttrib4Nbv;
#endif
#ifdef using_glVertexAttrib4Niv
PFNGLVERTEXATTRIB4NIVPROC glVertexAttrib4Niv;
#endif
#ifdef using_glVertexAttrib4Nsv
PFNGLVERTEXATTRIB4NSVPROC glVertexAttrib4Nsv;
#endif
#ifdef using_glVertexAttrib4Nub
PFNGLVERTEXATTRIB4NUBPROC glVertexAttrib4Nub;
#endif
#ifdef using_glVertexAttrib4Nubv
PFNGLVERTEXATTRIB4NUBVPROC glVertexAttrib4Nubv;
#endif
#ifdef using_glVertexAttrib4Nuiv
PFNGLVERTEXATTRIB4NUIVPROC glVertexAttrib4Nuiv;
#endif
#ifdef using_glVertexAttrib4Nusv
PFNGLVERTEXATTRIB4NUSVPROC glVertexAttrib4Nusv;
#endif
#ifdef using_glVertexAttrib4bv
PFNGLVERTEXATTRIB4BVPROC glVertexAttrib4bv;
#endif
#ifdef using_glVertexAttrib4d
PFNGLVERTEXATTRIB4DPROC glVertexAttrib4d;
#endif
#ifdef using_glVertexAttrib4dv
PFNGLVERTEXATTRIB4DVPROC glVertexAttrib4dv;
#endif
#ifdef using_glVertexAttrib4f
PFNGLVERTEXATTRIB4FPROC glVertexAttrib4f;
#endif
#ifdef using_glVertexAttrib4fv
PFNGLVERTEXATTRIB4FVPROC glVertexAttrib4fv;
#endif
#ifdef using_glVertexAttrib4iv
PFNGLVERTEXATTRIB4IVPROC glVertexAttrib4iv;
#endif
#ifdef using_glVertexAttrib4s
PFNGLVERTEXATTRIB4SPROC glVertexAttrib4s;
#endif
#ifdef using_glVertexAttrib4sv
PFNGLVERTEXATTRIB4SVPROC glVertexAttrib4sv;
#endif
#ifdef using_glVertexAttrib4ubv
PFNGLVERTEXATTRIB4UBVPROC glVertexAttrib4ubv;
#endif
#ifdef using_glVertexAttrib4uiv
PFNGLVERTEXATTRIB4UIVPROC glVertexAttrib4uiv;
#endif
#ifdef using_glVertexAttrib4usv
PFNGLVERTEXATTRIB4USVPROC glVertexAttrib4usv;
#endif
#ifdef using_glVertexAttribPointer
PFNGLVERTEXATTRIBPOINTERPROC glVertexAttribPointer;
#endif

#endif


//
#ifdef define_core_2_1
#ifdef using_glUniformMatrix2x3fv
PFNGLUNIFORMMATRIX2X3FVPROC glUniformMatrix2x3fv;
#endif
#ifdef using_glUniformMatrix3x2fv
PFNGLUNIFORMMATRIX3X2FVPROC glUniformMatrix3x2fv;
#endif
#ifdef using_glUniformMatrix2x4fv
PFNGLUNIFORMMATRIX2X4FVPROC glUniformMatrix2x4fv;
#endif
#ifdef using_glUniformMatrix4x2fv
PFNGLUNIFORMMATRIX4X2FVPROC glUniformMatrix4x2fv;
#endif
#ifdef using_glUniformMatrix3x4fv
PFNGLUNIFORMMATRIX3X4FVPROC glUniformMatrix3x4fv;
#endif
#ifdef using_glUniformMatrix4x3fv
PFNGLUNIFORMMATRIX4X3FVPROC glUniformMatrix4x3fv;
#endif

#endif


//
#ifdef define_core_3_0
#ifdef using_glColorMaski
PFNGLCOLORMASKIPROC glColorMaski;
#endif
#ifdef using_glGetBooleani_v
PFNGLGETBOOLEANI_VPROC glGetBooleani_v;
#endif
#ifdef using_glGetIntegeri_v
PFNGLGETINTEGERI_VPROC glGetIntegeri_v;
#endif
#ifdef using_glEnablei
PFNGLENABLEIPROC glEnablei;
#endif
#ifdef using_glDisablei
PFNGLDISABLEIPROC glDisablei;
#endif
#ifdef using_glIsEnabledi
PFNGLISENABLEDIPROC glIsEnabledi;
#endif
#ifdef using_glBeginTransformFeedback
PFNGLBEGINTRANSFORMFEEDBACKPROC glBeginTransformFeedback;
#endif
#ifdef using_glEndTransformFeedback
PFNGLENDTRANSFORMFEEDBACKPROC glEndTransformFeedback;
#endif
#ifdef using_glBindBufferRange
PFNGLBINDBUFFERRANGEPROC glBindBufferRange;
#endif
#ifdef using_glBindBufferBase
PFNGLBINDBUFFERBASEPROC glBindBufferBase;
#endif
#ifdef using_glTransformFeedbackVaryings
PFNGLTRANSFORMFEEDBACKVARYINGSPROC glTransformFeedbackVaryings;
#endif
#ifdef using_glGetTransformFeedbackVarying
PFNGLGETTRANSFORMFEEDBACKVARYINGPROC glGetTransformFeedbackVarying;
#endif
#ifdef using_glClampColor
PFNGLCLAMPCOLORPROC glClampColor;
#endif
#ifdef using_glBeginConditionalRender
PFNGLBEGINCONDITIONALRENDERPROC glBeginConditionalRender;
#endif
#ifdef using_glEndConditionalRender
PFNGLENDCONDITIONALRENDERPROC glEndConditionalRender;
#endif
#ifdef using_glVertexAttribIPointer
PFNGLVERTEXATTRIBIPOINTERPROC glVertexAttribIPointer;
#endif
#ifdef using_glGetVertexAttribIiv
PFNGLGETVERTEXATTRIBIIVPROC glGetVertexAttribIiv;
#endif
#ifdef using_glGetVertexAttribIuiv
PFNGLGETVERTEXATTRIBIUIVPROC glGetVertexAttribIuiv;
#endif
#ifdef using_glVertexAttribI1i
PFNGLVERTEXATTRIBI1IPROC glVertexAttribI1i;
#endif
#ifdef using_glVertexAttribI2i
PFNGLVERTEXATTRIBI2IPROC glVertexAttribI2i;
#endif
#ifdef using_glVertexAttribI3i
PFNGLVERTEXATTRIBI3IPROC glVertexAttribI3i;
#endif
#ifdef using_glVertexAttribI4i
PFNGLVERTEXATTRIBI4IPROC glVertexAttribI4i;
#endif
#ifdef using_glVertexAttribI1ui
PFNGLVERTEXATTRIBI1UIPROC glVertexAttribI1ui;
#endif
#ifdef using_glVertexAttribI2ui
PFNGLVERTEXATTRIBI2UIPROC glVertexAttribI2ui;
#endif
#ifdef using_glVertexAttribI3ui
PFNGLVERTEXATTRIBI3UIPROC glVertexAttribI3ui;
#endif
#ifdef using_glVertexAttribI4ui
PFNGLVERTEXATTRIBI4UIPROC glVertexAttribI4ui;
#endif
#ifdef using_glVertexAttribI1iv
PFNGLVERTEXATTRIBI1IVPROC glVertexAttribI1iv;
#endif
#ifdef using_glVertexAttribI2iv
PFNGLVERTEXATTRIBI2IVPROC glVertexAttribI2iv;
#endif
#ifdef using_glVertexAttribI3iv
PFNGLVERTEXATTRIBI3IVPROC glVertexAttribI3iv;
#endif
#ifdef using_glVertexAttribI4iv
PFNGLVERTEXATTRIBI4IVPROC glVertexAttribI4iv;
#endif
#ifdef using_glVertexAttribI1uiv
PFNGLVERTEXATTRIBI1UIVPROC glVertexAttribI1uiv;
#endif
#ifdef using_glVertexAttribI2uiv
PFNGLVERTEXATTRIBI2UIVPROC glVertexAttribI2uiv;
#endif
#ifdef using_glVertexAttribI3uiv
PFNGLVERTEXATTRIBI3UIVPROC glVertexAttribI3uiv;
#endif
#ifdef using_glVertexAttribI4uiv
PFNGLVERTEXATTRIBI4UIVPROC glVertexAttribI4uiv;
#endif
#ifdef using_glVertexAttribI4bv
PFNGLVERTEXATTRIBI4BVPROC glVertexAttribI4bv;
#endif
#ifdef using_glVertexAttribI4sv
PFNGLVERTEXATTRIBI4SVPROC glVertexAttribI4sv;
#endif
#ifdef using_glVertexAttribI4ubv
PFNGLVERTEXATTRIBI4UBVPROC glVertexAttribI4ubv;
#endif
#ifdef using_glVertexAttribI4usv
PFNGLVERTEXATTRIBI4USVPROC glVertexAttribI4usv;
#endif
#ifdef using_glGetUniformuiv
PFNGLGETUNIFORMUIVPROC glGetUniformuiv;
#endif
#ifdef using_glBindFragDataLocation
PFNGLBINDFRAGDATALOCATIONPROC glBindFragDataLocation;
#endif
#ifdef using_glGetFragDataLocation
PFNGLGETFRAGDATALOCATIONPROC glGetFragDataLocation;
#endif
#ifdef using_glUniform1ui
PFNGLUNIFORM1UIPROC glUniform1ui;
#endif
#ifdef using_glUniform2ui
PFNGLUNIFORM2UIPROC glUniform2ui;
#endif
#ifdef using_glUniform3ui
PFNGLUNIFORM3UIPROC glUniform3ui;
#endif
#ifdef using_glUniform4ui
PFNGLUNIFORM4UIPROC glUniform4ui;
#endif
#ifdef using_glUniform1uiv
PFNGLUNIFORM1UIVPROC glUniform1uiv;
#endif
#ifdef using_glUniform2uiv
PFNGLUNIFORM2UIVPROC glUniform2uiv;
#endif
#ifdef using_glUniform3uiv
PFNGLUNIFORM3UIVPROC glUniform3uiv;
#endif
#ifdef using_glUniform4uiv
PFNGLUNIFORM4UIVPROC glUniform4uiv;
#endif
#ifdef using_glTexParameterIiv
PFNGLTEXPARAMETERIIVPROC glTexParameterIiv;
#endif
#ifdef using_glTexParameterIuiv
PFNGLTEXPARAMETERIUIVPROC glTexParameterIuiv;
#endif
#ifdef using_glGetTexParameterIiv
PFNGLGETTEXPARAMETERIIVPROC glGetTexParameterIiv;
#endif
#ifdef using_glGetTexParameterIuiv
PFNGLGETTEXPARAMETERIUIVPROC glGetTexParameterIuiv;
#endif
#ifdef using_glClearBufferiv
PFNGLCLEARBUFFERIVPROC glClearBufferiv;
#endif
#ifdef using_glClearBufferuiv
PFNGLCLEARBUFFERUIVPROC glClearBufferuiv;
#endif
#ifdef using_glClearBufferfv
PFNGLCLEARBUFFERFVPROC glClearBufferfv;
#endif
#ifdef using_glClearBufferfi
PFNGLCLEARBUFFERFIPROC glClearBufferfi;
#endif
#ifdef using_glGetStringi
PFNGLGETSTRINGIPROC glGetStringi;
#endif
#ifdef using_glIsRenderbuffer
PFNGLISRENDERBUFFERPROC glIsRenderbuffer;
#endif
#ifdef using_glBindRenderbuffer
PFNGLBINDRENDERBUFFERPROC glBindRenderbuffer;
#endif
#ifdef using_glDeleteRenderbuffers
PFNGLDELETERENDERBUFFERSPROC glDeleteRenderbuffers;
#endif
#ifdef using_glGenRenderbuffers
PFNGLGENRENDERBUFFERSPROC glGenRenderbuffers;
#endif
#ifdef using_glRenderbufferStorage
PFNGLRENDERBUFFERSTORAGEPROC glRenderbufferStorage;
#endif
#ifdef using_glGetRenderbufferParameteriv
PFNGLGETRENDERBUFFERPARAMETERIVPROC glGetRenderbufferParameteriv;
#endif
#ifdef using_glIsFramebuffer
PFNGLISFRAMEBUFFERPROC glIsFramebuffer;
#endif
#ifdef using_glBindFramebuffer
PFNGLBINDFRAMEBUFFERPROC glBindFramebuffer;
#endif
#ifdef using_glDeleteFramebuffers
PFNGLDELETEFRAMEBUFFERSPROC glDeleteFramebuffers;
#endif
#ifdef using_glGenFramebuffers
PFNGLGENFRAMEBUFFERSPROC glGenFramebuffers;
#endif
#ifdef using_glCheckFramebufferStatus
PFNGLCHECKFRAMEBUFFERSTATUSPROC glCheckFramebufferStatus;
#endif
#ifdef using_glFramebufferTexture1D
PFNGLFRAMEBUFFERTEXTURE1DPROC glFramebufferTexture1D;
#endif
#ifdef using_glFramebufferTexture2D
PFNGLFRAMEBUFFERTEXTURE2DPROC glFramebufferTexture2D;
#endif
#ifdef using_glFramebufferTexture3D
PFNGLFRAMEBUFFERTEXTURE3DPROC glFramebufferTexture3D;
#endif
#ifdef using_glFramebufferRenderbuffer
PFNGLFRAMEBUFFERRENDERBUFFERPROC glFramebufferRenderbuffer;
#endif
#ifdef using_glGetFramebufferAttachmentParameteriv
PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC glGetFramebufferAttachmentParameteriv;
#endif
#ifdef using_glGenerateMipmap
PFNGLGENERATEMIPMAPPROC glGenerateMipmap;
#endif
#ifdef using_glBlitFramebuffer
PFNGLBLITFRAMEBUFFERPROC glBlitFramebuffer;
#endif
#ifdef using_glRenderbufferStorageMultisample
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC glRenderbufferStorageMultisample;
#endif
#ifdef using_glFramebufferTextureLayer
PFNGLFRAMEBUFFERTEXTURELAYERPROC glFramebufferTextureLayer;
#endif
#ifdef using_glMapBufferRange
PFNGLMAPBUFFERRANGEPROC glMapBufferRange;
#endif
#ifdef using_glFlushMappedBufferRange
PFNGLFLUSHMAPPEDBUFFERRANGEPROC glFlushMappedBufferRange;
#endif
#ifdef using_glBindVertexArray
PFNGLBINDVERTEXARRAYPROC glBindVertexArray;
#endif
#ifdef using_glDeleteVertexArrays
PFNGLDELETEVERTEXARRAYSPROC glDeleteVertexArrays;
#endif
#ifdef using_glGenVertexArrays
PFNGLGENVERTEXARRAYSPROC glGenVertexArrays;
#endif
#ifdef using_glIsVertexArray
PFNGLISVERTEXARRAYPROC glIsVertexArray;
#endif

#endif


//
#ifdef define_core_3_1
#ifdef using_glDrawArraysInstanced
PFNGLDRAWARRAYSINSTANCEDPROC glDrawArraysInstanced;
#endif
#ifdef using_glDrawElementsInstanced
PFNGLDRAWELEMENTSINSTANCEDPROC glDrawElementsInstanced;
#endif
#ifdef using_glTexBuffer
PFNGLTEXBUFFERPROC glTexBuffer;
#endif
#ifdef using_glPrimitiveRestartIndex
PFNGLPRIMITIVERESTARTINDEXPROC glPrimitiveRestartIndex;
#endif
#ifdef using_glCopyBufferSubData
PFNGLCOPYBUFFERSUBDATAPROC glCopyBufferSubData;
#endif
#ifdef using_glGetUniformIndices
PFNGLGETUNIFORMINDICESPROC glGetUniformIndices;
#endif
#ifdef using_glGetActiveUniformsiv
PFNGLGETACTIVEUNIFORMSIVPROC glGetActiveUniformsiv;
#endif
#ifdef using_glGetActiveUniformName
PFNGLGETACTIVEUNIFORMNAMEPROC glGetActiveUniformName;
#endif
#ifdef using_glGetUniformBlockIndex
PFNGLGETUNIFORMBLOCKINDEXPROC glGetUniformBlockIndex;
#endif
#ifdef using_glGetActiveUniformBlockiv
PFNGLGETACTIVEUNIFORMBLOCKIVPROC glGetActiveUniformBlockiv;
#endif
#ifdef using_glGetActiveUniformBlockName
PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC glGetActiveUniformBlockName;
#endif
#ifdef using_glUniformBlockBinding
PFNGLUNIFORMBLOCKBINDINGPROC glUniformBlockBinding;
#endif

#endif


//
#ifdef define_core_3_2
#ifdef using_glDrawElementsBaseVertex
PFNGLDRAWELEMENTSBASEVERTEXPROC glDrawElementsBaseVertex;
#endif
#ifdef using_glDrawRangeElementsBaseVertex
PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC glDrawRangeElementsBaseVertex;
#endif
#ifdef using_glDrawElementsInstancedBaseVertex
PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC glDrawElementsInstancedBaseVertex;
#endif
#ifdef using_glMultiDrawElementsBaseVertex
PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC glMultiDrawElementsBaseVertex;
#endif
#ifdef using_glProvokingVertex
PFNGLPROVOKINGVERTEXPROC glProvokingVertex;
#endif
#ifdef using_glFenceSync
PFNGLFENCESYNCPROC glFenceSync;
#endif
#ifdef using_glIsSync
PFNGLISSYNCPROC glIsSync;
#endif
#ifdef using_glDeleteSync
PFNGLDELETESYNCPROC glDeleteSync;
#endif
#ifdef using_glClientWaitSync
PFNGLCLIENTWAITSYNCPROC glClientWaitSync;
#endif
#ifdef using_glWaitSync
PFNGLWAITSYNCPROC glWaitSync;
#endif
#ifdef using_glGetInteger64v
PFNGLGETINTEGER64VPROC glGetInteger64v;
#endif
#ifdef using_glGetSynciv
PFNGLGETSYNCIVPROC glGetSynciv;
#endif
#ifdef using_glGetInteger64i_v
PFNGLGETINTEGER64I_VPROC glGetInteger64i_v;
#endif
#ifdef using_glGetBufferParameteri64v
PFNGLGETBUFFERPARAMETERI64VPROC glGetBufferParameteri64v;
#endif
#ifdef using_glFramebufferTexture
PFNGLFRAMEBUFFERTEXTUREPROC glFramebufferTexture;
#endif
#ifdef using_glTexImage2DMultisample
PFNGLTEXIMAGE2DMULTISAMPLEPROC glTexImage2DMultisample;
#endif
#ifdef using_glTexImage3DMultisample
PFNGLTEXIMAGE3DMULTISAMPLEPROC glTexImage3DMultisample;
#endif
#ifdef using_glGetMultisamplefv
PFNGLGETMULTISAMPLEFVPROC glGetMultisamplefv;
#endif
#ifdef using_glSampleMaski
PFNGLSAMPLEMASKIPROC glSampleMaski;
#endif

#endif


//
#ifdef define_core_3_3
#ifdef using_glBindFragDataLocationIndexed
PFNGLBINDFRAGDATALOCATIONINDEXEDPROC glBindFragDataLocationIndexed;
#endif
#ifdef using_glGetFragDataIndex
PFNGLGETFRAGDATAINDEXPROC glGetFragDataIndex;
#endif
#ifdef using_glGenSamplers
PFNGLGENSAMPLERSPROC glGenSamplers;
#endif
#ifdef using_glDeleteSamplers
PFNGLDELETESAMPLERSPROC glDeleteSamplers;
#endif
#ifdef using_glIsSampler
PFNGLISSAMPLERPROC glIsSampler;
#endif
#ifdef using_glBindSampler
PFNGLBINDSAMPLERPROC glBindSampler;
#endif
#ifdef using_glSamplerParameteri
PFNGLSAMPLERPARAMETERIPROC glSamplerParameteri;
#endif
#ifdef using_glSamplerParameteriv
PFNGLSAMPLERPARAMETERIVPROC glSamplerParameteriv;
#endif
#ifdef using_glSamplerParameterf
PFNGLSAMPLERPARAMETERFPROC glSamplerParameterf;
#endif
#ifdef using_glSamplerParameterfv
PFNGLSAMPLERPARAMETERFVPROC glSamplerParameterfv;
#endif
#ifdef using_glSamplerParameterIiv
PFNGLSAMPLERPARAMETERIIVPROC glSamplerParameterIiv;
#endif
#ifdef using_glSamplerParameterIuiv
PFNGLSAMPLERPARAMETERIUIVPROC glSamplerParameterIuiv;
#endif
#ifdef using_glGetSamplerParameteriv
PFNGLGETSAMPLERPARAMETERIVPROC glGetSamplerParameteriv;
#endif
#ifdef using_glGetSamplerParameterIiv
PFNGLGETSAMPLERPARAMETERIIVPROC glGetSamplerParameterIiv;
#endif
#ifdef using_glGetSamplerParameterfv
PFNGLGETSAMPLERPARAMETERFVPROC glGetSamplerParameterfv;
#endif
#ifdef using_glGetSamplerParameterIuiv
PFNGLGETSAMPLERPARAMETERIUIVPROC glGetSamplerParameterIuiv;
#endif
#ifdef using_glQueryCounter
PFNGLQUERYCOUNTERPROC glQueryCounter;
#endif
#ifdef using_glGetQueryObjecti64v
PFNGLGETQUERYOBJECTI64VPROC glGetQueryObjecti64v;
#endif
#ifdef using_glGetQueryObjectui64v
PFNGLGETQUERYOBJECTUI64VPROC glGetQueryObjectui64v;
#endif
#ifdef using_glVertexAttribDivisor
PFNGLVERTEXATTRIBDIVISORPROC glVertexAttribDivisor;
#endif
#ifdef using_glVertexAttribP1ui
PFNGLVERTEXATTRIBP1UIPROC glVertexAttribP1ui;
#endif
#ifdef using_glVertexAttribP1uiv
PFNGLVERTEXATTRIBP1UIVPROC glVertexAttribP1uiv;
#endif
#ifdef using_glVertexAttribP2ui
PFNGLVERTEXATTRIBP2UIPROC glVertexAttribP2ui;
#endif
#ifdef using_glVertexAttribP2uiv
PFNGLVERTEXATTRIBP2UIVPROC glVertexAttribP2uiv;
#endif
#ifdef using_glVertexAttribP3ui
PFNGLVERTEXATTRIBP3UIPROC glVertexAttribP3ui;
#endif
#ifdef using_glVertexAttribP3uiv
PFNGLVERTEXATTRIBP3UIVPROC glVertexAttribP3uiv;
#endif
#ifdef using_glVertexAttribP4ui
PFNGLVERTEXATTRIBP4UIPROC glVertexAttribP4ui;
#endif
#ifdef using_glVertexAttribP4uiv
PFNGLVERTEXATTRIBP4UIVPROC glVertexAttribP4uiv;
#endif

#endif


//
#ifdef define_core_4_0
#ifdef using_glMinSampleShading
PFNGLMINSAMPLESHADINGPROC glMinSampleShading;
#endif
#ifdef using_glBlendEquationi
PFNGLBLENDEQUATIONIPROC glBlendEquationi;
#endif
#ifdef using_glBlendEquationSeparatei
PFNGLBLENDEQUATIONSEPARATEIPROC glBlendEquationSeparatei;
#endif
#ifdef using_glBlendFunci
PFNGLBLENDFUNCIPROC glBlendFunci;
#endif
#ifdef using_glBlendFuncSeparatei
PFNGLBLENDFUNCSEPARATEIPROC glBlendFuncSeparatei;
#endif
#ifdef using_glDrawArraysIndirect
PFNGLDRAWARRAYSINDIRECTPROC glDrawArraysIndirect;
#endif
#ifdef using_glDrawElementsIndirect
PFNGLDRAWELEMENTSINDIRECTPROC glDrawElementsIndirect;
#endif
#ifdef using_glUniform1d
PFNGLUNIFORM1DPROC glUniform1d;
#endif
#ifdef using_glUniform2d
PFNGLUNIFORM2DPROC glUniform2d;
#endif
#ifdef using_glUniform3d
PFNGLUNIFORM3DPROC glUniform3d;
#endif
#ifdef using_glUniform4d
PFNGLUNIFORM4DPROC glUniform4d;
#endif
#ifdef using_glUniform1dv
PFNGLUNIFORM1DVPROC glUniform1dv;
#endif
#ifdef using_glUniform2dv
PFNGLUNIFORM2DVPROC glUniform2dv;
#endif
#ifdef using_glUniform3dv
PFNGLUNIFORM3DVPROC glUniform3dv;
#endif
#ifdef using_glUniform4dv
PFNGLUNIFORM4DVPROC glUniform4dv;
#endif
#ifdef using_glUniformMatrix2dv
PFNGLUNIFORMMATRIX2DVPROC glUniformMatrix2dv;
#endif
#ifdef using_glUniformMatrix3dv
PFNGLUNIFORMMATRIX3DVPROC glUniformMatrix3dv;
#endif
#ifdef using_glUniformMatrix4dv
PFNGLUNIFORMMATRIX4DVPROC glUniformMatrix4dv;
#endif
#ifdef using_glUniformMatrix2x3dv
PFNGLUNIFORMMATRIX2X3DVPROC glUniformMatrix2x3dv;
#endif
#ifdef using_glUniformMatrix2x4dv
PFNGLUNIFORMMATRIX2X4DVPROC glUniformMatrix2x4dv;
#endif
#ifdef using_glUniformMatrix3x2dv
PFNGLUNIFORMMATRIX3X2DVPROC glUniformMatrix3x2dv;
#endif
#ifdef using_glUniformMatrix3x4dv
PFNGLUNIFORMMATRIX3X4DVPROC glUniformMatrix3x4dv;
#endif
#ifdef using_glUniformMatrix4x2dv
PFNGLUNIFORMMATRIX4X2DVPROC glUniformMatrix4x2dv;
#endif
#ifdef using_glUniformMatrix4x3dv
PFNGLUNIFORMMATRIX4X3DVPROC glUniformMatrix4x3dv;
#endif
#ifdef using_glGetUniformdv
PFNGLGETUNIFORMDVPROC glGetUniformdv;
#endif
#ifdef using_glGetSubroutineUniformLocation
PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC glGetSubroutineUniformLocation;
#endif
#ifdef using_glGetSubroutineIndex
PFNGLGETSUBROUTINEINDEXPROC glGetSubroutineIndex;
#endif
#ifdef using_glGetActiveSubroutineUniformiv
PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC glGetActiveSubroutineUniformiv;
#endif
#ifdef using_glGetActiveSubroutineUniformName
PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC glGetActiveSubroutineUniformName;
#endif
#ifdef using_glGetActiveSubroutineName
PFNGLGETACTIVESUBROUTINENAMEPROC glGetActiveSubroutineName;
#endif
#ifdef using_glUniformSubroutinesuiv
PFNGLUNIFORMSUBROUTINESUIVPROC glUniformSubroutinesuiv;
#endif
#ifdef using_glGetUniformSubroutineuiv
PFNGLGETUNIFORMSUBROUTINEUIVPROC glGetUniformSubroutineuiv;
#endif
#ifdef using_glGetProgramStageiv
PFNGLGETPROGRAMSTAGEIVPROC glGetProgramStageiv;
#endif
#ifdef using_glPatchParameteri
PFNGLPATCHPARAMETERIPROC glPatchParameteri;
#endif
#ifdef using_glPatchParameterfv
PFNGLPATCHPARAMETERFVPROC glPatchParameterfv;
#endif
#ifdef using_glBindTransformFeedback
PFNGLBINDTRANSFORMFEEDBACKPROC glBindTransformFeedback;
#endif
#ifdef using_glDeleteTransformFeedbacks
PFNGLDELETETRANSFORMFEEDBACKSPROC glDeleteTransformFeedbacks;
#endif
#ifdef using_glGenTransformFeedbacks
PFNGLGENTRANSFORMFEEDBACKSPROC glGenTransformFeedbacks;
#endif
#ifdef using_glIsTransformFeedback
PFNGLISTRANSFORMFEEDBACKPROC glIsTransformFeedback;
#endif
#ifdef using_glPauseTransformFeedback
PFNGLPAUSETRANSFORMFEEDBACKPROC glPauseTransformFeedback;
#endif
#ifdef using_glResumeTransformFeedback
PFNGLRESUMETRANSFORMFEEDBACKPROC glResumeTransformFeedback;
#endif
#ifdef using_glDrawTransformFeedback
PFNGLDRAWTRANSFORMFEEDBACKPROC glDrawTransformFeedback;
#endif
#ifdef using_glDrawTransformFeedbackStream
PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC glDrawTransformFeedbackStream;
#endif
#ifdef using_glBeginQueryIndexed
PFNGLBEGINQUERYINDEXEDPROC glBeginQueryIndexed;
#endif
#ifdef using_glEndQueryIndexed
PFNGLENDQUERYINDEXEDPROC glEndQueryIndexed;
#endif
#ifdef using_glGetQueryIndexediv
PFNGLGETQUERYINDEXEDIVPROC glGetQueryIndexediv;
#endif

#endif


//
#ifdef define_core_4_1
#ifdef using_glReleaseShaderCompiler
PFNGLRELEASESHADERCOMPILERPROC glReleaseShaderCompiler;
#endif
#ifdef using_glShaderBinary
PFNGLSHADERBINARYPROC glShaderBinary;
#endif
#ifdef using_glGetShaderPrecisionFormat
PFNGLGETSHADERPRECISIONFORMATPROC glGetShaderPrecisionFormat;
#endif
#ifdef using_glDepthRangef
PFNGLDEPTHRANGEFPROC glDepthRangef;
#endif
#ifdef using_glClearDepthf
PFNGLCLEARDEPTHFPROC glClearDepthf;
#endif
#ifdef using_glGetProgramBinary
PFNGLGETPROGRAMBINARYPROC glGetProgramBinary;
#endif
#ifdef using_glProgramBinary
PFNGLPROGRAMBINARYPROC glProgramBinary;
#endif
#ifdef using_glProgramParameteri
PFNGLPROGRAMPARAMETERIPROC glProgramParameteri;
#endif
#ifdef using_glUseProgramStages
PFNGLUSEPROGRAMSTAGESPROC glUseProgramStages;
#endif
#ifdef using_glActiveShaderProgram
PFNGLACTIVESHADERPROGRAMPROC glActiveShaderProgram;
#endif
#ifdef using_glCreateShaderProgramv
PFNGLCREATESHADERPROGRAMVPROC glCreateShaderProgramv;
#endif
#ifdef using_glBindProgramPipeline
PFNGLBINDPROGRAMPIPELINEPROC glBindProgramPipeline;
#endif
#ifdef using_glDeleteProgramPipelines
PFNGLDELETEPROGRAMPIPELINESPROC glDeleteProgramPipelines;
#endif
#ifdef using_glGenProgramPipelines
PFNGLGENPROGRAMPIPELINESPROC glGenProgramPipelines;
#endif
#ifdef using_glIsProgramPipeline
PFNGLISPROGRAMPIPELINEPROC glIsProgramPipeline;
#endif
#ifdef using_glGetProgramPipelineiv
PFNGLGETPROGRAMPIPELINEIVPROC glGetProgramPipelineiv;
#endif
#ifdef using_glProgramUniform1i
PFNGLPROGRAMUNIFORM1IPROC glProgramUniform1i;
#endif
#ifdef using_glProgramUniform1iv
PFNGLPROGRAMUNIFORM1IVPROC glProgramUniform1iv;
#endif
#ifdef using_glProgramUniform1f
PFNGLPROGRAMUNIFORM1FPROC glProgramUniform1f;
#endif
#ifdef using_glProgramUniform1fv
PFNGLPROGRAMUNIFORM1FVPROC glProgramUniform1fv;
#endif
#ifdef using_glProgramUniform1d
PFNGLPROGRAMUNIFORM1DPROC glProgramUniform1d;
#endif
#ifdef using_glProgramUniform1dv
PFNGLPROGRAMUNIFORM1DVPROC glProgramUniform1dv;
#endif
#ifdef using_glProgramUniform1ui
PFNGLPROGRAMUNIFORM1UIPROC glProgramUniform1ui;
#endif
#ifdef using_glProgramUniform1uiv
PFNGLPROGRAMUNIFORM1UIVPROC glProgramUniform1uiv;
#endif
#ifdef using_glProgramUniform2i
PFNGLPROGRAMUNIFORM2IPROC glProgramUniform2i;
#endif
#ifdef using_glProgramUniform2iv
PFNGLPROGRAMUNIFORM2IVPROC glProgramUniform2iv;
#endif
#ifdef using_glProgramUniform2f
PFNGLPROGRAMUNIFORM2FPROC glProgramUniform2f;
#endif
#ifdef using_glProgramUniform2fv
PFNGLPROGRAMUNIFORM2FVPROC glProgramUniform2fv;
#endif
#ifdef using_glProgramUniform2d
PFNGLPROGRAMUNIFORM2DPROC glProgramUniform2d;
#endif
#ifdef using_glProgramUniform2dv
PFNGLPROGRAMUNIFORM2DVPROC glProgramUniform2dv;
#endif
#ifdef using_glProgramUniform2ui
PFNGLPROGRAMUNIFORM2UIPROC glProgramUniform2ui;
#endif
#ifdef using_glProgramUniform2uiv
PFNGLPROGRAMUNIFORM2UIVPROC glProgramUniform2uiv;
#endif
#ifdef using_glProgramUniform3i
PFNGLPROGRAMUNIFORM3IPROC glProgramUniform3i;
#endif
#ifdef using_glProgramUniform3iv
PFNGLPROGRAMUNIFORM3IVPROC glProgramUniform3iv;
#endif
#ifdef using_glProgramUniform3f
PFNGLPROGRAMUNIFORM3FPROC glProgramUniform3f;
#endif
#ifdef using_glProgramUniform3fv
PFNGLPROGRAMUNIFORM3FVPROC glProgramUniform3fv;
#endif
#ifdef using_glProgramUniform3d
PFNGLPROGRAMUNIFORM3DPROC glProgramUniform3d;
#endif
#ifdef using_glProgramUniform3dv
PFNGLPROGRAMUNIFORM3DVPROC glProgramUniform3dv;
#endif
#ifdef using_glProgramUniform3ui
PFNGLPROGRAMUNIFORM3UIPROC glProgramUniform3ui;
#endif
#ifdef using_glProgramUniform3uiv
PFNGLPROGRAMUNIFORM3UIVPROC glProgramUniform3uiv;
#endif
#ifdef using_glProgramUniform4i
PFNGLPROGRAMUNIFORM4IPROC glProgramUniform4i;
#endif
#ifdef using_glProgramUniform4iv
PFNGLPROGRAMUNIFORM4IVPROC glProgramUniform4iv;
#endif
#ifdef using_glProgramUniform4f
PFNGLPROGRAMUNIFORM4FPROC glProgramUniform4f;
#endif
#ifdef using_glProgramUniform4fv
PFNGLPROGRAMUNIFORM4FVPROC glProgramUniform4fv;
#endif
#ifdef using_glProgramUniform4d
PFNGLPROGRAMUNIFORM4DPROC glProgramUniform4d;
#endif
#ifdef using_glProgramUniform4dv
PFNGLPROGRAMUNIFORM4DVPROC glProgramUniform4dv;
#endif
#ifdef using_glProgramUniform4ui
PFNGLPROGRAMUNIFORM4UIPROC glProgramUniform4ui;
#endif
#ifdef using_glProgramUniform4uiv
PFNGLPROGRAMUNIFORM4UIVPROC glProgramUniform4uiv;
#endif
#ifdef using_glProgramUniformMatrix2fv
PFNGLPROGRAMUNIFORMMATRIX2FVPROC glProgramUniformMatrix2fv;
#endif
#ifdef using_glProgramUniformMatrix3fv
PFNGLPROGRAMUNIFORMMATRIX3FVPROC glProgramUniformMatrix3fv;
#endif
#ifdef using_glProgramUniformMatrix4fv
PFNGLPROGRAMUNIFORMMATRIX4FVPROC glProgramUniformMatrix4fv;
#endif
#ifdef using_glProgramUniformMatrix2dv
PFNGLPROGRAMUNIFORMMATRIX2DVPROC glProgramUniformMatrix2dv;
#endif
#ifdef using_glProgramUniformMatrix3dv
PFNGLPROGRAMUNIFORMMATRIX3DVPROC glProgramUniformMatrix3dv;
#endif
#ifdef using_glProgramUniformMatrix4dv
PFNGLPROGRAMUNIFORMMATRIX4DVPROC glProgramUniformMatrix4dv;
#endif
#ifdef using_glProgramUniformMatrix2x3fv
PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC glProgramUniformMatrix2x3fv;
#endif
#ifdef using_glProgramUniformMatrix3x2fv
PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC glProgramUniformMatrix3x2fv;
#endif
#ifdef using_glProgramUniformMatrix2x4fv
PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC glProgramUniformMatrix2x4fv;
#endif
#ifdef using_glProgramUniformMatrix4x2fv
PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC glProgramUniformMatrix4x2fv;
#endif
#ifdef using_glProgramUniformMatrix3x4fv
PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC glProgramUniformMatrix3x4fv;
#endif
#ifdef using_glProgramUniformMatrix4x3fv
PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC glProgramUniformMatrix4x3fv;
#endif
#ifdef using_glProgramUniformMatrix2x3dv
PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC glProgramUniformMatrix2x3dv;
#endif
#ifdef using_glProgramUniformMatrix3x2dv
PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC glProgramUniformMatrix3x2dv;
#endif
#ifdef using_glProgramUniformMatrix2x4dv
PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC glProgramUniformMatrix2x4dv;
#endif
#ifdef using_glProgramUniformMatrix4x2dv
PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC glProgramUniformMatrix4x2dv;
#endif
#ifdef using_glProgramUniformMatrix3x4dv
PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC glProgramUniformMatrix3x4dv;
#endif
#ifdef using_glProgramUniformMatrix4x3dv
PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC glProgramUniformMatrix4x3dv;
#endif
#ifdef using_glValidateProgramPipeline
PFNGLVALIDATEPROGRAMPIPELINEPROC glValidateProgramPipeline;
#endif
#ifdef using_glGetProgramPipelineInfoLog
PFNGLGETPROGRAMPIPELINEINFOLOGPROC glGetProgramPipelineInfoLog;
#endif
#ifdef using_glVertexAttribL1d
PFNGLVERTEXATTRIBL1DPROC glVertexAttribL1d;
#endif
#ifdef using_glVertexAttribL2d
PFNGLVERTEXATTRIBL2DPROC glVertexAttribL2d;
#endif
#ifdef using_glVertexAttribL3d
PFNGLVERTEXATTRIBL3DPROC glVertexAttribL3d;
#endif
#ifdef using_glVertexAttribL4d
PFNGLVERTEXATTRIBL4DPROC glVertexAttribL4d;
#endif
#ifdef using_glVertexAttribL1dv
PFNGLVERTEXATTRIBL1DVPROC glVertexAttribL1dv;
#endif
#ifdef using_glVertexAttribL2dv
PFNGLVERTEXATTRIBL2DVPROC glVertexAttribL2dv;
#endif
#ifdef using_glVertexAttribL3dv
PFNGLVERTEXATTRIBL3DVPROC glVertexAttribL3dv;
#endif
#ifdef using_glVertexAttribL4dv
PFNGLVERTEXATTRIBL4DVPROC glVertexAttribL4dv;
#endif
#ifdef using_glVertexAttribLPointer
PFNGLVERTEXATTRIBLPOINTERPROC glVertexAttribLPointer;
#endif
#ifdef using_glGetVertexAttribLdv
PFNGLGETVERTEXATTRIBLDVPROC glGetVertexAttribLdv;
#endif
#ifdef using_glViewportArrayv
PFNGLVIEWPORTARRAYVPROC glViewportArrayv;
#endif
#ifdef using_glViewportIndexedf
PFNGLVIEWPORTINDEXEDFPROC glViewportIndexedf;
#endif
#ifdef using_glViewportIndexedfv
PFNGLVIEWPORTINDEXEDFVPROC glViewportIndexedfv;
#endif
#ifdef using_glScissorArrayv
PFNGLSCISSORARRAYVPROC glScissorArrayv;
#endif
#ifdef using_glScissorIndexed
PFNGLSCISSORINDEXEDPROC glScissorIndexed;
#endif
#ifdef using_glScissorIndexedv
PFNGLSCISSORINDEXEDVPROC glScissorIndexedv;
#endif
#ifdef using_glDepthRangeArrayv
PFNGLDEPTHRANGEARRAYVPROC glDepthRangeArrayv;
#endif
#ifdef using_glDepthRangeIndexed
PFNGLDEPTHRANGEINDEXEDPROC glDepthRangeIndexed;
#endif
#ifdef using_glGetFloati_v
PFNGLGETFLOATI_VPROC glGetFloati_v;
#endif
#ifdef using_glGetDoublei_v
PFNGLGETDOUBLEI_VPROC glGetDoublei_v;
#endif

#endif


//
#ifdef define_core_4_2
#ifdef using_glDrawArraysInstancedBaseInstance
PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC glDrawArraysInstancedBaseInstance;
#endif
#ifdef using_glDrawElementsInstancedBaseInstance
PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC glDrawElementsInstancedBaseInstance;
#endif
#ifdef using_glDrawElementsInstancedBaseVertexBaseInstance
PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC glDrawElementsInstancedBaseVertexBaseInstance;
#endif
#ifdef using_glGetInternalformativ
PFNGLGETINTERNALFORMATIVPROC glGetInternalformativ;
#endif
#ifdef using_glGetActiveAtomicCounterBufferiv
PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC glGetActiveAtomicCounterBufferiv;
#endif
#ifdef using_glBindImageTexture
PFNGLBINDIMAGETEXTUREPROC glBindImageTexture;
#endif
#ifdef using_glMemoryBarrier
PFNGLMEMORYBARRIERPROC glMemoryBarrier;
#endif
#ifdef using_glTexStorage1D
PFNGLTEXSTORAGE1DPROC glTexStorage1D;
#endif
#ifdef using_glTexStorage2D
PFNGLTEXSTORAGE2DPROC glTexStorage2D;
#endif
#ifdef using_glTexStorage3D
PFNGLTEXSTORAGE3DPROC glTexStorage3D;
#endif
#ifdef using_glDrawTransformFeedbackInstanced
PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC glDrawTransformFeedbackInstanced;
#endif
#ifdef using_glDrawTransformFeedbackStreamInstanced
PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC glDrawTransformFeedbackStreamInstanced;
#endif

#endif


//
#ifdef define_core_4_3
#ifdef using_glClearBufferData
PFNGLCLEARBUFFERDATAPROC glClearBufferData;
#endif
#ifdef using_glClearBufferSubData
PFNGLCLEARBUFFERSUBDATAPROC glClearBufferSubData;
#endif
#ifdef using_glDispatchCompute
PFNGLDISPATCHCOMPUTEPROC glDispatchCompute;
#endif
#ifdef using_glDispatchComputeIndirect
PFNGLDISPATCHCOMPUTEINDIRECTPROC glDispatchComputeIndirect;
#endif
#ifdef using_glCopyImageSubData
PFNGLCOPYIMAGESUBDATAPROC glCopyImageSubData;
#endif
#ifdef using_glFramebufferParameteri
PFNGLFRAMEBUFFERPARAMETERIPROC glFramebufferParameteri;
#endif
#ifdef using_glGetFramebufferParameteriv
PFNGLGETFRAMEBUFFERPARAMETERIVPROC glGetFramebufferParameteriv;
#endif
#ifdef using_glGetInternalformati64v
PFNGLGETINTERNALFORMATI64VPROC glGetInternalformati64v;
#endif
#ifdef using_glInvalidateTexSubImage
PFNGLINVALIDATETEXSUBIMAGEPROC glInvalidateTexSubImage;
#endif
#ifdef using_glInvalidateTexImage
PFNGLINVALIDATETEXIMAGEPROC glInvalidateTexImage;
#endif
#ifdef using_glInvalidateBufferSubData
PFNGLINVALIDATEBUFFERSUBDATAPROC glInvalidateBufferSubData;
#endif
#ifdef using_glInvalidateBufferData
PFNGLINVALIDATEBUFFERDATAPROC glInvalidateBufferData;
#endif
#ifdef using_glInvalidateFramebuffer
PFNGLINVALIDATEFRAMEBUFFERPROC glInvalidateFramebuffer;
#endif
#ifdef using_glInvalidateSubFramebuffer
PFNGLINVALIDATESUBFRAMEBUFFERPROC glInvalidateSubFramebuffer;
#endif
#ifdef using_glMultiDrawArraysIndirect
PFNGLMULTIDRAWARRAYSINDIRECTPROC glMultiDrawArraysIndirect;
#endif
#ifdef using_glMultiDrawElementsIndirect
PFNGLMULTIDRAWELEMENTSINDIRECTPROC glMultiDrawElementsIndirect;
#endif
#ifdef using_glGetProgramInterfaceiv
PFNGLGETPROGRAMINTERFACEIVPROC glGetProgramInterfaceiv;
#endif
#ifdef using_glGetProgramResourceIndex
PFNGLGETPROGRAMRESOURCEINDEXPROC glGetProgramResourceIndex;
#endif
#ifdef using_glGetProgramResourceName
PFNGLGETPROGRAMRESOURCENAMEPROC glGetProgramResourceName;
#endif
#ifdef using_glGetProgramResourceiv
PFNGLGETPROGRAMRESOURCEIVPROC glGetProgramResourceiv;
#endif
#ifdef using_glGetProgramResourceLocation
PFNGLGETPROGRAMRESOURCELOCATIONPROC glGetProgramResourceLocation;
#endif
#ifdef using_glGetProgramResourceLocationIndex
PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC glGetProgramResourceLocationIndex;
#endif
#ifdef using_glShaderStorageBlockBinding
PFNGLSHADERSTORAGEBLOCKBINDINGPROC glShaderStorageBlockBinding;
#endif
#ifdef using_glTexBufferRange
PFNGLTEXBUFFERRANGEPROC glTexBufferRange;
#endif
#ifdef using_glTexStorage2DMultisample
PFNGLTEXSTORAGE2DMULTISAMPLEPROC glTexStorage2DMultisample;
#endif
#ifdef using_glTexStorage3DMultisample
PFNGLTEXSTORAGE3DMULTISAMPLEPROC glTexStorage3DMultisample;
#endif
#ifdef using_glTextureView
PFNGLTEXTUREVIEWPROC glTextureView;
#endif
#ifdef using_glBindVertexBuffer
PFNGLBINDVERTEXBUFFERPROC glBindVertexBuffer;
#endif
#ifdef using_glVertexAttribFormat
PFNGLVERTEXATTRIBFORMATPROC glVertexAttribFormat;
#endif
#ifdef using_glVertexAttribIFormat
PFNGLVERTEXATTRIBIFORMATPROC glVertexAttribIFormat;
#endif
#ifdef using_glVertexAttribLFormat
PFNGLVERTEXATTRIBLFORMATPROC glVertexAttribLFormat;
#endif
#ifdef using_glVertexAttribBinding
PFNGLVERTEXATTRIBBINDINGPROC glVertexAttribBinding;
#endif
#ifdef using_glVertexBindingDivisor
PFNGLVERTEXBINDINGDIVISORPROC glVertexBindingDivisor;
#endif
#ifdef using_glDebugMessageControl
PFNGLDEBUGMESSAGECONTROLPROC glDebugMessageControl;
#endif
#ifdef using_glDebugMessageInsert
PFNGLDEBUGMESSAGEINSERTPROC glDebugMessageInsert;
#endif
#ifdef using_glDebugMessageCallback
PFNGLDEBUGMESSAGECALLBACKPROC glDebugMessageCallback;
#endif
#ifdef using_glGetDebugMessageLog
PFNGLGETDEBUGMESSAGELOGPROC glGetDebugMessageLog;
#endif
#ifdef using_glPushDebugGroup
PFNGLPUSHDEBUGGROUPPROC glPushDebugGroup;
#endif
#ifdef using_glPopDebugGroup
PFNGLPOPDEBUGGROUPPROC glPopDebugGroup;
#endif
#ifdef using_glObjectLabel
PFNGLOBJECTLABELPROC glObjectLabel;
#endif
#ifdef using_glGetObjectLabel
PFNGLGETOBJECTLABELPROC glGetObjectLabel;
#endif
#ifdef using_glObjectPtrLabel
PFNGLOBJECTPTRLABELPROC glObjectPtrLabel;
#endif
#ifdef using_glGetObjectPtrLabel
PFNGLGETOBJECTPTRLABELPROC glGetObjectPtrLabel;
#endif

#endif


//
#ifdef define_core_4_4
#ifdef using_glBufferStorage
PFNGLBUFFERSTORAGEPROC glBufferStorage;
#endif
#ifdef using_glClearTexImage
PFNGLCLEARTEXIMAGEPROC glClearTexImage;
#endif
#ifdef using_glClearTexSubImage
PFNGLCLEARTEXSUBIMAGEPROC glClearTexSubImage;
#endif
#ifdef using_glBindBuffersBase
PFNGLBINDBUFFERSBASEPROC glBindBuffersBase;
#endif
#ifdef using_glBindBuffersRange
PFNGLBINDBUFFERSRANGEPROC glBindBuffersRange;
#endif
#ifdef using_glBindTextures
PFNGLBINDTEXTURESPROC glBindTextures;
#endif
#ifdef using_glBindSamplers
PFNGLBINDSAMPLERSPROC glBindSamplers;
#endif
#ifdef using_glBindImageTextures
PFNGLBINDIMAGETEXTURESPROC glBindImageTextures;
#endif
#ifdef using_glBindVertexBuffers
PFNGLBINDVERTEXBUFFERSPROC glBindVertexBuffers;
#endif

#endif


//
#ifdef define_GL_ARB_ES2_compatibility

#endif


//
#ifdef define_GL_ARB_ES3_compatibility

#endif


//
#ifdef define_GL_ARB_arrays_of_arrays

#endif


//
#ifdef define_GL_ARB_base_instance

#endif


//
#ifdef define_GL_ARB_bindless_texture
#ifdef using_glGetTextureHandleARB
PFNGLGETTEXTUREHANDLEARBPROC glGetTextureHandleARB;
#endif
#ifdef using_glGetTextureSamplerHandleARB
PFNGLGETTEXTURESAMPLERHANDLEARBPROC glGetTextureSamplerHandleARB;
#endif
#ifdef using_glMakeTextureHandleResidentARB
PFNGLMAKETEXTUREHANDLERESIDENTARBPROC glMakeTextureHandleResidentARB;
#endif
#ifdef using_glMakeTextureHandleNonResidentARB
PFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC glMakeTextureHandleNonResidentARB;
#endif
#ifdef using_glGetImageHandleARB
PFNGLGETIMAGEHANDLEARBPROC glGetImageHandleARB;
#endif
#ifdef using_glMakeImageHandleResidentARB
PFNGLMAKEIMAGEHANDLERESIDENTARBPROC glMakeImageHandleResidentARB;
#endif
#ifdef using_glMakeImageHandleNonResidentARB
PFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC glMakeImageHandleNonResidentARB;
#endif
#ifdef using_glUniformHandleui64ARB
PFNGLUNIFORMHANDLEUI64ARBPROC glUniformHandleui64ARB;
#endif
#ifdef using_glUniformHandleui64vARB
PFNGLUNIFORMHANDLEUI64VARBPROC glUniformHandleui64vARB;
#endif
#ifdef using_glProgramUniformHandleui64ARB
PFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC glProgramUniformHandleui64ARB;
#endif
#ifdef using_glProgramUniformHandleui64vARB
PFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC glProgramUniformHandleui64vARB;
#endif
#ifdef using_glIsTextureHandleResidentARB
PFNGLISTEXTUREHANDLERESIDENTARBPROC glIsTextureHandleResidentARB;
#endif
#ifdef using_glIsImageHandleResidentARB
PFNGLISIMAGEHANDLERESIDENTARBPROC glIsImageHandleResidentARB;
#endif
#ifdef using_glVertexAttribL1ui64ARB
PFNGLVERTEXATTRIBL1UI64ARBPROC glVertexAttribL1ui64ARB;
#endif
#ifdef using_glVertexAttribL1ui64vARB
PFNGLVERTEXATTRIBL1UI64VARBPROC glVertexAttribL1ui64vARB;
#endif
#ifdef using_glGetVertexAttribLui64vARB
PFNGLGETVERTEXATTRIBLUI64VARBPROC glGetVertexAttribLui64vARB;
#endif

#endif


//
#ifdef define_GL_ARB_blend_func_extended

#endif


//
#ifdef define_GL_ARB_buffer_storage

#endif


//
#ifdef define_GL_ARB_cl_event
#ifdef using_glCreateSyncFromCLeventARB
PFNGLCREATESYNCFROMCLEVENTARBPROC glCreateSyncFromCLeventARB;
#endif

#endif


//
#ifdef define_GL_ARB_clear_buffer_object

#endif


//
#ifdef define_GL_ARB_clear_texture

#endif


//
#ifdef define_GL_ARB_compressed_texture_pixel_storage

#endif


//
#ifdef define_GL_ARB_compute_shader

#endif


//
#ifdef define_GL_ARB_compute_variable_group_size
#ifdef using_glDispatchComputeGroupSizeARB
PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC glDispatchComputeGroupSizeARB;
#endif

#endif


//
#ifdef define_GL_ARB_conservative_depth

#endif


//
#ifdef define_GL_ARB_copy_buffer

#endif


//
#ifdef define_GL_ARB_copy_image

#endif


//
#ifdef define_GL_ARB_debug_output
#ifdef using_glDebugMessageControlARB
PFNGLDEBUGMESSAGECONTROLARBPROC glDebugMessageControlARB;
#endif
#ifdef using_glDebugMessageInsertARB
PFNGLDEBUGMESSAGEINSERTARBPROC glDebugMessageInsertARB;
#endif
#ifdef using_glDebugMessageCallbackARB
PFNGLDEBUGMESSAGECALLBACKARBPROC glDebugMessageCallbackARB;
#endif
#ifdef using_glGetDebugMessageLogARB
PFNGLGETDEBUGMESSAGELOGARBPROC glGetDebugMessageLogARB;
#endif

#endif


//
#ifdef define_GL_ARB_depth_buffer_float

#endif


//
#ifdef define_GL_ARB_depth_clamp

#endif


//
#ifdef define_GL_ARB_draw_buffers_blend
#ifdef using_glBlendEquationiARB
PFNGLBLENDEQUATIONIARBPROC glBlendEquationiARB;
#endif
#ifdef using_glBlendEquationSeparateiARB
PFNGLBLENDEQUATIONSEPARATEIARBPROC glBlendEquationSeparateiARB;
#endif
#ifdef using_glBlendFunciARB
PFNGLBLENDFUNCIARBPROC glBlendFunciARB;
#endif
#ifdef using_glBlendFuncSeparateiARB
PFNGLBLENDFUNCSEPARATEIARBPROC glBlendFuncSeparateiARB;
#endif

#endif


//
#ifdef define_GL_ARB_draw_elements_base_vertex

#endif


//
#ifdef define_GL_ARB_draw_indirect

#endif


//
#ifdef define_GL_ARB_enhanced_layouts

#endif


//
#ifdef define_GL_ARB_explicit_attrib_location

#endif


//
#ifdef define_GL_ARB_explicit_uniform_location

#endif


//
#ifdef define_GL_ARB_fragment_coord_conventions

#endif


//
#ifdef define_GL_ARB_fragment_layer_viewport

#endif


//
#ifdef define_GL_ARB_framebuffer_no_attachments

#endif


//
#ifdef define_GL_ARB_framebuffer_object

#endif


//
#ifdef define_GL_ARB_framebuffer_sRGB

#endif


//
#ifdef define_GL_ARB_get_program_binary

#endif


//
#ifdef define_GL_ARB_gpu_shader5

#endif


//
#ifdef define_GL_ARB_gpu_shader_fp64

#endif


//
#ifdef define_GL_ARB_half_float_vertex

#endif


//
#ifdef define_GL_ARB_imaging

#endif


//
#ifdef define_GL_ARB_indirect_parameters
#ifdef using_glMultiDrawArraysIndirectCountARB
PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC glMultiDrawArraysIndirectCountARB;
#endif
#ifdef using_glMultiDrawElementsIndirectCountARB
PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC glMultiDrawElementsIndirectCountARB;
#endif

#endif


//
#ifdef define_GL_ARB_internalformat_query

#endif


//
#ifdef define_GL_ARB_internalformat_query2

#endif


//
#ifdef define_GL_ARB_invalidate_subdata

#endif


//
#ifdef define_GL_ARB_map_buffer_alignment

#endif


//
#ifdef define_GL_ARB_map_buffer_range

#endif


//
#ifdef define_GL_ARB_multi_bind

#endif


//
#ifdef define_GL_ARB_multi_draw_indirect

#endif


//
#ifdef define_GL_ARB_occlusion_query2

#endif


//
#ifdef define_GL_ARB_program_interface_query

#endif


//
#ifdef define_GL_ARB_provoking_vertex

#endif


//
#ifdef define_GL_ARB_query_buffer_object

#endif


//
#ifdef define_GL_ARB_robust_buffer_access_behavior

#endif


//
#ifdef define_GL_ARB_robustness
#ifdef using_glGetGraphicsResetStatusARB
PFNGLGETGRAPHICSRESETSTATUSARBPROC glGetGraphicsResetStatusARB;
#endif
#ifdef using_glGetnTexImageARB
PFNGLGETNTEXIMAGEARBPROC glGetnTexImageARB;
#endif
#ifdef using_glReadnPixelsARB
PFNGLREADNPIXELSARBPROC glReadnPixelsARB;
#endif
#ifdef using_glGetnCompressedTexImageARB
PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC glGetnCompressedTexImageARB;
#endif
#ifdef using_glGetnUniformfvARB
PFNGLGETNUNIFORMFVARBPROC glGetnUniformfvARB;
#endif
#ifdef using_glGetnUniformivARB
PFNGLGETNUNIFORMIVARBPROC glGetnUniformivARB;
#endif
#ifdef using_glGetnUniformuivARB
PFNGLGETNUNIFORMUIVARBPROC glGetnUniformuivARB;
#endif
#ifdef using_glGetnUniformdvARB
PFNGLGETNUNIFORMDVARBPROC glGetnUniformdvARB;
#endif

#endif


//
#ifdef define_GL_ARB_robustness_isolation

#endif


//
#ifdef define_GL_ARB_sample_shading
#ifdef using_glMinSampleShadingARB
PFNGLMINSAMPLESHADINGARBPROC glMinSampleShadingARB;
#endif

#endif


//
#ifdef define_GL_ARB_sampler_objects

#endif


//
#ifdef define_GL_ARB_seamless_cube_map

#endif


//
#ifdef define_GL_ARB_seamless_cubemap_per_texture

#endif


//
#ifdef define_GL_ARB_separate_shader_objects

#endif


//
#ifdef define_GL_ARB_shader_atomic_counters

#endif


//
#ifdef define_GL_ARB_shader_bit_encoding

#endif


//
#ifdef define_GL_ARB_shader_draw_parameters

#endif


//
#ifdef define_GL_ARB_shader_group_vote

#endif


//
#ifdef define_GL_ARB_shader_image_load_store

#endif


//
#ifdef define_GL_ARB_shader_image_size

#endif


//
#ifdef define_GL_ARB_shader_precision

#endif


//
#ifdef define_GL_ARB_shader_stencil_export

#endif


//
#ifdef define_GL_ARB_shader_storage_buffer_object

#endif


//
#ifdef define_GL_ARB_shader_subroutine

#endif


//
#ifdef define_GL_ARB_shading_language_420pack

#endif


//
#ifdef define_GL_ARB_shading_language_include
#ifdef using_glNamedStringARB
PFNGLNAMEDSTRINGARBPROC glNamedStringARB;
#endif
#ifdef using_glDeleteNamedStringARB
PFNGLDELETENAMEDSTRINGARBPROC glDeleteNamedStringARB;
#endif
#ifdef using_glCompileShaderIncludeARB
PFNGLCOMPILESHADERINCLUDEARBPROC glCompileShaderIncludeARB;
#endif
#ifdef using_glIsNamedStringARB
PFNGLISNAMEDSTRINGARBPROC glIsNamedStringARB;
#endif
#ifdef using_glGetNamedStringARB
PFNGLGETNAMEDSTRINGARBPROC glGetNamedStringARB;
#endif
#ifdef using_glGetNamedStringivARB
PFNGLGETNAMEDSTRINGIVARBPROC glGetNamedStringivARB;
#endif

#endif


//
#ifdef define_GL_ARB_shading_language_packing

#endif


//
#ifdef define_GL_ARB_sparse_texture
#ifdef using_glTexPageCommitmentARB
PFNGLTEXPAGECOMMITMENTARBPROC glTexPageCommitmentARB;
#endif

#endif


//
#ifdef define_GL_ARB_stencil_texturing

#endif


//
#ifdef define_GL_ARB_sync

#endif


//
#ifdef define_GL_ARB_tessellation_shader

#endif


//
#ifdef define_GL_ARB_texture_buffer_object_rgb32

#endif


//
#ifdef define_GL_ARB_texture_buffer_range

#endif


//
#ifdef define_GL_ARB_texture_compression_bptc

#endif


//
#ifdef define_GL_ARB_texture_compression_rgtc

#endif


//
#ifdef define_GL_ARB_texture_cube_map_array

#endif


//
#ifdef define_GL_ARB_texture_gather

#endif


//
#ifdef define_GL_ARB_texture_mirror_clamp_to_edge

#endif


//
#ifdef define_GL_ARB_texture_multisample

#endif


//
#ifdef define_GL_ARB_texture_query_levels

#endif


//
#ifdef define_GL_ARB_texture_query_lod

#endif


//
#ifdef define_GL_ARB_texture_rg

#endif


//
#ifdef define_GL_ARB_texture_rgb10_a2ui

#endif


//
#ifdef define_GL_ARB_texture_stencil8

#endif


//
#ifdef define_GL_ARB_texture_storage

#endif


//
#ifdef define_GL_ARB_texture_storage_multisample

#endif


//
#ifdef define_GL_ARB_texture_swizzle

#endif


//
#ifdef define_GL_ARB_texture_view

#endif


//
#ifdef define_GL_ARB_timer_query

#endif


//
#ifdef define_GL_ARB_transform_feedback2

#endif


//
#ifdef define_GL_ARB_transform_feedback3

#endif


//
#ifdef define_GL_ARB_transform_feedback_instanced

#endif


//
#ifdef define_GL_ARB_uniform_buffer_object

#endif


//
#ifdef define_GL_ARB_vertex_array_bgra

#endif


//
#ifdef define_GL_ARB_vertex_array_object

#endif


//
#ifdef define_GL_ARB_vertex_attrib_64bit

#endif


//
#ifdef define_GL_ARB_vertex_attrib_binding

#endif


//
#ifdef define_GL_ARB_vertex_type_10f_11f_11f_rev

#endif


//
#ifdef define_GL_ARB_vertex_type_2_10_10_10_rev

#endif


//
#ifdef define_GL_ARB_viewport_array

#endif


//
#ifdef define_GL_KHR_debug

#endif


//
#ifdef define_GL_KHR_texture_compression_astc_hdr

#endif


//
#ifdef define_GL_KHR_texture_compression_astc_ldr

#endif


bool glelp::initExtensions()
{
#ifdef define_core_1_0

#ifdef using_glCullFace
	glCullFace = (PFNGLCULLFACEPROC)GetProcAddress(GetModuleHandle(TEXT("opengl32.dll")), "glCullFace");
#endif
#ifdef using_glFrontFace
	glFrontFace = (PFNGLFRONTFACEPROC)GetProcAddress(GetModuleHandle(TEXT("opengl32.dll")), "glFrontFace");
#endif
#ifdef using_glHint
	glHint = (PFNGLHINTPROC)GetProcAddress(GetModuleHandle(TEXT("opengl32.dll")), "glHint");
#endif
#ifdef using_glLineWidth
	glLineWidth = (PFNGLLINEWIDTHPROC)GetProcAddress(GetModuleHandle(TEXT("opengl32.dll")), "glLineWidth");
#endif
#ifdef using_glPointSize
	glPointSize = (PFNGLPOINTSIZEPROC)GetProcAddress(GetModuleHandle(TEXT("opengl32.dll")), "glPointSize");
#endif
#ifdef using_glPolygonMode
	glPolygonMode = (PFNGLPOLYGONMODEPROC)GetProcAddress(GetModuleHandle(TEXT("opengl32.dll")), "glPolygonMode");
#endif
#ifdef using_glScissor
	glScissor = (PFNGLSCISSORPROC)GetProcAddress(GetModuleHandle(TEXT("opengl32.dll")), "glScissor");
#endif
#ifdef using_glTexParameterf
	glTexParameterf = (PFNGLTEXPARAMETERFPROC)GetProcAddress(GetModuleHandle(TEXT("opengl32.dll")), "glTexParameterf");
#endif
#ifdef using_glTexParameterfv
	glTexParameterfv = (PFNGLTEXPARAMETERFVPROC)GetProcAddress(GetModuleHandle(TEXT("opengl32.dll")), "glTexParameterfv");
#endif
#ifdef using_glTexParameteri
	glTexParameteri = (PFNGLTEXPARAMETERIPROC)GetProcAddress(GetModuleHandle(TEXT("opengl32.dll")), "glTexParameteri");
#endif
#ifdef using_glTexParameteriv
	glTexParameteriv = (PFNGLTEXPARAMETERIVPROC)GetProcAddress(GetModuleHandle(TEXT("opengl32.dll")), "glTexParameteriv");
#endif
#ifdef using_glTexImage1D
	glTexImage1D = (PFNGLTEXIMAGE1DPROC)GetProcAddress(GetModuleHandle(TEXT("opengl32.dll")), "glTexImage1D");
#endif
#ifdef using_glTexImage2D
	glTexImage2D = (PFNGLTEXIMAGE2DPROC)GetProcAddress(GetModuleHandle(TEXT("opengl32.dll")), "glTexImage2D");
#endif
#ifdef using_glDrawBuffer
	glDrawBuffer = (PFNGLDRAWBUFFERPROC)GetProcAddress(GetModuleHandle(TEXT("opengl32.dll")), "glDrawBuffer");
#endif
#ifdef using_glClear
	glClear = (PFNGLCLEARPROC)GetProcAddress(GetModuleHandle(TEXT("opengl32.dll")), "glClear");
#endif
#ifdef using_glClearColor
	glClearColor = (PFNGLCLEARCOLORPROC)GetProcAddress(GetModuleHandle(TEXT("opengl32.dll")), "glClearColor");
#endif
#ifdef using_glClearStencil
	glClearStencil = (PFNGLCLEARSTENCILPROC)GetProcAddress(GetModuleHandle(TEXT("opengl32.dll")), "glClearStencil");
#endif
#ifdef using_glClearDepth
	glClearDepth = (PFNGLCLEARDEPTHPROC)GetProcAddress(GetModuleHandle(TEXT("opengl32.dll")), "glClearDepth");
#endif
#ifdef using_glStencilMask
	glStencilMask = (PFNGLSTENCILMASKPROC)GetProcAddress(GetModuleHandle(TEXT("opengl32.dll")), "glStencilMask");
#endif
#ifdef using_glColorMask
	glColorMask = (PFNGLCOLORMASKPROC)GetProcAddress(GetModuleHandle(TEXT("opengl32.dll")), "glColorMask");
#endif
#ifdef using_glDepthMask
	glDepthMask = (PFNGLDEPTHMASKPROC)GetProcAddress(GetModuleHandle(TEXT("opengl32.dll")), "glDepthMask");
#endif
#ifdef using_glDisable
	glDisable = (PFNGLDISABLEPROC)GetProcAddress(GetModuleHandle(TEXT("opengl32.dll")), "glDisable");
#endif
#ifdef using_glEnable
	glEnable = (PFNGLENABLEPROC)GetProcAddress(GetModuleHandle(TEXT("opengl32.dll")), "glEnable");
#endif
#ifdef using_glFinish
	glFinish = (PFNGLFINISHPROC)GetProcAddress(GetModuleHandle(TEXT("opengl32.dll")), "glFinish");
#endif
#ifdef using_glFlush
	glFlush = (PFNGLFLUSHPROC)GetProcAddress(GetModuleHandle(TEXT("opengl32.dll")), "glFlush");
#endif
#ifdef using_glBlendFunc
	glBlendFunc = (PFNGLBLENDFUNCPROC)GetProcAddress(GetModuleHandle(TEXT("opengl32.dll")), "glBlendFunc");
#endif
#ifdef using_glLogicOp
	glLogicOp = (PFNGLLOGICOPPROC)GetProcAddress(GetModuleHandle(TEXT("opengl32.dll")), "glLogicOp");
#endif
#ifdef using_glStencilFunc
	glStencilFunc = (PFNGLSTENCILFUNCPROC)GetProcAddress(GetModuleHandle(TEXT("opengl32.dll")), "glStencilFunc");
#endif
#ifdef using_glStencilOp
	glStencilOp = (PFNGLSTENCILOPPROC)GetProcAddress(GetModuleHandle(TEXT("opengl32.dll")), "glStencilOp");
#endif
#ifdef using_glDepthFunc
	glDepthFunc = (PFNGLDEPTHFUNCPROC)GetProcAddress(GetModuleHandle(TEXT("opengl32.dll")), "glDepthFunc");
#endif
#ifdef using_glPixelStoref
	glPixelStoref = (PFNGLPIXELSTOREFPROC)GetProcAddress(GetModuleHandle(TEXT("opengl32.dll")), "glPixelStoref");
#endif
#ifdef using_glPixelStorei
	glPixelStorei = (PFNGLPIXELSTOREIPROC)GetProcAddress(GetModuleHandle(TEXT("opengl32.dll")), "glPixelStorei");
#endif
#ifdef using_glReadBuffer
	glReadBuffer = (PFNGLREADBUFFERPROC)GetProcAddress(GetModuleHandle(TEXT("opengl32.dll")), "glReadBuffer");
#endif
#ifdef using_glReadPixels
	glReadPixels = (PFNGLREADPIXELSPROC)GetProcAddress(GetModuleHandle(TEXT("opengl32.dll")), "glReadPixels");
#endif
#ifdef using_glGetBooleanv
	glGetBooleanv = (PFNGLGETBOOLEANVPROC)GetProcAddress(GetModuleHandle(TEXT("opengl32.dll")), "glGetBooleanv");
#endif
#ifdef using_glGetDoublev
	glGetDoublev = (PFNGLGETDOUBLEVPROC)GetProcAddress(GetModuleHandle(TEXT("opengl32.dll")), "glGetDoublev");
#endif
#ifdef using_glGetError
	glGetError = (PFNGLGETERRORPROC)GetProcAddress(GetModuleHandle(TEXT("opengl32.dll")), "glGetError");
#endif
#ifdef using_glGetFloatv
	glGetFloatv = (PFNGLGETFLOATVPROC)GetProcAddress(GetModuleHandle(TEXT("opengl32.dll")), "glGetFloatv");
#endif
#ifdef using_glGetIntegerv
	glGetIntegerv = (PFNGLGETINTEGERVPROC)GetProcAddress(GetModuleHandle(TEXT("opengl32.dll")), "glGetIntegerv");
#endif
#ifdef using_glGetString
	glGetString = (PFNGLGETSTRINGPROC)GetProcAddress(GetModuleHandle(TEXT("opengl32.dll")), "glGetString");
#endif
#ifdef using_glGetTexImage
	glGetTexImage = (PFNGLGETTEXIMAGEPROC)GetProcAddress(GetModuleHandle(TEXT("opengl32.dll")), "glGetTexImage");
#endif
#ifdef using_glGetTexParameterfv
	glGetTexParameterfv = (PFNGLGETTEXPARAMETERFVPROC)GetProcAddress(GetModuleHandle(TEXT("opengl32.dll")), "glGetTexParameterfv");
#endif
#ifdef using_glGetTexParameteriv
	glGetTexParameteriv = (PFNGLGETTEXPARAMETERIVPROC)GetProcAddress(GetModuleHandle(TEXT("opengl32.dll")), "glGetTexParameteriv");
#endif
#ifdef using_glGetTexLevelParameterfv
	glGetTexLevelParameterfv = (PFNGLGETTEXLEVELPARAMETERFVPROC)GetProcAddress(GetModuleHandle(TEXT("opengl32.dll")), "glGetTexLevelParameterfv");
#endif
#ifdef using_glGetTexLevelParameteriv
	glGetTexLevelParameteriv = (PFNGLGETTEXLEVELPARAMETERIVPROC)GetProcAddress(GetModuleHandle(TEXT("opengl32.dll")), "glGetTexLevelParameteriv");
#endif
#ifdef using_glIsEnabled
	glIsEnabled = (PFNGLISENABLEDPROC)GetProcAddress(GetModuleHandle(TEXT("opengl32.dll")), "glIsEnabled");
#endif
#ifdef using_glDepthRange
	glDepthRange = (PFNGLDEPTHRANGEPROC)GetProcAddress(GetModuleHandle(TEXT("opengl32.dll")), "glDepthRange");
#endif
#ifdef using_glViewport
	glViewport = (PFNGLVIEWPORTPROC)GetProcAddress(GetModuleHandle(TEXT("opengl32.dll")), "glViewport");
#endif

#endif

#ifdef define_core_1_1

#ifdef using_glDrawArrays
	glDrawArrays = (PFNGLDRAWARRAYSPROC)GetProcAddress(GetModuleHandle(TEXT("opengl32.dll")), "glDrawArrays");
#endif
#ifdef using_glDrawElements
	glDrawElements = (PFNGLDRAWELEMENTSPROC)GetProcAddress(GetModuleHandle(TEXT("opengl32.dll")), "glDrawElements");
#endif
#ifdef using_glGetPointerv
	glGetPointerv = (PFNGLGETPOINTERVPROC)GetProcAddress(GetModuleHandle(TEXT("opengl32.dll")), "glGetPointerv");
#endif
#ifdef using_glPolygonOffset
	glPolygonOffset = (PFNGLPOLYGONOFFSETPROC)GetProcAddress(GetModuleHandle(TEXT("opengl32.dll")), "glPolygonOffset");
#endif
#ifdef using_glCopyTexImage1D
	glCopyTexImage1D = (PFNGLCOPYTEXIMAGE1DPROC)GetProcAddress(GetModuleHandle(TEXT("opengl32.dll")), "glCopyTexImage1D");
#endif
#ifdef using_glCopyTexImage2D
	glCopyTexImage2D = (PFNGLCOPYTEXIMAGE2DPROC)GetProcAddress(GetModuleHandle(TEXT("opengl32.dll")), "glCopyTexImage2D");
#endif
#ifdef using_glCopyTexSubImage1D
	glCopyTexSubImage1D = (PFNGLCOPYTEXSUBIMAGE1DPROC)GetProcAddress(GetModuleHandle(TEXT("opengl32.dll")), "glCopyTexSubImage1D");
#endif
#ifdef using_glCopyTexSubImage2D
	glCopyTexSubImage2D = (PFNGLCOPYTEXSUBIMAGE2DPROC)GetProcAddress(GetModuleHandle(TEXT("opengl32.dll")), "glCopyTexSubImage2D");
#endif
#ifdef using_glTexSubImage1D
	glTexSubImage1D = (PFNGLTEXSUBIMAGE1DPROC)GetProcAddress(GetModuleHandle(TEXT("opengl32.dll")), "glTexSubImage1D");
#endif
#ifdef using_glTexSubImage2D
	glTexSubImage2D = (PFNGLTEXSUBIMAGE2DPROC)GetProcAddress(GetModuleHandle(TEXT("opengl32.dll")), "glTexSubImage2D");
#endif
#ifdef using_glBindTexture
	glBindTexture = (PFNGLBINDTEXTUREPROC)GetProcAddress(GetModuleHandle(TEXT("opengl32.dll")), "glBindTexture");
#endif
#ifdef using_glDeleteTextures
	glDeleteTextures = (PFNGLDELETETEXTURESPROC)GetProcAddress(GetModuleHandle(TEXT("opengl32.dll")), "glDeleteTextures");
#endif
#ifdef using_glGenTextures
	glGenTextures = (PFNGLGENTEXTURESPROC)GetProcAddress(GetModuleHandle(TEXT("opengl32.dll")), "glGenTextures");
#endif
#ifdef using_glIsTexture
	glIsTexture = (PFNGLISTEXTUREPROC)GetProcAddress(GetModuleHandle(TEXT("opengl32.dll")), "glIsTexture");
#endif

#endif

#ifdef define_core_1_2

#ifdef using_glDrawRangeElements
	glDrawRangeElements = (PFNGLDRAWRANGEELEMENTSPROC)wglGetProcAddress("glDrawRangeElements");
#endif
#ifdef using_glTexImage3D
	glTexImage3D = (PFNGLTEXIMAGE3DPROC)wglGetProcAddress("glTexImage3D");
#endif
#ifdef using_glTexSubImage3D
	glTexSubImage3D = (PFNGLTEXSUBIMAGE3DPROC)wglGetProcAddress("glTexSubImage3D");
#endif
#ifdef using_glCopyTexSubImage3D
	glCopyTexSubImage3D = (PFNGLCOPYTEXSUBIMAGE3DPROC)wglGetProcAddress("glCopyTexSubImage3D");
#endif

#endif

#ifdef define_core_1_3

#ifdef using_glActiveTexture
	glActiveTexture = (PFNGLACTIVETEXTUREPROC)wglGetProcAddress("glActiveTexture");
#endif
#ifdef using_glSampleCoverage
	glSampleCoverage = (PFNGLSAMPLECOVERAGEPROC)wglGetProcAddress("glSampleCoverage");
#endif
#ifdef using_glCompressedTexImage3D
	glCompressedTexImage3D = (PFNGLCOMPRESSEDTEXIMAGE3DPROC)wglGetProcAddress("glCompressedTexImage3D");
#endif
#ifdef using_glCompressedTexImage2D
	glCompressedTexImage2D = (PFNGLCOMPRESSEDTEXIMAGE2DPROC)wglGetProcAddress("glCompressedTexImage2D");
#endif
#ifdef using_glCompressedTexImage1D
	glCompressedTexImage1D = (PFNGLCOMPRESSEDTEXIMAGE1DPROC)wglGetProcAddress("glCompressedTexImage1D");
#endif
#ifdef using_glCompressedTexSubImage3D
	glCompressedTexSubImage3D = (PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC)wglGetProcAddress("glCompressedTexSubImage3D");
#endif
#ifdef using_glCompressedTexSubImage2D
	glCompressedTexSubImage2D = (PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC)wglGetProcAddress("glCompressedTexSubImage2D");
#endif
#ifdef using_glCompressedTexSubImage1D
	glCompressedTexSubImage1D = (PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC)wglGetProcAddress("glCompressedTexSubImage1D");
#endif
#ifdef using_glGetCompressedTexImage
	glGetCompressedTexImage = (PFNGLGETCOMPRESSEDTEXIMAGEPROC)wglGetProcAddress("glGetCompressedTexImage");
#endif

#endif

#ifdef define_core_1_4

#ifdef using_glBlendFuncSeparate
	glBlendFuncSeparate = (PFNGLBLENDFUNCSEPARATEPROC)wglGetProcAddress("glBlendFuncSeparate");
#endif
#ifdef using_glMultiDrawArrays
	glMultiDrawArrays = (PFNGLMULTIDRAWARRAYSPROC)wglGetProcAddress("glMultiDrawArrays");
#endif
#ifdef using_glMultiDrawElements
	glMultiDrawElements = (PFNGLMULTIDRAWELEMENTSPROC)wglGetProcAddress("glMultiDrawElements");
#endif
#ifdef using_glPointParameterf
	glPointParameterf = (PFNGLPOINTPARAMETERFPROC)wglGetProcAddress("glPointParameterf");
#endif
#ifdef using_glPointParameterfv
	glPointParameterfv = (PFNGLPOINTPARAMETERFVPROC)wglGetProcAddress("glPointParameterfv");
#endif
#ifdef using_glPointParameteri
	glPointParameteri = (PFNGLPOINTPARAMETERIPROC)wglGetProcAddress("glPointParameteri");
#endif
#ifdef using_glPointParameteriv
	glPointParameteriv = (PFNGLPOINTPARAMETERIVPROC)wglGetProcAddress("glPointParameteriv");
#endif
#ifdef using_glBlendColor
	glBlendColor = (PFNGLBLENDCOLORPROC)wglGetProcAddress("glBlendColor");
#endif
#ifdef using_glBlendEquation
	glBlendEquation = (PFNGLBLENDEQUATIONPROC)wglGetProcAddress("glBlendEquation");
#endif

#endif

#ifdef define_core_1_5

#ifdef using_glGenQueries
	glGenQueries = (PFNGLGENQUERIESPROC)wglGetProcAddress("glGenQueries");
#endif
#ifdef using_glDeleteQueries
	glDeleteQueries = (PFNGLDELETEQUERIESPROC)wglGetProcAddress("glDeleteQueries");
#endif
#ifdef using_glIsQuery
	glIsQuery = (PFNGLISQUERYPROC)wglGetProcAddress("glIsQuery");
#endif
#ifdef using_glBeginQuery
	glBeginQuery = (PFNGLBEGINQUERYPROC)wglGetProcAddress("glBeginQuery");
#endif
#ifdef using_glEndQuery
	glEndQuery = (PFNGLENDQUERYPROC)wglGetProcAddress("glEndQuery");
#endif
#ifdef using_glGetQueryiv
	glGetQueryiv = (PFNGLGETQUERYIVPROC)wglGetProcAddress("glGetQueryiv");
#endif
#ifdef using_glGetQueryObjectiv
	glGetQueryObjectiv = (PFNGLGETQUERYOBJECTIVPROC)wglGetProcAddress("glGetQueryObjectiv");
#endif
#ifdef using_glGetQueryObjectuiv
	glGetQueryObjectuiv = (PFNGLGETQUERYOBJECTUIVPROC)wglGetProcAddress("glGetQueryObjectuiv");
#endif
#ifdef using_glBindBuffer
	glBindBuffer = (PFNGLBINDBUFFERPROC)wglGetProcAddress("glBindBuffer");
#endif
#ifdef using_glDeleteBuffers
	glDeleteBuffers = (PFNGLDELETEBUFFERSPROC)wglGetProcAddress("glDeleteBuffers");
#endif
#ifdef using_glGenBuffers
	glGenBuffers = (PFNGLGENBUFFERSPROC)wglGetProcAddress("glGenBuffers");
#endif
#ifdef using_glIsBuffer
	glIsBuffer = (PFNGLISBUFFERPROC)wglGetProcAddress("glIsBuffer");
#endif
#ifdef using_glBufferData
	glBufferData = (PFNGLBUFFERDATAPROC)wglGetProcAddress("glBufferData");
#endif
#ifdef using_glBufferSubData
	glBufferSubData = (PFNGLBUFFERSUBDATAPROC)wglGetProcAddress("glBufferSubData");
#endif
#ifdef using_glGetBufferSubData
	glGetBufferSubData = (PFNGLGETBUFFERSUBDATAPROC)wglGetProcAddress("glGetBufferSubData");
#endif
#ifdef using_glMapBuffer
	glMapBuffer = (PFNGLMAPBUFFERPROC)wglGetProcAddress("glMapBuffer");
#endif
#ifdef using_glUnmapBuffer
	glUnmapBuffer = (PFNGLUNMAPBUFFERPROC)wglGetProcAddress("glUnmapBuffer");
#endif
#ifdef using_glGetBufferParameteriv
	glGetBufferParameteriv = (PFNGLGETBUFFERPARAMETERIVPROC)wglGetProcAddress("glGetBufferParameteriv");
#endif
#ifdef using_glGetBufferPointerv
	glGetBufferPointerv = (PFNGLGETBUFFERPOINTERVPROC)wglGetProcAddress("glGetBufferPointerv");
#endif

#endif

#ifdef define_core_2_0

#ifdef using_glBlendEquationSeparate
	glBlendEquationSeparate = (PFNGLBLENDEQUATIONSEPARATEPROC)wglGetProcAddress("glBlendEquationSeparate");
#endif
#ifdef using_glDrawBuffers
	glDrawBuffers = (PFNGLDRAWBUFFERSPROC)wglGetProcAddress("glDrawBuffers");
#endif
#ifdef using_glStencilOpSeparate
	glStencilOpSeparate = (PFNGLSTENCILOPSEPARATEPROC)wglGetProcAddress("glStencilOpSeparate");
#endif
#ifdef using_glStencilFuncSeparate
	glStencilFuncSeparate = (PFNGLSTENCILFUNCSEPARATEPROC)wglGetProcAddress("glStencilFuncSeparate");
#endif
#ifdef using_glStencilMaskSeparate
	glStencilMaskSeparate = (PFNGLSTENCILMASKSEPARATEPROC)wglGetProcAddress("glStencilMaskSeparate");
#endif
#ifdef using_glAttachShader
	glAttachShader = (PFNGLATTACHSHADERPROC)wglGetProcAddress("glAttachShader");
#endif
#ifdef using_glBindAttribLocation
	glBindAttribLocation = (PFNGLBINDATTRIBLOCATIONPROC)wglGetProcAddress("glBindAttribLocation");
#endif
#ifdef using_glCompileShader
	glCompileShader = (PFNGLCOMPILESHADERPROC)wglGetProcAddress("glCompileShader");
#endif
#ifdef using_glCreateProgram
	glCreateProgram = (PFNGLCREATEPROGRAMPROC)wglGetProcAddress("glCreateProgram");
#endif
#ifdef using_glCreateShader
	glCreateShader = (PFNGLCREATESHADERPROC)wglGetProcAddress("glCreateShader");
#endif
#ifdef using_glDeleteProgram
	glDeleteProgram = (PFNGLDELETEPROGRAMPROC)wglGetProcAddress("glDeleteProgram");
#endif
#ifdef using_glDeleteShader
	glDeleteShader = (PFNGLDELETESHADERPROC)wglGetProcAddress("glDeleteShader");
#endif
#ifdef using_glDetachShader
	glDetachShader = (PFNGLDETACHSHADERPROC)wglGetProcAddress("glDetachShader");
#endif
#ifdef using_glDisableVertexAttribArray
	glDisableVertexAttribArray = (PFNGLDISABLEVERTEXATTRIBARRAYPROC)wglGetProcAddress("glDisableVertexAttribArray");
#endif
#ifdef using_glEnableVertexAttribArray
	glEnableVertexAttribArray = (PFNGLENABLEVERTEXATTRIBARRAYPROC)wglGetProcAddress("glEnableVertexAttribArray");
#endif
#ifdef using_glGetActiveAttrib
	glGetActiveAttrib = (PFNGLGETACTIVEATTRIBPROC)wglGetProcAddress("glGetActiveAttrib");
#endif
#ifdef using_glGetActiveUniform
	glGetActiveUniform = (PFNGLGETACTIVEUNIFORMPROC)wglGetProcAddress("glGetActiveUniform");
#endif
#ifdef using_glGetAttachedShaders
	glGetAttachedShaders = (PFNGLGETATTACHEDSHADERSPROC)wglGetProcAddress("glGetAttachedShaders");
#endif
#ifdef using_glGetAttribLocation
	glGetAttribLocation = (PFNGLGETATTRIBLOCATIONPROC)wglGetProcAddress("glGetAttribLocation");
#endif
#ifdef using_glGetProgramiv
	glGetProgramiv = (PFNGLGETPROGRAMIVPROC)wglGetProcAddress("glGetProgramiv");
#endif
#ifdef using_glGetProgramInfoLog
	glGetProgramInfoLog = (PFNGLGETPROGRAMINFOLOGPROC)wglGetProcAddress("glGetProgramInfoLog");
#endif
#ifdef using_glGetShaderiv
	glGetShaderiv = (PFNGLGETSHADERIVPROC)wglGetProcAddress("glGetShaderiv");
#endif
#ifdef using_glGetShaderInfoLog
	glGetShaderInfoLog = (PFNGLGETSHADERINFOLOGPROC)wglGetProcAddress("glGetShaderInfoLog");
#endif
#ifdef using_glGetShaderSource
	glGetShaderSource = (PFNGLGETSHADERSOURCEPROC)wglGetProcAddress("glGetShaderSource");
#endif
#ifdef using_glGetUniformLocation
	glGetUniformLocation = (PFNGLGETUNIFORMLOCATIONPROC)wglGetProcAddress("glGetUniformLocation");
#endif
#ifdef using_glGetUniformfv
	glGetUniformfv = (PFNGLGETUNIFORMFVPROC)wglGetProcAddress("glGetUniformfv");
#endif
#ifdef using_glGetUniformiv
	glGetUniformiv = (PFNGLGETUNIFORMIVPROC)wglGetProcAddress("glGetUniformiv");
#endif
#ifdef using_glGetVertexAttribdv
	glGetVertexAttribdv = (PFNGLGETVERTEXATTRIBDVPROC)wglGetProcAddress("glGetVertexAttribdv");
#endif
#ifdef using_glGetVertexAttribfv
	glGetVertexAttribfv = (PFNGLGETVERTEXATTRIBFVPROC)wglGetProcAddress("glGetVertexAttribfv");
#endif
#ifdef using_glGetVertexAttribiv
	glGetVertexAttribiv = (PFNGLGETVERTEXATTRIBIVPROC)wglGetProcAddress("glGetVertexAttribiv");
#endif
#ifdef using_glGetVertexAttribPointerv
	glGetVertexAttribPointerv = (PFNGLGETVERTEXATTRIBPOINTERVPROC)wglGetProcAddress("glGetVertexAttribPointerv");
#endif
#ifdef using_glIsProgram
	glIsProgram = (PFNGLISPROGRAMPROC)wglGetProcAddress("glIsProgram");
#endif
#ifdef using_glIsShader
	glIsShader = (PFNGLISSHADERPROC)wglGetProcAddress("glIsShader");
#endif
#ifdef using_glLinkProgram
	glLinkProgram = (PFNGLLINKPROGRAMPROC)wglGetProcAddress("glLinkProgram");
#endif
#ifdef using_glShaderSource
	glShaderSource = (PFNGLSHADERSOURCEPROC)wglGetProcAddress("glShaderSource");
#endif
#ifdef using_glUseProgram
	glUseProgram = (PFNGLUSEPROGRAMPROC)wglGetProcAddress("glUseProgram");
#endif
#ifdef using_glUniform1f
	glUniform1f = (PFNGLUNIFORM1FPROC)wglGetProcAddress("glUniform1f");
#endif
#ifdef using_glUniform2f
	glUniform2f = (PFNGLUNIFORM2FPROC)wglGetProcAddress("glUniform2f");
#endif
#ifdef using_glUniform3f
	glUniform3f = (PFNGLUNIFORM3FPROC)wglGetProcAddress("glUniform3f");
#endif
#ifdef using_glUniform4f
	glUniform4f = (PFNGLUNIFORM4FPROC)wglGetProcAddress("glUniform4f");
#endif
#ifdef using_glUniform1i
	glUniform1i = (PFNGLUNIFORM1IPROC)wglGetProcAddress("glUniform1i");
#endif
#ifdef using_glUniform2i
	glUniform2i = (PFNGLUNIFORM2IPROC)wglGetProcAddress("glUniform2i");
#endif
#ifdef using_glUniform3i
	glUniform3i = (PFNGLUNIFORM3IPROC)wglGetProcAddress("glUniform3i");
#endif
#ifdef using_glUniform4i
	glUniform4i = (PFNGLUNIFORM4IPROC)wglGetProcAddress("glUniform4i");
#endif
#ifdef using_glUniform1fv
	glUniform1fv = (PFNGLUNIFORM1FVPROC)wglGetProcAddress("glUniform1fv");
#endif
#ifdef using_glUniform2fv
	glUniform2fv = (PFNGLUNIFORM2FVPROC)wglGetProcAddress("glUniform2fv");
#endif
#ifdef using_glUniform3fv
	glUniform3fv = (PFNGLUNIFORM3FVPROC)wglGetProcAddress("glUniform3fv");
#endif
#ifdef using_glUniform4fv
	glUniform4fv = (PFNGLUNIFORM4FVPROC)wglGetProcAddress("glUniform4fv");
#endif
#ifdef using_glUniform1iv
	glUniform1iv = (PFNGLUNIFORM1IVPROC)wglGetProcAddress("glUniform1iv");
#endif
#ifdef using_glUniform2iv
	glUniform2iv = (PFNGLUNIFORM2IVPROC)wglGetProcAddress("glUniform2iv");
#endif
#ifdef using_glUniform3iv
	glUniform3iv = (PFNGLUNIFORM3IVPROC)wglGetProcAddress("glUniform3iv");
#endif
#ifdef using_glUniform4iv
	glUniform4iv = (PFNGLUNIFORM4IVPROC)wglGetProcAddress("glUniform4iv");
#endif
#ifdef using_glUniformMatrix2fv
	glUniformMatrix2fv = (PFNGLUNIFORMMATRIX2FVPROC)wglGetProcAddress("glUniformMatrix2fv");
#endif
#ifdef using_glUniformMatrix3fv
	glUniformMatrix3fv = (PFNGLUNIFORMMATRIX3FVPROC)wglGetProcAddress("glUniformMatrix3fv");
#endif
#ifdef using_glUniformMatrix4fv
	glUniformMatrix4fv = (PFNGLUNIFORMMATRIX4FVPROC)wglGetProcAddress("glUniformMatrix4fv");
#endif
#ifdef using_glValidateProgram
	glValidateProgram = (PFNGLVALIDATEPROGRAMPROC)wglGetProcAddress("glValidateProgram");
#endif
#ifdef using_glVertexAttrib1d
	glVertexAttrib1d = (PFNGLVERTEXATTRIB1DPROC)wglGetProcAddress("glVertexAttrib1d");
#endif
#ifdef using_glVertexAttrib1dv
	glVertexAttrib1dv = (PFNGLVERTEXATTRIB1DVPROC)wglGetProcAddress("glVertexAttrib1dv");
#endif
#ifdef using_glVertexAttrib1f
	glVertexAttrib1f = (PFNGLVERTEXATTRIB1FPROC)wglGetProcAddress("glVertexAttrib1f");
#endif
#ifdef using_glVertexAttrib1fv
	glVertexAttrib1fv = (PFNGLVERTEXATTRIB1FVPROC)wglGetProcAddress("glVertexAttrib1fv");
#endif
#ifdef using_glVertexAttrib1s
	glVertexAttrib1s = (PFNGLVERTEXATTRIB1SPROC)wglGetProcAddress("glVertexAttrib1s");
#endif
#ifdef using_glVertexAttrib1sv
	glVertexAttrib1sv = (PFNGLVERTEXATTRIB1SVPROC)wglGetProcAddress("glVertexAttrib1sv");
#endif
#ifdef using_glVertexAttrib2d
	glVertexAttrib2d = (PFNGLVERTEXATTRIB2DPROC)wglGetProcAddress("glVertexAttrib2d");
#endif
#ifdef using_glVertexAttrib2dv
	glVertexAttrib2dv = (PFNGLVERTEXATTRIB2DVPROC)wglGetProcAddress("glVertexAttrib2dv");
#endif
#ifdef using_glVertexAttrib2f
	glVertexAttrib2f = (PFNGLVERTEXATTRIB2FPROC)wglGetProcAddress("glVertexAttrib2f");
#endif
#ifdef using_glVertexAttrib2fv
	glVertexAttrib2fv = (PFNGLVERTEXATTRIB2FVPROC)wglGetProcAddress("glVertexAttrib2fv");
#endif
#ifdef using_glVertexAttrib2s
	glVertexAttrib2s = (PFNGLVERTEXATTRIB2SPROC)wglGetProcAddress("glVertexAttrib2s");
#endif
#ifdef using_glVertexAttrib2sv
	glVertexAttrib2sv = (PFNGLVERTEXATTRIB2SVPROC)wglGetProcAddress("glVertexAttrib2sv");
#endif
#ifdef using_glVertexAttrib3d
	glVertexAttrib3d = (PFNGLVERTEXATTRIB3DPROC)wglGetProcAddress("glVertexAttrib3d");
#endif
#ifdef using_glVertexAttrib3dv
	glVertexAttrib3dv = (PFNGLVERTEXATTRIB3DVPROC)wglGetProcAddress("glVertexAttrib3dv");
#endif
#ifdef using_glVertexAttrib3f
	glVertexAttrib3f = (PFNGLVERTEXATTRIB3FPROC)wglGetProcAddress("glVertexAttrib3f");
#endif
#ifdef using_glVertexAttrib3fv
	glVertexAttrib3fv = (PFNGLVERTEXATTRIB3FVPROC)wglGetProcAddress("glVertexAttrib3fv");
#endif
#ifdef using_glVertexAttrib3s
	glVertexAttrib3s = (PFNGLVERTEXATTRIB3SPROC)wglGetProcAddress("glVertexAttrib3s");
#endif
#ifdef using_glVertexAttrib3sv
	glVertexAttrib3sv = (PFNGLVERTEXATTRIB3SVPROC)wglGetProcAddress("glVertexAttrib3sv");
#endif
#ifdef using_glVertexAttrib4Nbv
	glVertexAttrib4Nbv = (PFNGLVERTEXATTRIB4NBVPROC)wglGetProcAddress("glVertexAttrib4Nbv");
#endif
#ifdef using_glVertexAttrib4Niv
	glVertexAttrib4Niv = (PFNGLVERTEXATTRIB4NIVPROC)wglGetProcAddress("glVertexAttrib4Niv");
#endif
#ifdef using_glVertexAttrib4Nsv
	glVertexAttrib4Nsv = (PFNGLVERTEXATTRIB4NSVPROC)wglGetProcAddress("glVertexAttrib4Nsv");
#endif
#ifdef using_glVertexAttrib4Nub
	glVertexAttrib4Nub = (PFNGLVERTEXATTRIB4NUBPROC)wglGetProcAddress("glVertexAttrib4Nub");
#endif
#ifdef using_glVertexAttrib4Nubv
	glVertexAttrib4Nubv = (PFNGLVERTEXATTRIB4NUBVPROC)wglGetProcAddress("glVertexAttrib4Nubv");
#endif
#ifdef using_glVertexAttrib4Nuiv
	glVertexAttrib4Nuiv = (PFNGLVERTEXATTRIB4NUIVPROC)wglGetProcAddress("glVertexAttrib4Nuiv");
#endif
#ifdef using_glVertexAttrib4Nusv
	glVertexAttrib4Nusv = (PFNGLVERTEXATTRIB4NUSVPROC)wglGetProcAddress("glVertexAttrib4Nusv");
#endif
#ifdef using_glVertexAttrib4bv
	glVertexAttrib4bv = (PFNGLVERTEXATTRIB4BVPROC)wglGetProcAddress("glVertexAttrib4bv");
#endif
#ifdef using_glVertexAttrib4d
	glVertexAttrib4d = (PFNGLVERTEXATTRIB4DPROC)wglGetProcAddress("glVertexAttrib4d");
#endif
#ifdef using_glVertexAttrib4dv
	glVertexAttrib4dv = (PFNGLVERTEXATTRIB4DVPROC)wglGetProcAddress("glVertexAttrib4dv");
#endif
#ifdef using_glVertexAttrib4f
	glVertexAttrib4f = (PFNGLVERTEXATTRIB4FPROC)wglGetProcAddress("glVertexAttrib4f");
#endif
#ifdef using_glVertexAttrib4fv
	glVertexAttrib4fv = (PFNGLVERTEXATTRIB4FVPROC)wglGetProcAddress("glVertexAttrib4fv");
#endif
#ifdef using_glVertexAttrib4iv
	glVertexAttrib4iv = (PFNGLVERTEXATTRIB4IVPROC)wglGetProcAddress("glVertexAttrib4iv");
#endif
#ifdef using_glVertexAttrib4s
	glVertexAttrib4s = (PFNGLVERTEXATTRIB4SPROC)wglGetProcAddress("glVertexAttrib4s");
#endif
#ifdef using_glVertexAttrib4sv
	glVertexAttrib4sv = (PFNGLVERTEXATTRIB4SVPROC)wglGetProcAddress("glVertexAttrib4sv");
#endif
#ifdef using_glVertexAttrib4ubv
	glVertexAttrib4ubv = (PFNGLVERTEXATTRIB4UBVPROC)wglGetProcAddress("glVertexAttrib4ubv");
#endif
#ifdef using_glVertexAttrib4uiv
	glVertexAttrib4uiv = (PFNGLVERTEXATTRIB4UIVPROC)wglGetProcAddress("glVertexAttrib4uiv");
#endif
#ifdef using_glVertexAttrib4usv
	glVertexAttrib4usv = (PFNGLVERTEXATTRIB4USVPROC)wglGetProcAddress("glVertexAttrib4usv");
#endif
#ifdef using_glVertexAttribPointer
	glVertexAttribPointer = (PFNGLVERTEXATTRIBPOINTERPROC)wglGetProcAddress("glVertexAttribPointer");
#endif

#endif

#ifdef define_core_2_1

#ifdef using_glUniformMatrix2x3fv
	glUniformMatrix2x3fv = (PFNGLUNIFORMMATRIX2X3FVPROC)wglGetProcAddress("glUniformMatrix2x3fv");
#endif
#ifdef using_glUniformMatrix3x2fv
	glUniformMatrix3x2fv = (PFNGLUNIFORMMATRIX3X2FVPROC)wglGetProcAddress("glUniformMatrix3x2fv");
#endif
#ifdef using_glUniformMatrix2x4fv
	glUniformMatrix2x4fv = (PFNGLUNIFORMMATRIX2X4FVPROC)wglGetProcAddress("glUniformMatrix2x4fv");
#endif
#ifdef using_glUniformMatrix4x2fv
	glUniformMatrix4x2fv = (PFNGLUNIFORMMATRIX4X2FVPROC)wglGetProcAddress("glUniformMatrix4x2fv");
#endif
#ifdef using_glUniformMatrix3x4fv
	glUniformMatrix3x4fv = (PFNGLUNIFORMMATRIX3X4FVPROC)wglGetProcAddress("glUniformMatrix3x4fv");
#endif
#ifdef using_glUniformMatrix4x3fv
	glUniformMatrix4x3fv = (PFNGLUNIFORMMATRIX4X3FVPROC)wglGetProcAddress("glUniformMatrix4x3fv");
#endif

#endif

#ifdef define_core_3_0

#ifdef using_glColorMaski
	glColorMaski = (PFNGLCOLORMASKIPROC)wglGetProcAddress("glColorMaski");
#endif
#ifdef using_glGetBooleani_v
	glGetBooleani_v = (PFNGLGETBOOLEANI_VPROC)wglGetProcAddress("glGetBooleani_v");
#endif
#ifdef using_glGetIntegeri_v
	glGetIntegeri_v = (PFNGLGETINTEGERI_VPROC)wglGetProcAddress("glGetIntegeri_v");
#endif
#ifdef using_glEnablei
	glEnablei = (PFNGLENABLEIPROC)wglGetProcAddress("glEnablei");
#endif
#ifdef using_glDisablei
	glDisablei = (PFNGLDISABLEIPROC)wglGetProcAddress("glDisablei");
#endif
#ifdef using_glIsEnabledi
	glIsEnabledi = (PFNGLISENABLEDIPROC)wglGetProcAddress("glIsEnabledi");
#endif
#ifdef using_glBeginTransformFeedback
	glBeginTransformFeedback = (PFNGLBEGINTRANSFORMFEEDBACKPROC)wglGetProcAddress("glBeginTransformFeedback");
#endif
#ifdef using_glEndTransformFeedback
	glEndTransformFeedback = (PFNGLENDTRANSFORMFEEDBACKPROC)wglGetProcAddress("glEndTransformFeedback");
#endif
#ifdef using_glBindBufferRange
	glBindBufferRange = (PFNGLBINDBUFFERRANGEPROC)wglGetProcAddress("glBindBufferRange");
#endif
#ifdef using_glBindBufferBase
	glBindBufferBase = (PFNGLBINDBUFFERBASEPROC)wglGetProcAddress("glBindBufferBase");
#endif
#ifdef using_glTransformFeedbackVaryings
	glTransformFeedbackVaryings = (PFNGLTRANSFORMFEEDBACKVARYINGSPROC)wglGetProcAddress("glTransformFeedbackVaryings");
#endif
#ifdef using_glGetTransformFeedbackVarying
	glGetTransformFeedbackVarying = (PFNGLGETTRANSFORMFEEDBACKVARYINGPROC)wglGetProcAddress("glGetTransformFeedbackVarying");
#endif
#ifdef using_glClampColor
	glClampColor = (PFNGLCLAMPCOLORPROC)wglGetProcAddress("glClampColor");
#endif
#ifdef using_glBeginConditionalRender
	glBeginConditionalRender = (PFNGLBEGINCONDITIONALRENDERPROC)wglGetProcAddress("glBeginConditionalRender");
#endif
#ifdef using_glEndConditionalRender
	glEndConditionalRender = (PFNGLENDCONDITIONALRENDERPROC)wglGetProcAddress("glEndConditionalRender");
#endif
#ifdef using_glVertexAttribIPointer
	glVertexAttribIPointer = (PFNGLVERTEXATTRIBIPOINTERPROC)wglGetProcAddress("glVertexAttribIPointer");
#endif
#ifdef using_glGetVertexAttribIiv
	glGetVertexAttribIiv = (PFNGLGETVERTEXATTRIBIIVPROC)wglGetProcAddress("glGetVertexAttribIiv");
#endif
#ifdef using_glGetVertexAttribIuiv
	glGetVertexAttribIuiv = (PFNGLGETVERTEXATTRIBIUIVPROC)wglGetProcAddress("glGetVertexAttribIuiv");
#endif
#ifdef using_glVertexAttribI1i
	glVertexAttribI1i = (PFNGLVERTEXATTRIBI1IPROC)wglGetProcAddress("glVertexAttribI1i");
#endif
#ifdef using_glVertexAttribI2i
	glVertexAttribI2i = (PFNGLVERTEXATTRIBI2IPROC)wglGetProcAddress("glVertexAttribI2i");
#endif
#ifdef using_glVertexAttribI3i
	glVertexAttribI3i = (PFNGLVERTEXATTRIBI3IPROC)wglGetProcAddress("glVertexAttribI3i");
#endif
#ifdef using_glVertexAttribI4i
	glVertexAttribI4i = (PFNGLVERTEXATTRIBI4IPROC)wglGetProcAddress("glVertexAttribI4i");
#endif
#ifdef using_glVertexAttribI1ui
	glVertexAttribI1ui = (PFNGLVERTEXATTRIBI1UIPROC)wglGetProcAddress("glVertexAttribI1ui");
#endif
#ifdef using_glVertexAttribI2ui
	glVertexAttribI2ui = (PFNGLVERTEXATTRIBI2UIPROC)wglGetProcAddress("glVertexAttribI2ui");
#endif
#ifdef using_glVertexAttribI3ui
	glVertexAttribI3ui = (PFNGLVERTEXATTRIBI3UIPROC)wglGetProcAddress("glVertexAttribI3ui");
#endif
#ifdef using_glVertexAttribI4ui
	glVertexAttribI4ui = (PFNGLVERTEXATTRIBI4UIPROC)wglGetProcAddress("glVertexAttribI4ui");
#endif
#ifdef using_glVertexAttribI1iv
	glVertexAttribI1iv = (PFNGLVERTEXATTRIBI1IVPROC)wglGetProcAddress("glVertexAttribI1iv");
#endif
#ifdef using_glVertexAttribI2iv
	glVertexAttribI2iv = (PFNGLVERTEXATTRIBI2IVPROC)wglGetProcAddress("glVertexAttribI2iv");
#endif
#ifdef using_glVertexAttribI3iv
	glVertexAttribI3iv = (PFNGLVERTEXATTRIBI3IVPROC)wglGetProcAddress("glVertexAttribI3iv");
#endif
#ifdef using_glVertexAttribI4iv
	glVertexAttribI4iv = (PFNGLVERTEXATTRIBI4IVPROC)wglGetProcAddress("glVertexAttribI4iv");
#endif
#ifdef using_glVertexAttribI1uiv
	glVertexAttribI1uiv = (PFNGLVERTEXATTRIBI1UIVPROC)wglGetProcAddress("glVertexAttribI1uiv");
#endif
#ifdef using_glVertexAttribI2uiv
	glVertexAttribI2uiv = (PFNGLVERTEXATTRIBI2UIVPROC)wglGetProcAddress("glVertexAttribI2uiv");
#endif
#ifdef using_glVertexAttribI3uiv
	glVertexAttribI3uiv = (PFNGLVERTEXATTRIBI3UIVPROC)wglGetProcAddress("glVertexAttribI3uiv");
#endif
#ifdef using_glVertexAttribI4uiv
	glVertexAttribI4uiv = (PFNGLVERTEXATTRIBI4UIVPROC)wglGetProcAddress("glVertexAttribI4uiv");
#endif
#ifdef using_glVertexAttribI4bv
	glVertexAttribI4bv = (PFNGLVERTEXATTRIBI4BVPROC)wglGetProcAddress("glVertexAttribI4bv");
#endif
#ifdef using_glVertexAttribI4sv
	glVertexAttribI4sv = (PFNGLVERTEXATTRIBI4SVPROC)wglGetProcAddress("glVertexAttribI4sv");
#endif
#ifdef using_glVertexAttribI4ubv
	glVertexAttribI4ubv = (PFNGLVERTEXATTRIBI4UBVPROC)wglGetProcAddress("glVertexAttribI4ubv");
#endif
#ifdef using_glVertexAttribI4usv
	glVertexAttribI4usv = (PFNGLVERTEXATTRIBI4USVPROC)wglGetProcAddress("glVertexAttribI4usv");
#endif
#ifdef using_glGetUniformuiv
	glGetUniformuiv = (PFNGLGETUNIFORMUIVPROC)wglGetProcAddress("glGetUniformuiv");
#endif
#ifdef using_glBindFragDataLocation
	glBindFragDataLocation = (PFNGLBINDFRAGDATALOCATIONPROC)wglGetProcAddress("glBindFragDataLocation");
#endif
#ifdef using_glGetFragDataLocation
	glGetFragDataLocation = (PFNGLGETFRAGDATALOCATIONPROC)wglGetProcAddress("glGetFragDataLocation");
#endif
#ifdef using_glUniform1ui
	glUniform1ui = (PFNGLUNIFORM1UIPROC)wglGetProcAddress("glUniform1ui");
#endif
#ifdef using_glUniform2ui
	glUniform2ui = (PFNGLUNIFORM2UIPROC)wglGetProcAddress("glUniform2ui");
#endif
#ifdef using_glUniform3ui
	glUniform3ui = (PFNGLUNIFORM3UIPROC)wglGetProcAddress("glUniform3ui");
#endif
#ifdef using_glUniform4ui
	glUniform4ui = (PFNGLUNIFORM4UIPROC)wglGetProcAddress("glUniform4ui");
#endif
#ifdef using_glUniform1uiv
	glUniform1uiv = (PFNGLUNIFORM1UIVPROC)wglGetProcAddress("glUniform1uiv");
#endif
#ifdef using_glUniform2uiv
	glUniform2uiv = (PFNGLUNIFORM2UIVPROC)wglGetProcAddress("glUniform2uiv");
#endif
#ifdef using_glUniform3uiv
	glUniform3uiv = (PFNGLUNIFORM3UIVPROC)wglGetProcAddress("glUniform3uiv");
#endif
#ifdef using_glUniform4uiv
	glUniform4uiv = (PFNGLUNIFORM4UIVPROC)wglGetProcAddress("glUniform4uiv");
#endif
#ifdef using_glTexParameterIiv
	glTexParameterIiv = (PFNGLTEXPARAMETERIIVPROC)wglGetProcAddress("glTexParameterIiv");
#endif
#ifdef using_glTexParameterIuiv
	glTexParameterIuiv = (PFNGLTEXPARAMETERIUIVPROC)wglGetProcAddress("glTexParameterIuiv");
#endif
#ifdef using_glGetTexParameterIiv
	glGetTexParameterIiv = (PFNGLGETTEXPARAMETERIIVPROC)wglGetProcAddress("glGetTexParameterIiv");
#endif
#ifdef using_glGetTexParameterIuiv
	glGetTexParameterIuiv = (PFNGLGETTEXPARAMETERIUIVPROC)wglGetProcAddress("glGetTexParameterIuiv");
#endif
#ifdef using_glClearBufferiv
	glClearBufferiv = (PFNGLCLEARBUFFERIVPROC)wglGetProcAddress("glClearBufferiv");
#endif
#ifdef using_glClearBufferuiv
	glClearBufferuiv = (PFNGLCLEARBUFFERUIVPROC)wglGetProcAddress("glClearBufferuiv");
#endif
#ifdef using_glClearBufferfv
	glClearBufferfv = (PFNGLCLEARBUFFERFVPROC)wglGetProcAddress("glClearBufferfv");
#endif
#ifdef using_glClearBufferfi
	glClearBufferfi = (PFNGLCLEARBUFFERFIPROC)wglGetProcAddress("glClearBufferfi");
#endif
#ifdef using_glGetStringi
	glGetStringi = (PFNGLGETSTRINGIPROC)wglGetProcAddress("glGetStringi");
#endif
#ifdef using_glIsRenderbuffer
	glIsRenderbuffer = (PFNGLISRENDERBUFFERPROC)wglGetProcAddress("glIsRenderbuffer");
#endif
#ifdef using_glBindRenderbuffer
	glBindRenderbuffer = (PFNGLBINDRENDERBUFFERPROC)wglGetProcAddress("glBindRenderbuffer");
#endif
#ifdef using_glDeleteRenderbuffers
	glDeleteRenderbuffers = (PFNGLDELETERENDERBUFFERSPROC)wglGetProcAddress("glDeleteRenderbuffers");
#endif
#ifdef using_glGenRenderbuffers
	glGenRenderbuffers = (PFNGLGENRENDERBUFFERSPROC)wglGetProcAddress("glGenRenderbuffers");
#endif
#ifdef using_glRenderbufferStorage
	glRenderbufferStorage = (PFNGLRENDERBUFFERSTORAGEPROC)wglGetProcAddress("glRenderbufferStorage");
#endif
#ifdef using_glGetRenderbufferParameteriv
	glGetRenderbufferParameteriv = (PFNGLGETRENDERBUFFERPARAMETERIVPROC)wglGetProcAddress("glGetRenderbufferParameteriv");
#endif
#ifdef using_glIsFramebuffer
	glIsFramebuffer = (PFNGLISFRAMEBUFFERPROC)wglGetProcAddress("glIsFramebuffer");
#endif
#ifdef using_glBindFramebuffer
	glBindFramebuffer = (PFNGLBINDFRAMEBUFFERPROC)wglGetProcAddress("glBindFramebuffer");
#endif
#ifdef using_glDeleteFramebuffers
	glDeleteFramebuffers = (PFNGLDELETEFRAMEBUFFERSPROC)wglGetProcAddress("glDeleteFramebuffers");
#endif
#ifdef using_glGenFramebuffers
	glGenFramebuffers = (PFNGLGENFRAMEBUFFERSPROC)wglGetProcAddress("glGenFramebuffers");
#endif
#ifdef using_glCheckFramebufferStatus
	glCheckFramebufferStatus = (PFNGLCHECKFRAMEBUFFERSTATUSPROC)wglGetProcAddress("glCheckFramebufferStatus");
#endif
#ifdef using_glFramebufferTexture1D
	glFramebufferTexture1D = (PFNGLFRAMEBUFFERTEXTURE1DPROC)wglGetProcAddress("glFramebufferTexture1D");
#endif
#ifdef using_glFramebufferTexture2D
	glFramebufferTexture2D = (PFNGLFRAMEBUFFERTEXTURE2DPROC)wglGetProcAddress("glFramebufferTexture2D");
#endif
#ifdef using_glFramebufferTexture3D
	glFramebufferTexture3D = (PFNGLFRAMEBUFFERTEXTURE3DPROC)wglGetProcAddress("glFramebufferTexture3D");
#endif
#ifdef using_glFramebufferRenderbuffer
	glFramebufferRenderbuffer = (PFNGLFRAMEBUFFERRENDERBUFFERPROC)wglGetProcAddress("glFramebufferRenderbuffer");
#endif
#ifdef using_glGetFramebufferAttachmentParameteriv
	glGetFramebufferAttachmentParameteriv = (PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC)wglGetProcAddress("glGetFramebufferAttachmentParameteriv");
#endif
#ifdef using_glGenerateMipmap
	glGenerateMipmap = (PFNGLGENERATEMIPMAPPROC)wglGetProcAddress("glGenerateMipmap");
#endif
#ifdef using_glBlitFramebuffer
	glBlitFramebuffer = (PFNGLBLITFRAMEBUFFERPROC)wglGetProcAddress("glBlitFramebuffer");
#endif
#ifdef using_glRenderbufferStorageMultisample
	glRenderbufferStorageMultisample = (PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC)wglGetProcAddress("glRenderbufferStorageMultisample");
#endif
#ifdef using_glFramebufferTextureLayer
	glFramebufferTextureLayer = (PFNGLFRAMEBUFFERTEXTURELAYERPROC)wglGetProcAddress("glFramebufferTextureLayer");
#endif
#ifdef using_glMapBufferRange
	glMapBufferRange = (PFNGLMAPBUFFERRANGEPROC)wglGetProcAddress("glMapBufferRange");
#endif
#ifdef using_glFlushMappedBufferRange
	glFlushMappedBufferRange = (PFNGLFLUSHMAPPEDBUFFERRANGEPROC)wglGetProcAddress("glFlushMappedBufferRange");
#endif
#ifdef using_glBindVertexArray
	glBindVertexArray = (PFNGLBINDVERTEXARRAYPROC)wglGetProcAddress("glBindVertexArray");
#endif
#ifdef using_glDeleteVertexArrays
	glDeleteVertexArrays = (PFNGLDELETEVERTEXARRAYSPROC)wglGetProcAddress("glDeleteVertexArrays");
#endif
#ifdef using_glGenVertexArrays
	glGenVertexArrays = (PFNGLGENVERTEXARRAYSPROC)wglGetProcAddress("glGenVertexArrays");
#endif
#ifdef using_glIsVertexArray
	glIsVertexArray = (PFNGLISVERTEXARRAYPROC)wglGetProcAddress("glIsVertexArray");
#endif

#endif

#ifdef define_core_3_1

#ifdef using_glDrawArraysInstanced
	glDrawArraysInstanced = (PFNGLDRAWARRAYSINSTANCEDPROC)wglGetProcAddress("glDrawArraysInstanced");
#endif
#ifdef using_glDrawElementsInstanced
	glDrawElementsInstanced = (PFNGLDRAWELEMENTSINSTANCEDPROC)wglGetProcAddress("glDrawElementsInstanced");
#endif
#ifdef using_glTexBuffer
	glTexBuffer = (PFNGLTEXBUFFERPROC)wglGetProcAddress("glTexBuffer");
#endif
#ifdef using_glPrimitiveRestartIndex
	glPrimitiveRestartIndex = (PFNGLPRIMITIVERESTARTINDEXPROC)wglGetProcAddress("glPrimitiveRestartIndex");
#endif
#ifdef using_glCopyBufferSubData
	glCopyBufferSubData = (PFNGLCOPYBUFFERSUBDATAPROC)wglGetProcAddress("glCopyBufferSubData");
#endif
#ifdef using_glGetUniformIndices
	glGetUniformIndices = (PFNGLGETUNIFORMINDICESPROC)wglGetProcAddress("glGetUniformIndices");
#endif
#ifdef using_glGetActiveUniformsiv
	glGetActiveUniformsiv = (PFNGLGETACTIVEUNIFORMSIVPROC)wglGetProcAddress("glGetActiveUniformsiv");
#endif
#ifdef using_glGetActiveUniformName
	glGetActiveUniformName = (PFNGLGETACTIVEUNIFORMNAMEPROC)wglGetProcAddress("glGetActiveUniformName");
#endif
#ifdef using_glGetUniformBlockIndex
	glGetUniformBlockIndex = (PFNGLGETUNIFORMBLOCKINDEXPROC)wglGetProcAddress("glGetUniformBlockIndex");
#endif
#ifdef using_glGetActiveUniformBlockiv
	glGetActiveUniformBlockiv = (PFNGLGETACTIVEUNIFORMBLOCKIVPROC)wglGetProcAddress("glGetActiveUniformBlockiv");
#endif
#ifdef using_glGetActiveUniformBlockName
	glGetActiveUniformBlockName = (PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC)wglGetProcAddress("glGetActiveUniformBlockName");
#endif
#ifdef using_glUniformBlockBinding
	glUniformBlockBinding = (PFNGLUNIFORMBLOCKBINDINGPROC)wglGetProcAddress("glUniformBlockBinding");
#endif

#endif

#ifdef define_core_3_2

#ifdef using_glDrawElementsBaseVertex
	glDrawElementsBaseVertex = (PFNGLDRAWELEMENTSBASEVERTEXPROC)wglGetProcAddress("glDrawElementsBaseVertex");
#endif
#ifdef using_glDrawRangeElementsBaseVertex
	glDrawRangeElementsBaseVertex = (PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC)wglGetProcAddress("glDrawRangeElementsBaseVertex");
#endif
#ifdef using_glDrawElementsInstancedBaseVertex
	glDrawElementsInstancedBaseVertex = (PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC)wglGetProcAddress("glDrawElementsInstancedBaseVertex");
#endif
#ifdef using_glMultiDrawElementsBaseVertex
	glMultiDrawElementsBaseVertex = (PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC)wglGetProcAddress("glMultiDrawElementsBaseVertex");
#endif
#ifdef using_glProvokingVertex
	glProvokingVertex = (PFNGLPROVOKINGVERTEXPROC)wglGetProcAddress("glProvokingVertex");
#endif
#ifdef using_glFenceSync
	glFenceSync = (PFNGLFENCESYNCPROC)wglGetProcAddress("glFenceSync");
#endif
#ifdef using_glIsSync
	glIsSync = (PFNGLISSYNCPROC)wglGetProcAddress("glIsSync");
#endif
#ifdef using_glDeleteSync
	glDeleteSync = (PFNGLDELETESYNCPROC)wglGetProcAddress("glDeleteSync");
#endif
#ifdef using_glClientWaitSync
	glClientWaitSync = (PFNGLCLIENTWAITSYNCPROC)wglGetProcAddress("glClientWaitSync");
#endif
#ifdef using_glWaitSync
	glWaitSync = (PFNGLWAITSYNCPROC)wglGetProcAddress("glWaitSync");
#endif
#ifdef using_glGetInteger64v
	glGetInteger64v = (PFNGLGETINTEGER64VPROC)wglGetProcAddress("glGetInteger64v");
#endif
#ifdef using_glGetSynciv
	glGetSynciv = (PFNGLGETSYNCIVPROC)wglGetProcAddress("glGetSynciv");
#endif
#ifdef using_glGetInteger64i_v
	glGetInteger64i_v = (PFNGLGETINTEGER64I_VPROC)wglGetProcAddress("glGetInteger64i_v");
#endif
#ifdef using_glGetBufferParameteri64v
	glGetBufferParameteri64v = (PFNGLGETBUFFERPARAMETERI64VPROC)wglGetProcAddress("glGetBufferParameteri64v");
#endif
#ifdef using_glFramebufferTexture
	glFramebufferTexture = (PFNGLFRAMEBUFFERTEXTUREPROC)wglGetProcAddress("glFramebufferTexture");
#endif
#ifdef using_glTexImage2DMultisample
	glTexImage2DMultisample = (PFNGLTEXIMAGE2DMULTISAMPLEPROC)wglGetProcAddress("glTexImage2DMultisample");
#endif
#ifdef using_glTexImage3DMultisample
	glTexImage3DMultisample = (PFNGLTEXIMAGE3DMULTISAMPLEPROC)wglGetProcAddress("glTexImage3DMultisample");
#endif
#ifdef using_glGetMultisamplefv
	glGetMultisamplefv = (PFNGLGETMULTISAMPLEFVPROC)wglGetProcAddress("glGetMultisamplefv");
#endif
#ifdef using_glSampleMaski
	glSampleMaski = (PFNGLSAMPLEMASKIPROC)wglGetProcAddress("glSampleMaski");
#endif

#endif

#ifdef define_core_3_3

#ifdef using_glBindFragDataLocationIndexed
	glBindFragDataLocationIndexed = (PFNGLBINDFRAGDATALOCATIONINDEXEDPROC)wglGetProcAddress("glBindFragDataLocationIndexed");
#endif
#ifdef using_glGetFragDataIndex
	glGetFragDataIndex = (PFNGLGETFRAGDATAINDEXPROC)wglGetProcAddress("glGetFragDataIndex");
#endif
#ifdef using_glGenSamplers
	glGenSamplers = (PFNGLGENSAMPLERSPROC)wglGetProcAddress("glGenSamplers");
#endif
#ifdef using_glDeleteSamplers
	glDeleteSamplers = (PFNGLDELETESAMPLERSPROC)wglGetProcAddress("glDeleteSamplers");
#endif
#ifdef using_glIsSampler
	glIsSampler = (PFNGLISSAMPLERPROC)wglGetProcAddress("glIsSampler");
#endif
#ifdef using_glBindSampler
	glBindSampler = (PFNGLBINDSAMPLERPROC)wglGetProcAddress("glBindSampler");
#endif
#ifdef using_glSamplerParameteri
	glSamplerParameteri = (PFNGLSAMPLERPARAMETERIPROC)wglGetProcAddress("glSamplerParameteri");
#endif
#ifdef using_glSamplerParameteriv
	glSamplerParameteriv = (PFNGLSAMPLERPARAMETERIVPROC)wglGetProcAddress("glSamplerParameteriv");
#endif
#ifdef using_glSamplerParameterf
	glSamplerParameterf = (PFNGLSAMPLERPARAMETERFPROC)wglGetProcAddress("glSamplerParameterf");
#endif
#ifdef using_glSamplerParameterfv
	glSamplerParameterfv = (PFNGLSAMPLERPARAMETERFVPROC)wglGetProcAddress("glSamplerParameterfv");
#endif
#ifdef using_glSamplerParameterIiv
	glSamplerParameterIiv = (PFNGLSAMPLERPARAMETERIIVPROC)wglGetProcAddress("glSamplerParameterIiv");
#endif
#ifdef using_glSamplerParameterIuiv
	glSamplerParameterIuiv = (PFNGLSAMPLERPARAMETERIUIVPROC)wglGetProcAddress("glSamplerParameterIuiv");
#endif
#ifdef using_glGetSamplerParameteriv
	glGetSamplerParameteriv = (PFNGLGETSAMPLERPARAMETERIVPROC)wglGetProcAddress("glGetSamplerParameteriv");
#endif
#ifdef using_glGetSamplerParameterIiv
	glGetSamplerParameterIiv = (PFNGLGETSAMPLERPARAMETERIIVPROC)wglGetProcAddress("glGetSamplerParameterIiv");
#endif
#ifdef using_glGetSamplerParameterfv
	glGetSamplerParameterfv = (PFNGLGETSAMPLERPARAMETERFVPROC)wglGetProcAddress("glGetSamplerParameterfv");
#endif
#ifdef using_glGetSamplerParameterIuiv
	glGetSamplerParameterIuiv = (PFNGLGETSAMPLERPARAMETERIUIVPROC)wglGetProcAddress("glGetSamplerParameterIuiv");
#endif
#ifdef using_glQueryCounter
	glQueryCounter = (PFNGLQUERYCOUNTERPROC)wglGetProcAddress("glQueryCounter");
#endif
#ifdef using_glGetQueryObjecti64v
	glGetQueryObjecti64v = (PFNGLGETQUERYOBJECTI64VPROC)wglGetProcAddress("glGetQueryObjecti64v");
#endif
#ifdef using_glGetQueryObjectui64v
	glGetQueryObjectui64v = (PFNGLGETQUERYOBJECTUI64VPROC)wglGetProcAddress("glGetQueryObjectui64v");
#endif
#ifdef using_glVertexAttribDivisor
	glVertexAttribDivisor = (PFNGLVERTEXATTRIBDIVISORPROC)wglGetProcAddress("glVertexAttribDivisor");
#endif
#ifdef using_glVertexAttribP1ui
	glVertexAttribP1ui = (PFNGLVERTEXATTRIBP1UIPROC)wglGetProcAddress("glVertexAttribP1ui");
#endif
#ifdef using_glVertexAttribP1uiv
	glVertexAttribP1uiv = (PFNGLVERTEXATTRIBP1UIVPROC)wglGetProcAddress("glVertexAttribP1uiv");
#endif
#ifdef using_glVertexAttribP2ui
	glVertexAttribP2ui = (PFNGLVERTEXATTRIBP2UIPROC)wglGetProcAddress("glVertexAttribP2ui");
#endif
#ifdef using_glVertexAttribP2uiv
	glVertexAttribP2uiv = (PFNGLVERTEXATTRIBP2UIVPROC)wglGetProcAddress("glVertexAttribP2uiv");
#endif
#ifdef using_glVertexAttribP3ui
	glVertexAttribP3ui = (PFNGLVERTEXATTRIBP3UIPROC)wglGetProcAddress("glVertexAttribP3ui");
#endif
#ifdef using_glVertexAttribP3uiv
	glVertexAttribP3uiv = (PFNGLVERTEXATTRIBP3UIVPROC)wglGetProcAddress("glVertexAttribP3uiv");
#endif
#ifdef using_glVertexAttribP4ui
	glVertexAttribP4ui = (PFNGLVERTEXATTRIBP4UIPROC)wglGetProcAddress("glVertexAttribP4ui");
#endif
#ifdef using_glVertexAttribP4uiv
	glVertexAttribP4uiv = (PFNGLVERTEXATTRIBP4UIVPROC)wglGetProcAddress("glVertexAttribP4uiv");
#endif

#endif

#ifdef define_core_4_0

#ifdef using_glMinSampleShading
	glMinSampleShading = (PFNGLMINSAMPLESHADINGPROC)wglGetProcAddress("glMinSampleShading");
#endif
#ifdef using_glBlendEquationi
	glBlendEquationi = (PFNGLBLENDEQUATIONIPROC)wglGetProcAddress("glBlendEquationi");
#endif
#ifdef using_glBlendEquationSeparatei
	glBlendEquationSeparatei = (PFNGLBLENDEQUATIONSEPARATEIPROC)wglGetProcAddress("glBlendEquationSeparatei");
#endif
#ifdef using_glBlendFunci
	glBlendFunci = (PFNGLBLENDFUNCIPROC)wglGetProcAddress("glBlendFunci");
#endif
#ifdef using_glBlendFuncSeparatei
	glBlendFuncSeparatei = (PFNGLBLENDFUNCSEPARATEIPROC)wglGetProcAddress("glBlendFuncSeparatei");
#endif
#ifdef using_glDrawArraysIndirect
	glDrawArraysIndirect = (PFNGLDRAWARRAYSINDIRECTPROC)wglGetProcAddress("glDrawArraysIndirect");
#endif
#ifdef using_glDrawElementsIndirect
	glDrawElementsIndirect = (PFNGLDRAWELEMENTSINDIRECTPROC)wglGetProcAddress("glDrawElementsIndirect");
#endif
#ifdef using_glUniform1d
	glUniform1d = (PFNGLUNIFORM1DPROC)wglGetProcAddress("glUniform1d");
#endif
#ifdef using_glUniform2d
	glUniform2d = (PFNGLUNIFORM2DPROC)wglGetProcAddress("glUniform2d");
#endif
#ifdef using_glUniform3d
	glUniform3d = (PFNGLUNIFORM3DPROC)wglGetProcAddress("glUniform3d");
#endif
#ifdef using_glUniform4d
	glUniform4d = (PFNGLUNIFORM4DPROC)wglGetProcAddress("glUniform4d");
#endif
#ifdef using_glUniform1dv
	glUniform1dv = (PFNGLUNIFORM1DVPROC)wglGetProcAddress("glUniform1dv");
#endif
#ifdef using_glUniform2dv
	glUniform2dv = (PFNGLUNIFORM2DVPROC)wglGetProcAddress("glUniform2dv");
#endif
#ifdef using_glUniform3dv
	glUniform3dv = (PFNGLUNIFORM3DVPROC)wglGetProcAddress("glUniform3dv");
#endif
#ifdef using_glUniform4dv
	glUniform4dv = (PFNGLUNIFORM4DVPROC)wglGetProcAddress("glUniform4dv");
#endif
#ifdef using_glUniformMatrix2dv
	glUniformMatrix2dv = (PFNGLUNIFORMMATRIX2DVPROC)wglGetProcAddress("glUniformMatrix2dv");
#endif
#ifdef using_glUniformMatrix3dv
	glUniformMatrix3dv = (PFNGLUNIFORMMATRIX3DVPROC)wglGetProcAddress("glUniformMatrix3dv");
#endif
#ifdef using_glUniformMatrix4dv
	glUniformMatrix4dv = (PFNGLUNIFORMMATRIX4DVPROC)wglGetProcAddress("glUniformMatrix4dv");
#endif
#ifdef using_glUniformMatrix2x3dv
	glUniformMatrix2x3dv = (PFNGLUNIFORMMATRIX2X3DVPROC)wglGetProcAddress("glUniformMatrix2x3dv");
#endif
#ifdef using_glUniformMatrix2x4dv
	glUniformMatrix2x4dv = (PFNGLUNIFORMMATRIX2X4DVPROC)wglGetProcAddress("glUniformMatrix2x4dv");
#endif
#ifdef using_glUniformMatrix3x2dv
	glUniformMatrix3x2dv = (PFNGLUNIFORMMATRIX3X2DVPROC)wglGetProcAddress("glUniformMatrix3x2dv");
#endif
#ifdef using_glUniformMatrix3x4dv
	glUniformMatrix3x4dv = (PFNGLUNIFORMMATRIX3X4DVPROC)wglGetProcAddress("glUniformMatrix3x4dv");
#endif
#ifdef using_glUniformMatrix4x2dv
	glUniformMatrix4x2dv = (PFNGLUNIFORMMATRIX4X2DVPROC)wglGetProcAddress("glUniformMatrix4x2dv");
#endif
#ifdef using_glUniformMatrix4x3dv
	glUniformMatrix4x3dv = (PFNGLUNIFORMMATRIX4X3DVPROC)wglGetProcAddress("glUniformMatrix4x3dv");
#endif
#ifdef using_glGetUniformdv
	glGetUniformdv = (PFNGLGETUNIFORMDVPROC)wglGetProcAddress("glGetUniformdv");
#endif
#ifdef using_glGetSubroutineUniformLocation
	glGetSubroutineUniformLocation = (PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC)wglGetProcAddress("glGetSubroutineUniformLocation");
#endif
#ifdef using_glGetSubroutineIndex
	glGetSubroutineIndex = (PFNGLGETSUBROUTINEINDEXPROC)wglGetProcAddress("glGetSubroutineIndex");
#endif
#ifdef using_glGetActiveSubroutineUniformiv
	glGetActiveSubroutineUniformiv = (PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC)wglGetProcAddress("glGetActiveSubroutineUniformiv");
#endif
#ifdef using_glGetActiveSubroutineUniformName
	glGetActiveSubroutineUniformName = (PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC)wglGetProcAddress("glGetActiveSubroutineUniformName");
#endif
#ifdef using_glGetActiveSubroutineName
	glGetActiveSubroutineName = (PFNGLGETACTIVESUBROUTINENAMEPROC)wglGetProcAddress("glGetActiveSubroutineName");
#endif
#ifdef using_glUniformSubroutinesuiv
	glUniformSubroutinesuiv = (PFNGLUNIFORMSUBROUTINESUIVPROC)wglGetProcAddress("glUniformSubroutinesuiv");
#endif
#ifdef using_glGetUniformSubroutineuiv
	glGetUniformSubroutineuiv = (PFNGLGETUNIFORMSUBROUTINEUIVPROC)wglGetProcAddress("glGetUniformSubroutineuiv");
#endif
#ifdef using_glGetProgramStageiv
	glGetProgramStageiv = (PFNGLGETPROGRAMSTAGEIVPROC)wglGetProcAddress("glGetProgramStageiv");
#endif
#ifdef using_glPatchParameteri
	glPatchParameteri = (PFNGLPATCHPARAMETERIPROC)wglGetProcAddress("glPatchParameteri");
#endif
#ifdef using_glPatchParameterfv
	glPatchParameterfv = (PFNGLPATCHPARAMETERFVPROC)wglGetProcAddress("glPatchParameterfv");
#endif
#ifdef using_glBindTransformFeedback
	glBindTransformFeedback = (PFNGLBINDTRANSFORMFEEDBACKPROC)wglGetProcAddress("glBindTransformFeedback");
#endif
#ifdef using_glDeleteTransformFeedbacks
	glDeleteTransformFeedbacks = (PFNGLDELETETRANSFORMFEEDBACKSPROC)wglGetProcAddress("glDeleteTransformFeedbacks");
#endif
#ifdef using_glGenTransformFeedbacks
	glGenTransformFeedbacks = (PFNGLGENTRANSFORMFEEDBACKSPROC)wglGetProcAddress("glGenTransformFeedbacks");
#endif
#ifdef using_glIsTransformFeedback
	glIsTransformFeedback = (PFNGLISTRANSFORMFEEDBACKPROC)wglGetProcAddress("glIsTransformFeedback");
#endif
#ifdef using_glPauseTransformFeedback
	glPauseTransformFeedback = (PFNGLPAUSETRANSFORMFEEDBACKPROC)wglGetProcAddress("glPauseTransformFeedback");
#endif
#ifdef using_glResumeTransformFeedback
	glResumeTransformFeedback = (PFNGLRESUMETRANSFORMFEEDBACKPROC)wglGetProcAddress("glResumeTransformFeedback");
#endif
#ifdef using_glDrawTransformFeedback
	glDrawTransformFeedback = (PFNGLDRAWTRANSFORMFEEDBACKPROC)wglGetProcAddress("glDrawTransformFeedback");
#endif
#ifdef using_glDrawTransformFeedbackStream
	glDrawTransformFeedbackStream = (PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC)wglGetProcAddress("glDrawTransformFeedbackStream");
#endif
#ifdef using_glBeginQueryIndexed
	glBeginQueryIndexed = (PFNGLBEGINQUERYINDEXEDPROC)wglGetProcAddress("glBeginQueryIndexed");
#endif
#ifdef using_glEndQueryIndexed
	glEndQueryIndexed = (PFNGLENDQUERYINDEXEDPROC)wglGetProcAddress("glEndQueryIndexed");
#endif
#ifdef using_glGetQueryIndexediv
	glGetQueryIndexediv = (PFNGLGETQUERYINDEXEDIVPROC)wglGetProcAddress("glGetQueryIndexediv");
#endif

#endif

#ifdef define_core_4_1

#ifdef using_glReleaseShaderCompiler
	glReleaseShaderCompiler = (PFNGLRELEASESHADERCOMPILERPROC)wglGetProcAddress("glReleaseShaderCompiler");
#endif
#ifdef using_glShaderBinary
	glShaderBinary = (PFNGLSHADERBINARYPROC)wglGetProcAddress("glShaderBinary");
#endif
#ifdef using_glGetShaderPrecisionFormat
	glGetShaderPrecisionFormat = (PFNGLGETSHADERPRECISIONFORMATPROC)wglGetProcAddress("glGetShaderPrecisionFormat");
#endif
#ifdef using_glDepthRangef
	glDepthRangef = (PFNGLDEPTHRANGEFPROC)wglGetProcAddress("glDepthRangef");
#endif
#ifdef using_glClearDepthf
	glClearDepthf = (PFNGLCLEARDEPTHFPROC)wglGetProcAddress("glClearDepthf");
#endif
#ifdef using_glGetProgramBinary
	glGetProgramBinary = (PFNGLGETPROGRAMBINARYPROC)wglGetProcAddress("glGetProgramBinary");
#endif
#ifdef using_glProgramBinary
	glProgramBinary = (PFNGLPROGRAMBINARYPROC)wglGetProcAddress("glProgramBinary");
#endif
#ifdef using_glProgramParameteri
	glProgramParameteri = (PFNGLPROGRAMPARAMETERIPROC)wglGetProcAddress("glProgramParameteri");
#endif
#ifdef using_glUseProgramStages
	glUseProgramStages = (PFNGLUSEPROGRAMSTAGESPROC)wglGetProcAddress("glUseProgramStages");
#endif
#ifdef using_glActiveShaderProgram
	glActiveShaderProgram = (PFNGLACTIVESHADERPROGRAMPROC)wglGetProcAddress("glActiveShaderProgram");
#endif
#ifdef using_glCreateShaderProgramv
	glCreateShaderProgramv = (PFNGLCREATESHADERPROGRAMVPROC)wglGetProcAddress("glCreateShaderProgramv");
#endif
#ifdef using_glBindProgramPipeline
	glBindProgramPipeline = (PFNGLBINDPROGRAMPIPELINEPROC)wglGetProcAddress("glBindProgramPipeline");
#endif
#ifdef using_glDeleteProgramPipelines
	glDeleteProgramPipelines = (PFNGLDELETEPROGRAMPIPELINESPROC)wglGetProcAddress("glDeleteProgramPipelines");
#endif
#ifdef using_glGenProgramPipelines
	glGenProgramPipelines = (PFNGLGENPROGRAMPIPELINESPROC)wglGetProcAddress("glGenProgramPipelines");
#endif
#ifdef using_glIsProgramPipeline
	glIsProgramPipeline = (PFNGLISPROGRAMPIPELINEPROC)wglGetProcAddress("glIsProgramPipeline");
#endif
#ifdef using_glGetProgramPipelineiv
	glGetProgramPipelineiv = (PFNGLGETPROGRAMPIPELINEIVPROC)wglGetProcAddress("glGetProgramPipelineiv");
#endif
#ifdef using_glProgramUniform1i
	glProgramUniform1i = (PFNGLPROGRAMUNIFORM1IPROC)wglGetProcAddress("glProgramUniform1i");
#endif
#ifdef using_glProgramUniform1iv
	glProgramUniform1iv = (PFNGLPROGRAMUNIFORM1IVPROC)wglGetProcAddress("glProgramUniform1iv");
#endif
#ifdef using_glProgramUniform1f
	glProgramUniform1f = (PFNGLPROGRAMUNIFORM1FPROC)wglGetProcAddress("glProgramUniform1f");
#endif
#ifdef using_glProgramUniform1fv
	glProgramUniform1fv = (PFNGLPROGRAMUNIFORM1FVPROC)wglGetProcAddress("glProgramUniform1fv");
#endif
#ifdef using_glProgramUniform1d
	glProgramUniform1d = (PFNGLPROGRAMUNIFORM1DPROC)wglGetProcAddress("glProgramUniform1d");
#endif
#ifdef using_glProgramUniform1dv
	glProgramUniform1dv = (PFNGLPROGRAMUNIFORM1DVPROC)wglGetProcAddress("glProgramUniform1dv");
#endif
#ifdef using_glProgramUniform1ui
	glProgramUniform1ui = (PFNGLPROGRAMUNIFORM1UIPROC)wglGetProcAddress("glProgramUniform1ui");
#endif
#ifdef using_glProgramUniform1uiv
	glProgramUniform1uiv = (PFNGLPROGRAMUNIFORM1UIVPROC)wglGetProcAddress("glProgramUniform1uiv");
#endif
#ifdef using_glProgramUniform2i
	glProgramUniform2i = (PFNGLPROGRAMUNIFORM2IPROC)wglGetProcAddress("glProgramUniform2i");
#endif
#ifdef using_glProgramUniform2iv
	glProgramUniform2iv = (PFNGLPROGRAMUNIFORM2IVPROC)wglGetProcAddress("glProgramUniform2iv");
#endif
#ifdef using_glProgramUniform2f
	glProgramUniform2f = (PFNGLPROGRAMUNIFORM2FPROC)wglGetProcAddress("glProgramUniform2f");
#endif
#ifdef using_glProgramUniform2fv
	glProgramUniform2fv = (PFNGLPROGRAMUNIFORM2FVPROC)wglGetProcAddress("glProgramUniform2fv");
#endif
#ifdef using_glProgramUniform2d
	glProgramUniform2d = (PFNGLPROGRAMUNIFORM2DPROC)wglGetProcAddress("glProgramUniform2d");
#endif
#ifdef using_glProgramUniform2dv
	glProgramUniform2dv = (PFNGLPROGRAMUNIFORM2DVPROC)wglGetProcAddress("glProgramUniform2dv");
#endif
#ifdef using_glProgramUniform2ui
	glProgramUniform2ui = (PFNGLPROGRAMUNIFORM2UIPROC)wglGetProcAddress("glProgramUniform2ui");
#endif
#ifdef using_glProgramUniform2uiv
	glProgramUniform2uiv = (PFNGLPROGRAMUNIFORM2UIVPROC)wglGetProcAddress("glProgramUniform2uiv");
#endif
#ifdef using_glProgramUniform3i
	glProgramUniform3i = (PFNGLPROGRAMUNIFORM3IPROC)wglGetProcAddress("glProgramUniform3i");
#endif
#ifdef using_glProgramUniform3iv
	glProgramUniform3iv = (PFNGLPROGRAMUNIFORM3IVPROC)wglGetProcAddress("glProgramUniform3iv");
#endif
#ifdef using_glProgramUniform3f
	glProgramUniform3f = (PFNGLPROGRAMUNIFORM3FPROC)wglGetProcAddress("glProgramUniform3f");
#endif
#ifdef using_glProgramUniform3fv
	glProgramUniform3fv = (PFNGLPROGRAMUNIFORM3FVPROC)wglGetProcAddress("glProgramUniform3fv");
#endif
#ifdef using_glProgramUniform3d
	glProgramUniform3d = (PFNGLPROGRAMUNIFORM3DPROC)wglGetProcAddress("glProgramUniform3d");
#endif
#ifdef using_glProgramUniform3dv
	glProgramUniform3dv = (PFNGLPROGRAMUNIFORM3DVPROC)wglGetProcAddress("glProgramUniform3dv");
#endif
#ifdef using_glProgramUniform3ui
	glProgramUniform3ui = (PFNGLPROGRAMUNIFORM3UIPROC)wglGetProcAddress("glProgramUniform3ui");
#endif
#ifdef using_glProgramUniform3uiv
	glProgramUniform3uiv = (PFNGLPROGRAMUNIFORM3UIVPROC)wglGetProcAddress("glProgramUniform3uiv");
#endif
#ifdef using_glProgramUniform4i
	glProgramUniform4i = (PFNGLPROGRAMUNIFORM4IPROC)wglGetProcAddress("glProgramUniform4i");
#endif
#ifdef using_glProgramUniform4iv
	glProgramUniform4iv = (PFNGLPROGRAMUNIFORM4IVPROC)wglGetProcAddress("glProgramUniform4iv");
#endif
#ifdef using_glProgramUniform4f
	glProgramUniform4f = (PFNGLPROGRAMUNIFORM4FPROC)wglGetProcAddress("glProgramUniform4f");
#endif
#ifdef using_glProgramUniform4fv
	glProgramUniform4fv = (PFNGLPROGRAMUNIFORM4FVPROC)wglGetProcAddress("glProgramUniform4fv");
#endif
#ifdef using_glProgramUniform4d
	glProgramUniform4d = (PFNGLPROGRAMUNIFORM4DPROC)wglGetProcAddress("glProgramUniform4d");
#endif
#ifdef using_glProgramUniform4dv
	glProgramUniform4dv = (PFNGLPROGRAMUNIFORM4DVPROC)wglGetProcAddress("glProgramUniform4dv");
#endif
#ifdef using_glProgramUniform4ui
	glProgramUniform4ui = (PFNGLPROGRAMUNIFORM4UIPROC)wglGetProcAddress("glProgramUniform4ui");
#endif
#ifdef using_glProgramUniform4uiv
	glProgramUniform4uiv = (PFNGLPROGRAMUNIFORM4UIVPROC)wglGetProcAddress("glProgramUniform4uiv");
#endif
#ifdef using_glProgramUniformMatrix2fv
	glProgramUniformMatrix2fv = (PFNGLPROGRAMUNIFORMMATRIX2FVPROC)wglGetProcAddress("glProgramUniformMatrix2fv");
#endif
#ifdef using_glProgramUniformMatrix3fv
	glProgramUniformMatrix3fv = (PFNGLPROGRAMUNIFORMMATRIX3FVPROC)wglGetProcAddress("glProgramUniformMatrix3fv");
#endif
#ifdef using_glProgramUniformMatrix4fv
	glProgramUniformMatrix4fv = (PFNGLPROGRAMUNIFORMMATRIX4FVPROC)wglGetProcAddress("glProgramUniformMatrix4fv");
#endif
#ifdef using_glProgramUniformMatrix2dv
	glProgramUniformMatrix2dv = (PFNGLPROGRAMUNIFORMMATRIX2DVPROC)wglGetProcAddress("glProgramUniformMatrix2dv");
#endif
#ifdef using_glProgramUniformMatrix3dv
	glProgramUniformMatrix3dv = (PFNGLPROGRAMUNIFORMMATRIX3DVPROC)wglGetProcAddress("glProgramUniformMatrix3dv");
#endif
#ifdef using_glProgramUniformMatrix4dv
	glProgramUniformMatrix4dv = (PFNGLPROGRAMUNIFORMMATRIX4DVPROC)wglGetProcAddress("glProgramUniformMatrix4dv");
#endif
#ifdef using_glProgramUniformMatrix2x3fv
	glProgramUniformMatrix2x3fv = (PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC)wglGetProcAddress("glProgramUniformMatrix2x3fv");
#endif
#ifdef using_glProgramUniformMatrix3x2fv
	glProgramUniformMatrix3x2fv = (PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC)wglGetProcAddress("glProgramUniformMatrix3x2fv");
#endif
#ifdef using_glProgramUniformMatrix2x4fv
	glProgramUniformMatrix2x4fv = (PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC)wglGetProcAddress("glProgramUniformMatrix2x4fv");
#endif
#ifdef using_glProgramUniformMatrix4x2fv
	glProgramUniformMatrix4x2fv = (PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC)wglGetProcAddress("glProgramUniformMatrix4x2fv");
#endif
#ifdef using_glProgramUniformMatrix3x4fv
	glProgramUniformMatrix3x4fv = (PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC)wglGetProcAddress("glProgramUniformMatrix3x4fv");
#endif
#ifdef using_glProgramUniformMatrix4x3fv
	glProgramUniformMatrix4x3fv = (PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC)wglGetProcAddress("glProgramUniformMatrix4x3fv");
#endif
#ifdef using_glProgramUniformMatrix2x3dv
	glProgramUniformMatrix2x3dv = (PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC)wglGetProcAddress("glProgramUniformMatrix2x3dv");
#endif
#ifdef using_glProgramUniformMatrix3x2dv
	glProgramUniformMatrix3x2dv = (PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC)wglGetProcAddress("glProgramUniformMatrix3x2dv");
#endif
#ifdef using_glProgramUniformMatrix2x4dv
	glProgramUniformMatrix2x4dv = (PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC)wglGetProcAddress("glProgramUniformMatrix2x4dv");
#endif
#ifdef using_glProgramUniformMatrix4x2dv
	glProgramUniformMatrix4x2dv = (PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC)wglGetProcAddress("glProgramUniformMatrix4x2dv");
#endif
#ifdef using_glProgramUniformMatrix3x4dv
	glProgramUniformMatrix3x4dv = (PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC)wglGetProcAddress("glProgramUniformMatrix3x4dv");
#endif
#ifdef using_glProgramUniformMatrix4x3dv
	glProgramUniformMatrix4x3dv = (PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC)wglGetProcAddress("glProgramUniformMatrix4x3dv");
#endif
#ifdef using_glValidateProgramPipeline
	glValidateProgramPipeline = (PFNGLVALIDATEPROGRAMPIPELINEPROC)wglGetProcAddress("glValidateProgramPipeline");
#endif
#ifdef using_glGetProgramPipelineInfoLog
	glGetProgramPipelineInfoLog = (PFNGLGETPROGRAMPIPELINEINFOLOGPROC)wglGetProcAddress("glGetProgramPipelineInfoLog");
#endif
#ifdef using_glVertexAttribL1d
	glVertexAttribL1d = (PFNGLVERTEXATTRIBL1DPROC)wglGetProcAddress("glVertexAttribL1d");
#endif
#ifdef using_glVertexAttribL2d
	glVertexAttribL2d = (PFNGLVERTEXATTRIBL2DPROC)wglGetProcAddress("glVertexAttribL2d");
#endif
#ifdef using_glVertexAttribL3d
	glVertexAttribL3d = (PFNGLVERTEXATTRIBL3DPROC)wglGetProcAddress("glVertexAttribL3d");
#endif
#ifdef using_glVertexAttribL4d
	glVertexAttribL4d = (PFNGLVERTEXATTRIBL4DPROC)wglGetProcAddress("glVertexAttribL4d");
#endif
#ifdef using_glVertexAttribL1dv
	glVertexAttribL1dv = (PFNGLVERTEXATTRIBL1DVPROC)wglGetProcAddress("glVertexAttribL1dv");
#endif
#ifdef using_glVertexAttribL2dv
	glVertexAttribL2dv = (PFNGLVERTEXATTRIBL2DVPROC)wglGetProcAddress("glVertexAttribL2dv");
#endif
#ifdef using_glVertexAttribL3dv
	glVertexAttribL3dv = (PFNGLVERTEXATTRIBL3DVPROC)wglGetProcAddress("glVertexAttribL3dv");
#endif
#ifdef using_glVertexAttribL4dv
	glVertexAttribL4dv = (PFNGLVERTEXATTRIBL4DVPROC)wglGetProcAddress("glVertexAttribL4dv");
#endif
#ifdef using_glVertexAttribLPointer
	glVertexAttribLPointer = (PFNGLVERTEXATTRIBLPOINTERPROC)wglGetProcAddress("glVertexAttribLPointer");
#endif
#ifdef using_glGetVertexAttribLdv
	glGetVertexAttribLdv = (PFNGLGETVERTEXATTRIBLDVPROC)wglGetProcAddress("glGetVertexAttribLdv");
#endif
#ifdef using_glViewportArrayv
	glViewportArrayv = (PFNGLVIEWPORTARRAYVPROC)wglGetProcAddress("glViewportArrayv");
#endif
#ifdef using_glViewportIndexedf
	glViewportIndexedf = (PFNGLVIEWPORTINDEXEDFPROC)wglGetProcAddress("glViewportIndexedf");
#endif
#ifdef using_glViewportIndexedfv
	glViewportIndexedfv = (PFNGLVIEWPORTINDEXEDFVPROC)wglGetProcAddress("glViewportIndexedfv");
#endif
#ifdef using_glScissorArrayv
	glScissorArrayv = (PFNGLSCISSORARRAYVPROC)wglGetProcAddress("glScissorArrayv");
#endif
#ifdef using_glScissorIndexed
	glScissorIndexed = (PFNGLSCISSORINDEXEDPROC)wglGetProcAddress("glScissorIndexed");
#endif
#ifdef using_glScissorIndexedv
	glScissorIndexedv = (PFNGLSCISSORINDEXEDVPROC)wglGetProcAddress("glScissorIndexedv");
#endif
#ifdef using_glDepthRangeArrayv
	glDepthRangeArrayv = (PFNGLDEPTHRANGEARRAYVPROC)wglGetProcAddress("glDepthRangeArrayv");
#endif
#ifdef using_glDepthRangeIndexed
	glDepthRangeIndexed = (PFNGLDEPTHRANGEINDEXEDPROC)wglGetProcAddress("glDepthRangeIndexed");
#endif
#ifdef using_glGetFloati_v
	glGetFloati_v = (PFNGLGETFLOATI_VPROC)wglGetProcAddress("glGetFloati_v");
#endif
#ifdef using_glGetDoublei_v
	glGetDoublei_v = (PFNGLGETDOUBLEI_VPROC)wglGetProcAddress("glGetDoublei_v");
#endif

#endif

#ifdef define_core_4_2

#ifdef using_glDrawArraysInstancedBaseInstance
	glDrawArraysInstancedBaseInstance = (PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC)wglGetProcAddress("glDrawArraysInstancedBaseInstance");
#endif
#ifdef using_glDrawElementsInstancedBaseInstance
	glDrawElementsInstancedBaseInstance = (PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC)wglGetProcAddress("glDrawElementsInstancedBaseInstance");
#endif
#ifdef using_glDrawElementsInstancedBaseVertexBaseInstance
	glDrawElementsInstancedBaseVertexBaseInstance = (PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC)wglGetProcAddress("glDrawElementsInstancedBaseVertexBaseInstance");
#endif
#ifdef using_glGetInternalformativ
	glGetInternalformativ = (PFNGLGETINTERNALFORMATIVPROC)wglGetProcAddress("glGetInternalformativ");
#endif
#ifdef using_glGetActiveAtomicCounterBufferiv
	glGetActiveAtomicCounterBufferiv = (PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC)wglGetProcAddress("glGetActiveAtomicCounterBufferiv");
#endif
#ifdef using_glBindImageTexture
	glBindImageTexture = (PFNGLBINDIMAGETEXTUREPROC)wglGetProcAddress("glBindImageTexture");
#endif
#ifdef using_glMemoryBarrier
	glMemoryBarrier = (PFNGLMEMORYBARRIERPROC)wglGetProcAddress("glMemoryBarrier");
#endif
#ifdef using_glTexStorage1D
	glTexStorage1D = (PFNGLTEXSTORAGE1DPROC)wglGetProcAddress("glTexStorage1D");
#endif
#ifdef using_glTexStorage2D
	glTexStorage2D = (PFNGLTEXSTORAGE2DPROC)wglGetProcAddress("glTexStorage2D");
#endif
#ifdef using_glTexStorage3D
	glTexStorage3D = (PFNGLTEXSTORAGE3DPROC)wglGetProcAddress("glTexStorage3D");
#endif
#ifdef using_glDrawTransformFeedbackInstanced
	glDrawTransformFeedbackInstanced = (PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC)wglGetProcAddress("glDrawTransformFeedbackInstanced");
#endif
#ifdef using_glDrawTransformFeedbackStreamInstanced
	glDrawTransformFeedbackStreamInstanced = (PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC)wglGetProcAddress("glDrawTransformFeedbackStreamInstanced");
#endif

#endif

#ifdef define_core_4_3

#ifdef using_glClearBufferData
	glClearBufferData = (PFNGLCLEARBUFFERDATAPROC)wglGetProcAddress("glClearBufferData");
#endif
#ifdef using_glClearBufferSubData
	glClearBufferSubData = (PFNGLCLEARBUFFERSUBDATAPROC)wglGetProcAddress("glClearBufferSubData");
#endif
#ifdef using_glDispatchCompute
	glDispatchCompute = (PFNGLDISPATCHCOMPUTEPROC)wglGetProcAddress("glDispatchCompute");
#endif
#ifdef using_glDispatchComputeIndirect
	glDispatchComputeIndirect = (PFNGLDISPATCHCOMPUTEINDIRECTPROC)wglGetProcAddress("glDispatchComputeIndirect");
#endif
#ifdef using_glCopyImageSubData
	glCopyImageSubData = (PFNGLCOPYIMAGESUBDATAPROC)wglGetProcAddress("glCopyImageSubData");
#endif
#ifdef using_glFramebufferParameteri
	glFramebufferParameteri = (PFNGLFRAMEBUFFERPARAMETERIPROC)wglGetProcAddress("glFramebufferParameteri");
#endif
#ifdef using_glGetFramebufferParameteriv
	glGetFramebufferParameteriv = (PFNGLGETFRAMEBUFFERPARAMETERIVPROC)wglGetProcAddress("glGetFramebufferParameteriv");
#endif
#ifdef using_glGetInternalformati64v
	glGetInternalformati64v = (PFNGLGETINTERNALFORMATI64VPROC)wglGetProcAddress("glGetInternalformati64v");
#endif
#ifdef using_glInvalidateTexSubImage
	glInvalidateTexSubImage = (PFNGLINVALIDATETEXSUBIMAGEPROC)wglGetProcAddress("glInvalidateTexSubImage");
#endif
#ifdef using_glInvalidateTexImage
	glInvalidateTexImage = (PFNGLINVALIDATETEXIMAGEPROC)wglGetProcAddress("glInvalidateTexImage");
#endif
#ifdef using_glInvalidateBufferSubData
	glInvalidateBufferSubData = (PFNGLINVALIDATEBUFFERSUBDATAPROC)wglGetProcAddress("glInvalidateBufferSubData");
#endif
#ifdef using_glInvalidateBufferData
	glInvalidateBufferData = (PFNGLINVALIDATEBUFFERDATAPROC)wglGetProcAddress("glInvalidateBufferData");
#endif
#ifdef using_glInvalidateFramebuffer
	glInvalidateFramebuffer = (PFNGLINVALIDATEFRAMEBUFFERPROC)wglGetProcAddress("glInvalidateFramebuffer");
#endif
#ifdef using_glInvalidateSubFramebuffer
	glInvalidateSubFramebuffer = (PFNGLINVALIDATESUBFRAMEBUFFERPROC)wglGetProcAddress("glInvalidateSubFramebuffer");
#endif
#ifdef using_glMultiDrawArraysIndirect
	glMultiDrawArraysIndirect = (PFNGLMULTIDRAWARRAYSINDIRECTPROC)wglGetProcAddress("glMultiDrawArraysIndirect");
#endif
#ifdef using_glMultiDrawElementsIndirect
	glMultiDrawElementsIndirect = (PFNGLMULTIDRAWELEMENTSINDIRECTPROC)wglGetProcAddress("glMultiDrawElementsIndirect");
#endif
#ifdef using_glGetProgramInterfaceiv
	glGetProgramInterfaceiv = (PFNGLGETPROGRAMINTERFACEIVPROC)wglGetProcAddress("glGetProgramInterfaceiv");
#endif
#ifdef using_glGetProgramResourceIndex
	glGetProgramResourceIndex = (PFNGLGETPROGRAMRESOURCEINDEXPROC)wglGetProcAddress("glGetProgramResourceIndex");
#endif
#ifdef using_glGetProgramResourceName
	glGetProgramResourceName = (PFNGLGETPROGRAMRESOURCENAMEPROC)wglGetProcAddress("glGetProgramResourceName");
#endif
#ifdef using_glGetProgramResourceiv
	glGetProgramResourceiv = (PFNGLGETPROGRAMRESOURCEIVPROC)wglGetProcAddress("glGetProgramResourceiv");
#endif
#ifdef using_glGetProgramResourceLocation
	glGetProgramResourceLocation = (PFNGLGETPROGRAMRESOURCELOCATIONPROC)wglGetProcAddress("glGetProgramResourceLocation");
#endif
#ifdef using_glGetProgramResourceLocationIndex
	glGetProgramResourceLocationIndex = (PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC)wglGetProcAddress("glGetProgramResourceLocationIndex");
#endif
#ifdef using_glShaderStorageBlockBinding
	glShaderStorageBlockBinding = (PFNGLSHADERSTORAGEBLOCKBINDINGPROC)wglGetProcAddress("glShaderStorageBlockBinding");
#endif
#ifdef using_glTexBufferRange
	glTexBufferRange = (PFNGLTEXBUFFERRANGEPROC)wglGetProcAddress("glTexBufferRange");
#endif
#ifdef using_glTexStorage2DMultisample
	glTexStorage2DMultisample = (PFNGLTEXSTORAGE2DMULTISAMPLEPROC)wglGetProcAddress("glTexStorage2DMultisample");
#endif
#ifdef using_glTexStorage3DMultisample
	glTexStorage3DMultisample = (PFNGLTEXSTORAGE3DMULTISAMPLEPROC)wglGetProcAddress("glTexStorage3DMultisample");
#endif
#ifdef using_glTextureView
	glTextureView = (PFNGLTEXTUREVIEWPROC)wglGetProcAddress("glTextureView");
#endif
#ifdef using_glBindVertexBuffer
	glBindVertexBuffer = (PFNGLBINDVERTEXBUFFERPROC)wglGetProcAddress("glBindVertexBuffer");
#endif
#ifdef using_glVertexAttribFormat
	glVertexAttribFormat = (PFNGLVERTEXATTRIBFORMATPROC)wglGetProcAddress("glVertexAttribFormat");
#endif
#ifdef using_glVertexAttribIFormat
	glVertexAttribIFormat = (PFNGLVERTEXATTRIBIFORMATPROC)wglGetProcAddress("glVertexAttribIFormat");
#endif
#ifdef using_glVertexAttribLFormat
	glVertexAttribLFormat = (PFNGLVERTEXATTRIBLFORMATPROC)wglGetProcAddress("glVertexAttribLFormat");
#endif
#ifdef using_glVertexAttribBinding
	glVertexAttribBinding = (PFNGLVERTEXATTRIBBINDINGPROC)wglGetProcAddress("glVertexAttribBinding");
#endif
#ifdef using_glVertexBindingDivisor
	glVertexBindingDivisor = (PFNGLVERTEXBINDINGDIVISORPROC)wglGetProcAddress("glVertexBindingDivisor");
#endif
#ifdef using_glDebugMessageControl
	glDebugMessageControl = (PFNGLDEBUGMESSAGECONTROLPROC)wglGetProcAddress("glDebugMessageControl");
#endif
#ifdef using_glDebugMessageInsert
	glDebugMessageInsert = (PFNGLDEBUGMESSAGEINSERTPROC)wglGetProcAddress("glDebugMessageInsert");
#endif
#ifdef using_glDebugMessageCallback
	glDebugMessageCallback = (PFNGLDEBUGMESSAGECALLBACKPROC)wglGetProcAddress("glDebugMessageCallback");
#endif
#ifdef using_glGetDebugMessageLog
	glGetDebugMessageLog = (PFNGLGETDEBUGMESSAGELOGPROC)wglGetProcAddress("glGetDebugMessageLog");
#endif
#ifdef using_glPushDebugGroup
	glPushDebugGroup = (PFNGLPUSHDEBUGGROUPPROC)wglGetProcAddress("glPushDebugGroup");
#endif
#ifdef using_glPopDebugGroup
	glPopDebugGroup = (PFNGLPOPDEBUGGROUPPROC)wglGetProcAddress("glPopDebugGroup");
#endif
#ifdef using_glObjectLabel
	glObjectLabel = (PFNGLOBJECTLABELPROC)wglGetProcAddress("glObjectLabel");
#endif
#ifdef using_glGetObjectLabel
	glGetObjectLabel = (PFNGLGETOBJECTLABELPROC)wglGetProcAddress("glGetObjectLabel");
#endif
#ifdef using_glObjectPtrLabel
	glObjectPtrLabel = (PFNGLOBJECTPTRLABELPROC)wglGetProcAddress("glObjectPtrLabel");
#endif
#ifdef using_glGetObjectPtrLabel
	glGetObjectPtrLabel = (PFNGLGETOBJECTPTRLABELPROC)wglGetProcAddress("glGetObjectPtrLabel");
#endif

#endif

#ifdef define_core_4_4

#ifdef using_glBufferStorage
	glBufferStorage = (PFNGLBUFFERSTORAGEPROC)wglGetProcAddress("glBufferStorage");
#endif
#ifdef using_glClearTexImage
	glClearTexImage = (PFNGLCLEARTEXIMAGEPROC)wglGetProcAddress("glClearTexImage");
#endif
#ifdef using_glClearTexSubImage
	glClearTexSubImage = (PFNGLCLEARTEXSUBIMAGEPROC)wglGetProcAddress("glClearTexSubImage");
#endif
#ifdef using_glBindBuffersBase
	glBindBuffersBase = (PFNGLBINDBUFFERSBASEPROC)wglGetProcAddress("glBindBuffersBase");
#endif
#ifdef using_glBindBuffersRange
	glBindBuffersRange = (PFNGLBINDBUFFERSRANGEPROC)wglGetProcAddress("glBindBuffersRange");
#endif
#ifdef using_glBindTextures
	glBindTextures = (PFNGLBINDTEXTURESPROC)wglGetProcAddress("glBindTextures");
#endif
#ifdef using_glBindSamplers
	glBindSamplers = (PFNGLBINDSAMPLERSPROC)wglGetProcAddress("glBindSamplers");
#endif
#ifdef using_glBindImageTextures
	glBindImageTextures = (PFNGLBINDIMAGETEXTURESPROC)wglGetProcAddress("glBindImageTextures");
#endif
#ifdef using_glBindVertexBuffers
	glBindVertexBuffers = (PFNGLBINDVERTEXBUFFERSPROC)wglGetProcAddress("glBindVertexBuffers");
#endif

#endif

#ifdef define_GL_ARB_ES2_compatibility
	if(!glelp::checkAvailable("GL_ARB_ES2_compatibility")) return false;

#endif

#ifdef define_GL_ARB_ES3_compatibility
	if(!glelp::checkAvailable("GL_ARB_ES3_compatibility")) return false;

#endif

#ifdef define_GL_ARB_arrays_of_arrays
	if(!glelp::checkAvailable("GL_ARB_arrays_of_arrays")) return false;

#endif

#ifdef define_GL_ARB_base_instance
	if(!glelp::checkAvailable("GL_ARB_base_instance")) return false;

#endif

#ifdef define_GL_ARB_bindless_texture
	if(!glelp::checkAvailable("GL_ARB_bindless_texture")) return false;
#ifdef using_glGetTextureHandleARB
	glGetTextureHandleARB = (PFNGLGETTEXTUREHANDLEARBPROC)wglGetProcAddress("glGetTextureHandleARB");
#endif
#ifdef using_glGetTextureSamplerHandleARB
	glGetTextureSamplerHandleARB = (PFNGLGETTEXTURESAMPLERHANDLEARBPROC)wglGetProcAddress("glGetTextureSamplerHandleARB");
#endif
#ifdef using_glMakeTextureHandleResidentARB
	glMakeTextureHandleResidentARB = (PFNGLMAKETEXTUREHANDLERESIDENTARBPROC)wglGetProcAddress("glMakeTextureHandleResidentARB");
#endif
#ifdef using_glMakeTextureHandleNonResidentARB
	glMakeTextureHandleNonResidentARB = (PFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC)wglGetProcAddress("glMakeTextureHandleNonResidentARB");
#endif
#ifdef using_glGetImageHandleARB
	glGetImageHandleARB = (PFNGLGETIMAGEHANDLEARBPROC)wglGetProcAddress("glGetImageHandleARB");
#endif
#ifdef using_glMakeImageHandleResidentARB
	glMakeImageHandleResidentARB = (PFNGLMAKEIMAGEHANDLERESIDENTARBPROC)wglGetProcAddress("glMakeImageHandleResidentARB");
#endif
#ifdef using_glMakeImageHandleNonResidentARB
	glMakeImageHandleNonResidentARB = (PFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC)wglGetProcAddress("glMakeImageHandleNonResidentARB");
#endif
#ifdef using_glUniformHandleui64ARB
	glUniformHandleui64ARB = (PFNGLUNIFORMHANDLEUI64ARBPROC)wglGetProcAddress("glUniformHandleui64ARB");
#endif
#ifdef using_glUniformHandleui64vARB
	glUniformHandleui64vARB = (PFNGLUNIFORMHANDLEUI64VARBPROC)wglGetProcAddress("glUniformHandleui64vARB");
#endif
#ifdef using_glProgramUniformHandleui64ARB
	glProgramUniformHandleui64ARB = (PFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC)wglGetProcAddress("glProgramUniformHandleui64ARB");
#endif
#ifdef using_glProgramUniformHandleui64vARB
	glProgramUniformHandleui64vARB = (PFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC)wglGetProcAddress("glProgramUniformHandleui64vARB");
#endif
#ifdef using_glIsTextureHandleResidentARB
	glIsTextureHandleResidentARB = (PFNGLISTEXTUREHANDLERESIDENTARBPROC)wglGetProcAddress("glIsTextureHandleResidentARB");
#endif
#ifdef using_glIsImageHandleResidentARB
	glIsImageHandleResidentARB = (PFNGLISIMAGEHANDLERESIDENTARBPROC)wglGetProcAddress("glIsImageHandleResidentARB");
#endif
#ifdef using_glVertexAttribL1ui64ARB
	glVertexAttribL1ui64ARB = (PFNGLVERTEXATTRIBL1UI64ARBPROC)wglGetProcAddress("glVertexAttribL1ui64ARB");
#endif
#ifdef using_glVertexAttribL1ui64vARB
	glVertexAttribL1ui64vARB = (PFNGLVERTEXATTRIBL1UI64VARBPROC)wglGetProcAddress("glVertexAttribL1ui64vARB");
#endif
#ifdef using_glGetVertexAttribLui64vARB
	glGetVertexAttribLui64vARB = (PFNGLGETVERTEXATTRIBLUI64VARBPROC)wglGetProcAddress("glGetVertexAttribLui64vARB");
#endif

#endif

#ifdef define_GL_ARB_blend_func_extended
	if(!glelp::checkAvailable("GL_ARB_blend_func_extended")) return false;

#endif

#ifdef define_GL_ARB_buffer_storage
	if(!glelp::checkAvailable("GL_ARB_buffer_storage")) return false;

#endif

#ifdef define_GL_ARB_cl_event
	if(!glelp::checkAvailable("GL_ARB_cl_event")) return false;
#ifdef using_glCreateSyncFromCLeventARB
	glCreateSyncFromCLeventARB = (PFNGLCREATESYNCFROMCLEVENTARBPROC)wglGetProcAddress("glCreateSyncFromCLeventARB");
#endif

#endif

#ifdef define_GL_ARB_clear_buffer_object
	if(!glelp::checkAvailable("GL_ARB_clear_buffer_object")) return false;

#endif

#ifdef define_GL_ARB_clear_texture
	if(!glelp::checkAvailable("GL_ARB_clear_texture")) return false;

#endif

#ifdef define_GL_ARB_compressed_texture_pixel_storage
	if(!glelp::checkAvailable("GL_ARB_compressed_texture_pixel_storage")) return false;

#endif

#ifdef define_GL_ARB_compute_shader
	if(!glelp::checkAvailable("GL_ARB_compute_shader")) return false;

#endif

#ifdef define_GL_ARB_compute_variable_group_size
	if(!glelp::checkAvailable("GL_ARB_compute_variable_group_size")) return false;
#ifdef using_glDispatchComputeGroupSizeARB
	glDispatchComputeGroupSizeARB = (PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC)wglGetProcAddress("glDispatchComputeGroupSizeARB");
#endif

#endif

#ifdef define_GL_ARB_conservative_depth
	if(!glelp::checkAvailable("GL_ARB_conservative_depth")) return false;

#endif

#ifdef define_GL_ARB_copy_buffer
	if(!glelp::checkAvailable("GL_ARB_copy_buffer")) return false;

#endif

#ifdef define_GL_ARB_copy_image
	if(!glelp::checkAvailable("GL_ARB_copy_image")) return false;

#endif

#ifdef define_GL_ARB_debug_output
	if(!glelp::checkAvailable("GL_ARB_debug_output")) return false;
#ifdef using_glDebugMessageControlARB
	glDebugMessageControlARB = (PFNGLDEBUGMESSAGECONTROLARBPROC)wglGetProcAddress("glDebugMessageControlARB");
#endif
#ifdef using_glDebugMessageInsertARB
	glDebugMessageInsertARB = (PFNGLDEBUGMESSAGEINSERTARBPROC)wglGetProcAddress("glDebugMessageInsertARB");
#endif
#ifdef using_glDebugMessageCallbackARB
	glDebugMessageCallbackARB = (PFNGLDEBUGMESSAGECALLBACKARBPROC)wglGetProcAddress("glDebugMessageCallbackARB");
#endif
#ifdef using_glGetDebugMessageLogARB
	glGetDebugMessageLogARB = (PFNGLGETDEBUGMESSAGELOGARBPROC)wglGetProcAddress("glGetDebugMessageLogARB");
#endif

#endif

#ifdef define_GL_ARB_depth_buffer_float
	if(!glelp::checkAvailable("GL_ARB_depth_buffer_float")) return false;

#endif

#ifdef define_GL_ARB_depth_clamp
	if(!glelp::checkAvailable("GL_ARB_depth_clamp")) return false;

#endif

#ifdef define_GL_ARB_draw_buffers_blend
	if(!glelp::checkAvailable("GL_ARB_draw_buffers_blend")) return false;
#ifdef using_glBlendEquationiARB
	glBlendEquationiARB = (PFNGLBLENDEQUATIONIARBPROC)wglGetProcAddress("glBlendEquationiARB");
#endif
#ifdef using_glBlendEquationSeparateiARB
	glBlendEquationSeparateiARB = (PFNGLBLENDEQUATIONSEPARATEIARBPROC)wglGetProcAddress("glBlendEquationSeparateiARB");
#endif
#ifdef using_glBlendFunciARB
	glBlendFunciARB = (PFNGLBLENDFUNCIARBPROC)wglGetProcAddress("glBlendFunciARB");
#endif
#ifdef using_glBlendFuncSeparateiARB
	glBlendFuncSeparateiARB = (PFNGLBLENDFUNCSEPARATEIARBPROC)wglGetProcAddress("glBlendFuncSeparateiARB");
#endif

#endif

#ifdef define_GL_ARB_draw_elements_base_vertex
	if(!glelp::checkAvailable("GL_ARB_draw_elements_base_vertex")) return false;

#endif

#ifdef define_GL_ARB_draw_indirect
	if(!glelp::checkAvailable("GL_ARB_draw_indirect")) return false;

#endif

#ifdef define_GL_ARB_enhanced_layouts
	if(!glelp::checkAvailable("GL_ARB_enhanced_layouts")) return false;

#endif

#ifdef define_GL_ARB_explicit_attrib_location
	if(!glelp::checkAvailable("GL_ARB_explicit_attrib_location")) return false;

#endif

#ifdef define_GL_ARB_explicit_uniform_location
	if(!glelp::checkAvailable("GL_ARB_explicit_uniform_location")) return false;

#endif

#ifdef define_GL_ARB_fragment_coord_conventions
	if(!glelp::checkAvailable("GL_ARB_fragment_coord_conventions")) return false;

#endif

#ifdef define_GL_ARB_fragment_layer_viewport
	if(!glelp::checkAvailable("GL_ARB_fragment_layer_viewport")) return false;

#endif

#ifdef define_GL_ARB_framebuffer_no_attachments
	if(!glelp::checkAvailable("GL_ARB_framebuffer_no_attachments")) return false;

#endif

#ifdef define_GL_ARB_framebuffer_object
	if(!glelp::checkAvailable("GL_ARB_framebuffer_object")) return false;

#endif

#ifdef define_GL_ARB_framebuffer_sRGB
	if(!glelp::checkAvailable("GL_ARB_framebuffer_sRGB")) return false;

#endif

#ifdef define_GL_ARB_get_program_binary
	if(!glelp::checkAvailable("GL_ARB_get_program_binary")) return false;

#endif

#ifdef define_GL_ARB_gpu_shader5
	if(!glelp::checkAvailable("GL_ARB_gpu_shader5")) return false;

#endif

#ifdef define_GL_ARB_gpu_shader_fp64
	if(!glelp::checkAvailable("GL_ARB_gpu_shader_fp64")) return false;

#endif

#ifdef define_GL_ARB_half_float_vertex
	if(!glelp::checkAvailable("GL_ARB_half_float_vertex")) return false;

#endif

#ifdef define_GL_ARB_imaging
	if(!glelp::checkAvailable("GL_ARB_imaging")) return false;

#endif

#ifdef define_GL_ARB_indirect_parameters
	if(!glelp::checkAvailable("GL_ARB_indirect_parameters")) return false;
#ifdef using_glMultiDrawArraysIndirectCountARB
	glMultiDrawArraysIndirectCountARB = (PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC)wglGetProcAddress("glMultiDrawArraysIndirectCountARB");
#endif
#ifdef using_glMultiDrawElementsIndirectCountARB
	glMultiDrawElementsIndirectCountARB = (PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC)wglGetProcAddress("glMultiDrawElementsIndirectCountARB");
#endif

#endif

#ifdef define_GL_ARB_internalformat_query
	if(!glelp::checkAvailable("GL_ARB_internalformat_query")) return false;

#endif

#ifdef define_GL_ARB_internalformat_query2
	if(!glelp::checkAvailable("GL_ARB_internalformat_query2")) return false;

#endif

#ifdef define_GL_ARB_invalidate_subdata
	if(!glelp::checkAvailable("GL_ARB_invalidate_subdata")) return false;

#endif

#ifdef define_GL_ARB_map_buffer_alignment
	if(!glelp::checkAvailable("GL_ARB_map_buffer_alignment")) return false;

#endif

#ifdef define_GL_ARB_map_buffer_range
	if(!glelp::checkAvailable("GL_ARB_map_buffer_range")) return false;

#endif

#ifdef define_GL_ARB_multi_bind
	if(!glelp::checkAvailable("GL_ARB_multi_bind")) return false;

#endif

#ifdef define_GL_ARB_multi_draw_indirect
	if(!glelp::checkAvailable("GL_ARB_multi_draw_indirect")) return false;

#endif

#ifdef define_GL_ARB_occlusion_query2
	if(!glelp::checkAvailable("GL_ARB_occlusion_query2")) return false;

#endif

#ifdef define_GL_ARB_program_interface_query
	if(!glelp::checkAvailable("GL_ARB_program_interface_query")) return false;

#endif

#ifdef define_GL_ARB_provoking_vertex
	if(!glelp::checkAvailable("GL_ARB_provoking_vertex")) return false;

#endif

#ifdef define_GL_ARB_query_buffer_object
	if(!glelp::checkAvailable("GL_ARB_query_buffer_object")) return false;

#endif

#ifdef define_GL_ARB_robust_buffer_access_behavior
	if(!glelp::checkAvailable("GL_ARB_robust_buffer_access_behavior")) return false;

#endif

#ifdef define_GL_ARB_robustness
	if(!glelp::checkAvailable("GL_ARB_robustness")) return false;
#ifdef using_glGetGraphicsResetStatusARB
	glGetGraphicsResetStatusARB = (PFNGLGETGRAPHICSRESETSTATUSARBPROC)wglGetProcAddress("glGetGraphicsResetStatusARB");
#endif
#ifdef using_glGetnTexImageARB
	glGetnTexImageARB = (PFNGLGETNTEXIMAGEARBPROC)wglGetProcAddress("glGetnTexImageARB");
#endif
#ifdef using_glReadnPixelsARB
	glReadnPixelsARB = (PFNGLREADNPIXELSARBPROC)wglGetProcAddress("glReadnPixelsARB");
#endif
#ifdef using_glGetnCompressedTexImageARB
	glGetnCompressedTexImageARB = (PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC)wglGetProcAddress("glGetnCompressedTexImageARB");
#endif
#ifdef using_glGetnUniformfvARB
	glGetnUniformfvARB = (PFNGLGETNUNIFORMFVARBPROC)wglGetProcAddress("glGetnUniformfvARB");
#endif
#ifdef using_glGetnUniformivARB
	glGetnUniformivARB = (PFNGLGETNUNIFORMIVARBPROC)wglGetProcAddress("glGetnUniformivARB");
#endif
#ifdef using_glGetnUniformuivARB
	glGetnUniformuivARB = (PFNGLGETNUNIFORMUIVARBPROC)wglGetProcAddress("glGetnUniformuivARB");
#endif
#ifdef using_glGetnUniformdvARB
	glGetnUniformdvARB = (PFNGLGETNUNIFORMDVARBPROC)wglGetProcAddress("glGetnUniformdvARB");
#endif

#endif

#ifdef define_GL_ARB_robustness_isolation
	if(!glelp::checkAvailable("GL_ARB_robustness_isolation")) return false;

#endif

#ifdef define_GL_ARB_sample_shading
	if(!glelp::checkAvailable("GL_ARB_sample_shading")) return false;
#ifdef using_glMinSampleShadingARB
	glMinSampleShadingARB = (PFNGLMINSAMPLESHADINGARBPROC)wglGetProcAddress("glMinSampleShadingARB");
#endif

#endif

#ifdef define_GL_ARB_sampler_objects
	if(!glelp::checkAvailable("GL_ARB_sampler_objects")) return false;

#endif

#ifdef define_GL_ARB_seamless_cube_map
	if(!glelp::checkAvailable("GL_ARB_seamless_cube_map")) return false;

#endif

#ifdef define_GL_ARB_seamless_cubemap_per_texture
	if(!glelp::checkAvailable("GL_ARB_seamless_cubemap_per_texture")) return false;

#endif

#ifdef define_GL_ARB_separate_shader_objects
	if(!glelp::checkAvailable("GL_ARB_separate_shader_objects")) return false;

#endif

#ifdef define_GL_ARB_shader_atomic_counters
	if(!glelp::checkAvailable("GL_ARB_shader_atomic_counters")) return false;

#endif

#ifdef define_GL_ARB_shader_bit_encoding
	if(!glelp::checkAvailable("GL_ARB_shader_bit_encoding")) return false;

#endif

#ifdef define_GL_ARB_shader_draw_parameters
	if(!glelp::checkAvailable("GL_ARB_shader_draw_parameters")) return false;

#endif

#ifdef define_GL_ARB_shader_group_vote
	if(!glelp::checkAvailable("GL_ARB_shader_group_vote")) return false;

#endif

#ifdef define_GL_ARB_shader_image_load_store
	if(!glelp::checkAvailable("GL_ARB_shader_image_load_store")) return false;

#endif

#ifdef define_GL_ARB_shader_image_size
	if(!glelp::checkAvailable("GL_ARB_shader_image_size")) return false;

#endif

#ifdef define_GL_ARB_shader_precision
	if(!glelp::checkAvailable("GL_ARB_shader_precision")) return false;

#endif

#ifdef define_GL_ARB_shader_stencil_export
	if(!glelp::checkAvailable("GL_ARB_shader_stencil_export")) return false;

#endif

#ifdef define_GL_ARB_shader_storage_buffer_object
	if(!glelp::checkAvailable("GL_ARB_shader_storage_buffer_object")) return false;

#endif

#ifdef define_GL_ARB_shader_subroutine
	if(!glelp::checkAvailable("GL_ARB_shader_subroutine")) return false;

#endif

#ifdef define_GL_ARB_shading_language_420pack
	if(!glelp::checkAvailable("GL_ARB_shading_language_420pack")) return false;

#endif

#ifdef define_GL_ARB_shading_language_include
	if(!glelp::checkAvailable("GL_ARB_shading_language_include")) return false;
#ifdef using_glNamedStringARB
	glNamedStringARB = (PFNGLNAMEDSTRINGARBPROC)wglGetProcAddress("glNamedStringARB");
#endif
#ifdef using_glDeleteNamedStringARB
	glDeleteNamedStringARB = (PFNGLDELETENAMEDSTRINGARBPROC)wglGetProcAddress("glDeleteNamedStringARB");
#endif
#ifdef using_glCompileShaderIncludeARB
	glCompileShaderIncludeARB = (PFNGLCOMPILESHADERINCLUDEARBPROC)wglGetProcAddress("glCompileShaderIncludeARB");
#endif
#ifdef using_glIsNamedStringARB
	glIsNamedStringARB = (PFNGLISNAMEDSTRINGARBPROC)wglGetProcAddress("glIsNamedStringARB");
#endif
#ifdef using_glGetNamedStringARB
	glGetNamedStringARB = (PFNGLGETNAMEDSTRINGARBPROC)wglGetProcAddress("glGetNamedStringARB");
#endif
#ifdef using_glGetNamedStringivARB
	glGetNamedStringivARB = (PFNGLGETNAMEDSTRINGIVARBPROC)wglGetProcAddress("glGetNamedStringivARB");
#endif

#endif

#ifdef define_GL_ARB_shading_language_packing
	if(!glelp::checkAvailable("GL_ARB_shading_language_packing")) return false;

#endif

#ifdef define_GL_ARB_sparse_texture
	if(!glelp::checkAvailable("GL_ARB_sparse_texture")) return false;
#ifdef using_glTexPageCommitmentARB
	glTexPageCommitmentARB = (PFNGLTEXPAGECOMMITMENTARBPROC)wglGetProcAddress("glTexPageCommitmentARB");
#endif

#endif

#ifdef define_GL_ARB_stencil_texturing
	if(!glelp::checkAvailable("GL_ARB_stencil_texturing")) return false;

#endif

#ifdef define_GL_ARB_sync
	if(!glelp::checkAvailable("GL_ARB_sync")) return false;

#endif

#ifdef define_GL_ARB_tessellation_shader
	if(!glelp::checkAvailable("GL_ARB_tessellation_shader")) return false;

#endif

#ifdef define_GL_ARB_texture_buffer_object_rgb32
	if(!glelp::checkAvailable("GL_ARB_texture_buffer_object_rgb32")) return false;

#endif

#ifdef define_GL_ARB_texture_buffer_range
	if(!glelp::checkAvailable("GL_ARB_texture_buffer_range")) return false;

#endif

#ifdef define_GL_ARB_texture_compression_bptc
	if(!glelp::checkAvailable("GL_ARB_texture_compression_bptc")) return false;

#endif

#ifdef define_GL_ARB_texture_compression_rgtc
	if(!glelp::checkAvailable("GL_ARB_texture_compression_rgtc")) return false;

#endif

#ifdef define_GL_ARB_texture_cube_map_array
	if(!glelp::checkAvailable("GL_ARB_texture_cube_map_array")) return false;

#endif

#ifdef define_GL_ARB_texture_gather
	if(!glelp::checkAvailable("GL_ARB_texture_gather")) return false;

#endif

#ifdef define_GL_ARB_texture_mirror_clamp_to_edge
	if(!glelp::checkAvailable("GL_ARB_texture_mirror_clamp_to_edge")) return false;

#endif

#ifdef define_GL_ARB_texture_multisample
	if(!glelp::checkAvailable("GL_ARB_texture_multisample")) return false;

#endif

#ifdef define_GL_ARB_texture_query_levels
	if(!glelp::checkAvailable("GL_ARB_texture_query_levels")) return false;

#endif

#ifdef define_GL_ARB_texture_query_lod
	if(!glelp::checkAvailable("GL_ARB_texture_query_lod")) return false;

#endif

#ifdef define_GL_ARB_texture_rg
	if(!glelp::checkAvailable("GL_ARB_texture_rg")) return false;

#endif

#ifdef define_GL_ARB_texture_rgb10_a2ui
	if(!glelp::checkAvailable("GL_ARB_texture_rgb10_a2ui")) return false;

#endif

#ifdef define_GL_ARB_texture_stencil8
	if(!glelp::checkAvailable("GL_ARB_texture_stencil8")) return false;

#endif

#ifdef define_GL_ARB_texture_storage
	if(!glelp::checkAvailable("GL_ARB_texture_storage")) return false;

#endif

#ifdef define_GL_ARB_texture_storage_multisample
	if(!glelp::checkAvailable("GL_ARB_texture_storage_multisample")) return false;

#endif

#ifdef define_GL_ARB_texture_swizzle
	if(!glelp::checkAvailable("GL_ARB_texture_swizzle")) return false;

#endif

#ifdef define_GL_ARB_texture_view
	if(!glelp::checkAvailable("GL_ARB_texture_view")) return false;

#endif

#ifdef define_GL_ARB_timer_query
	if(!glelp::checkAvailable("GL_ARB_timer_query")) return false;

#endif

#ifdef define_GL_ARB_transform_feedback2
	if(!glelp::checkAvailable("GL_ARB_transform_feedback2")) return false;

#endif

#ifdef define_GL_ARB_transform_feedback3
	if(!glelp::checkAvailable("GL_ARB_transform_feedback3")) return false;

#endif

#ifdef define_GL_ARB_transform_feedback_instanced
	if(!glelp::checkAvailable("GL_ARB_transform_feedback_instanced")) return false;

#endif

#ifdef define_GL_ARB_uniform_buffer_object
	if(!glelp::checkAvailable("GL_ARB_uniform_buffer_object")) return false;

#endif

#ifdef define_GL_ARB_vertex_array_bgra
	if(!glelp::checkAvailable("GL_ARB_vertex_array_bgra")) return false;

#endif

#ifdef define_GL_ARB_vertex_array_object
	if(!glelp::checkAvailable("GL_ARB_vertex_array_object")) return false;

#endif

#ifdef define_GL_ARB_vertex_attrib_64bit
	if(!glelp::checkAvailable("GL_ARB_vertex_attrib_64bit")) return false;

#endif

#ifdef define_GL_ARB_vertex_attrib_binding
	if(!glelp::checkAvailable("GL_ARB_vertex_attrib_binding")) return false;

#endif

#ifdef define_GL_ARB_vertex_type_10f_11f_11f_rev
	if(!glelp::checkAvailable("GL_ARB_vertex_type_10f_11f_11f_rev")) return false;

#endif

#ifdef define_GL_ARB_vertex_type_2_10_10_10_rev
	if(!glelp::checkAvailable("GL_ARB_vertex_type_2_10_10_10_rev")) return false;

#endif

#ifdef define_GL_ARB_viewport_array
	if(!glelp::checkAvailable("GL_ARB_viewport_array")) return false;

#endif

#ifdef define_GL_KHR_debug
	if(!glelp::checkAvailable("GL_KHR_debug")) return false;

#endif

#ifdef define_GL_KHR_texture_compression_astc_hdr
	if(!glelp::checkAvailable("GL_KHR_texture_compression_astc_hdr")) return false;

#endif

#ifdef define_GL_KHR_texture_compression_astc_ldr
	if(!glelp::checkAvailable("GL_KHR_texture_compression_astc_ldr")) return false;

#endif

	return true;
}
